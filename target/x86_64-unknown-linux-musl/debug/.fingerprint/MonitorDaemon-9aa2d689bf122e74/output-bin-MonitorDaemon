{"message":"variant `ODD_LENGTH_HEX_STRING` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5141,"byte_end":5162,"line_start":234,"line_end":234,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tODD_LENGTH_HEX_STRING(usize),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5141,"byte_end":5162,"line_start":234,"line_end":234,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tODD_LENGTH_HEX_STRING(usize),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"OddLengthHexString","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ODD_LENGTH_HEX_STRING` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:234:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ODD_LENGTH_HEX_STRING(usize),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OddLengthHexString`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"variant `PARSE_INT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5172,"byte_end":5187,"line_start":235,"line_end":235,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tPARSE_INT_ERROR(num::ParseIntError),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5172,"byte_end":5187,"line_start":235,"line_end":235,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tPARSE_INT_ERROR(num::ParseIntError),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"ParseIntError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PARSE_INT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:235:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PARSE_INT_ERROR(num::ParseIntError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ParseIntError`\u001b[0m\n\n"}
{"message":"variant `CONVERT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5210,"byte_end":5223,"line_start":236,"line_end":236,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCONVERT_ERROR(String),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5210,"byte_end":5223,"line_start":236,"line_end":236,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCONVERT_ERROR(String),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"ConvertError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CONVERT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:236:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CONVERT_ERROR(String),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ConvertError`\u001b[0m\n\n"}
{"message":"variant `LOAD_CONFIG_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1946,"byte_end":1963,"line_start":84,"line_end":84,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tLOAD_CONFIG_ERROR(ConfigFileError),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1946,"byte_end":1963,"line_start":84,"line_end":84,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tLOAD_CONFIG_ERROR(ConfigFileError),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"LoadConfigError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LOAD_CONFIG_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:84:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LOAD_CONFIG_ERROR(ConfigFileError),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LoadConfigError`\u001b[0m\n\n"}
{"message":"variant `UNINITIALIZED_CONFIG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1983,"byte_end":2003,"line_start":85,"line_end":85,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tUNINITIALIZED_CONFIG,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1983,"byte_end":2003,"line_start":85,"line_end":85,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tUNINITIALIZED_CONFIG,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"UninitializedConfig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNINITIALIZED_CONFIG` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:85:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNINITIALIZED_CONFIG,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UninitializedConfig`\u001b[0m\n\n"}
{"message":"variant `NEW_FAMILY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6079,"byte_end":6089,"line_start":254,"line_end":254,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tNEW_FAMILY = 1,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6079,"byte_end":6089,"line_start":254,"line_end":254,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tNEW_FAMILY = 1,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"NewFamily","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NEW_FAMILY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:254:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NEW_FAMILY = 1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NewFamily`\u001b[0m\n\n"}
{"message":"variant `DELETE_FAMILY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6096,"byte_end":6109,"line_start":255,"line_end":255,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tDELETE_FAMILY = 2,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6096,"byte_end":6109,"line_start":255,"line_end":255,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tDELETE_FAMILY = 2,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"DeleteFamily","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DELETE_FAMILY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:255:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DELETE_FAMILY = 2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeleteFamily`\u001b[0m\n\n"}
{"message":"variant `GET_FAMILY_ID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6116,"byte_end":6129,"line_start":256,"line_end":256,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGET_FAMILY_ID = 3,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6116,"byte_end":6129,"line_start":256,"line_end":256,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGET_FAMILY_ID = 3,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"GetFamilyId","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_FAMILY_ID` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:256:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_FAMILY_ID = 3,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetFamilyId`\u001b[0m\n\n"}
{"message":"variant `NEW_OPERATION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6136,"byte_end":6149,"line_start":257,"line_end":257,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tNEW_OPERATION = 4,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6136,"byte_end":6149,"line_start":257,"line_end":257,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tNEW_OPERATION = 4,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"NewOperation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NEW_OPERATION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:257:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NEW_OPERATION = 4,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NewOperation`\u001b[0m\n\n"}
{"message":"variant `DELETE_OPERATION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6156,"byte_end":6172,"line_start":258,"line_end":258,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tDELETE_OPERATION = 5,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6156,"byte_end":6172,"line_start":258,"line_end":258,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tDELETE_OPERATION = 5,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"DeleteOperation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DELETE_OPERATION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:258:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DELETE_OPERATION = 5,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeleteOperation`\u001b[0m\n\n"}
{"message":"variant `GET_OPERATION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6179,"byte_end":6192,"line_start":259,"line_end":259,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGET_OPERATION = 6,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6179,"byte_end":6192,"line_start":259,"line_end":259,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGET_OPERATION = 6,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"GetOperation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_OPERATION` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:259:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_OPERATION = 6,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetOperation`\u001b[0m\n\n"}
{"message":"variant `NEW_MULTICAST_GROUP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6199,"byte_end":6218,"line_start":260,"line_end":260,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tNEW_MULTICAST_GROUP = 7,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6199,"byte_end":6218,"line_start":260,"line_end":260,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tNEW_MULTICAST_GROUP = 7,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"NewMulticastGroup","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NEW_MULTICAST_GROUP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:260:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NEW_MULTICAST_GROUP = 7,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NewMulticastGroup`\u001b[0m\n\n"}
{"message":"variant `DELETE_MULTICAST_GROUP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6225,"byte_end":6247,"line_start":261,"line_end":261,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tDELETE_MULTICAST_GROUP = 8,","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6225,"byte_end":6247,"line_start":261,"line_end":261,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tDELETE_MULTICAST_GROUP = 8,","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"DeleteMulticastGroup","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DELETE_MULTICAST_GROUP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:261:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DELETE_MULTICAST_GROUP = 8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeleteMulticastGroup`\u001b[0m\n\n"}
{"message":"variant `GET_MULTICAST_GROUP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6254,"byte_end":6273,"line_start":262,"line_end":262,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tGET_MULTICAST_GROUP = 9,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6254,"byte_end":6273,"line_start":262,"line_end":262,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tGET_MULTICAST_GROUP = 9,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"GetMulticastGroup","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_MULTICAST_GROUP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:262:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_MULTICAST_GROUP = 9,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetMulticastGroup`\u001b[0m\n\n"}
{"message":"variant `GET_POLICY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6280,"byte_end":6290,"line_start":263,"line_end":263,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tGET_POLICY = 10,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6280,"byte_end":6290,"line_start":263,"line_end":263,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tGET_POLICY = 10,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"GetPolicy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_POLICY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:263:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_POLICY = 10,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetPolicy`\u001b[0m\n\n"}
{"message":"variant `FAMILY_NAME` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10286,"byte_end":10297,"line_start":403,"line_end":403,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tFAMILY_NAME(String),","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":10286,"byte_end":10297,"line_start":403,"line_end":403,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tFAMILY_NAME(String),","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"FamilyName","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FAMILY_NAME` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:403:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FAMILY_NAME(String),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FamilyName`\u001b[0m\n\n"}
{"message":"variant `FAMILY_ID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10308,"byte_end":10317,"line_start":404,"line_end":404,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tFAMILY_ID(u16),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":10308,"byte_end":10317,"line_start":404,"line_end":404,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tFAMILY_ID(u16),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"FamilyId","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FAMILY_ID` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:404:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FAMILY_ID(u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FamilyId`\u001b[0m\n\n"}
{"message":"variant `HEADER_SIZE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10340,"byte_end":10351,"line_start":406,"line_end":406,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tHEADER_SIZE(u32),","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":10340,"byte_end":10351,"line_start":406,"line_end":406,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tHEADER_SIZE(u32),","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"HeaderSize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `HEADER_SIZE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:406:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HEADER_SIZE(u32),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `HeaderSize`\u001b[0m\n\n"}
{"message":"variant `MAX_ATTRIBUTE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10359,"byte_end":10372,"line_start":407,"line_end":407,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tMAX_ATTRIBUTE(u32),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":10359,"byte_end":10372,"line_start":407,"line_end":407,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tMAX_ATTRIBUTE(u32),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"MaxAttribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MAX_ATTRIBUTE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:407:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MAX_ATTRIBUTE(u32),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MaxAttribute`\u001b[0m\n\n"}
{"message":"variant `FAMILY_ID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14286,"byte_end":14295,"line_start":513,"line_end":513,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tFAMILY_ID = 1,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14286,"byte_end":14295,"line_start":513,"line_end":513,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tFAMILY_ID = 1,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"FamilyId","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FAMILY_ID` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:513:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FAMILY_ID = 1,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FamilyId`\u001b[0m\n\n"}
{"message":"variant `FAMILY_NAME` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14302,"byte_end":14313,"line_start":514,"line_end":514,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tFAMILY_NAME = 2,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14302,"byte_end":14313,"line_start":514,"line_end":514,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tFAMILY_NAME = 2,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"FamilyName","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FAMILY_NAME` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:514:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m514\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FAMILY_NAME = 2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FamilyName`\u001b[0m\n\n"}
{"message":"variant `HEADER_SIZE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14334,"byte_end":14345,"line_start":516,"line_end":516,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tHEADER_SIZE = 4,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14334,"byte_end":14345,"line_start":516,"line_end":516,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tHEADER_SIZE = 4,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"HeaderSize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `HEADER_SIZE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:516:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HEADER_SIZE = 4,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `HeaderSize`\u001b[0m\n\n"}
{"message":"variant `MAX_ATTRIBUTE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14352,"byte_end":14365,"line_start":517,"line_end":517,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tMAX_ATTRIBUTE = 5,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14352,"byte_end":14365,"line_start":517,"line_end":517,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tMAX_ATTRIBUTE = 5,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"MaxAttribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MAX_ATTRIBUTE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:517:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MAX_ATTRIBUTE = 5,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MaxAttribute`\u001b[0m\n\n"}
{"message":"variant `MULTICAST_GROUPS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14486,"byte_end":14502,"line_start":519,"line_end":519,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tMULTICAST_GROUPS = 7,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14486,"byte_end":14502,"line_start":519,"line_end":519,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tMULTICAST_GROUPS = 7,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"MulticastGroups","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MULTICAST_GROUPS` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:519:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m519\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MULTICAST_GROUPS = 7,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MulticastGroups`\u001b[0m\n\n"}
{"message":"variant `OP_POLICY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14522,"byte_end":14531,"line_start":521,"line_end":521,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tOP_POLICY = 9,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14522,"byte_end":14531,"line_start":521,"line_end":521,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tOP_POLICY = 9,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"OpPolicy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OP_POLICY` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:521:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OP_POLICY = 9,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OpPolicy`\u001b[0m\n\n"}
{"message":"variant `NETLINK_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18527,"byte_end":18540,"line_start":678,"line_end":678,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tNETLINK_ERROR(NetlinkError),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18527,"byte_end":18540,"line_start":678,"line_end":678,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tNETLINK_ERROR(NetlinkError),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"NetlinkError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NETLINK_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:678:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m678\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NETLINK_ERROR(NetlinkError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NetlinkError`\u001b[0m\n\n"}
{"message":"variant `HEADER_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18557,"byte_end":18569,"line_start":679,"line_end":679,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tHEADER_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18557,"byte_end":18569,"line_start":679,"line_end":679,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tHEADER_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"HeaderError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `HEADER_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:679:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m679\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    HEADER_ERROR(Vec<u8>),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `HeaderError`\u001b[0m\n\n"}
{"message":"variant `CONTROL_MESSAGE_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18581,"byte_end":18602,"line_start":680,"line_end":680,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tCONTROL_MESSAGE_ERROR(GenericNetlinkMessage),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18581,"byte_end":18602,"line_start":680,"line_end":680,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tCONTROL_MESSAGE_ERROR(GenericNetlinkMessage),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"ControlMessageError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CONTROL_MESSAGE_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:680:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m680\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CONTROL_MESSAGE_ERROR(GenericNetlinkMessage),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ControlMessageError`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_CONTROL_COMMAND` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18628,"byte_end":18651,"line_start":681,"line_end":681,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tUNKNOWN_CONTROL_COMMAND(GenericNetlinkMessageCommand),","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18628,"byte_end":18651,"line_start":681,"line_end":681,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tUNKNOWN_CONTROL_COMMAND(GenericNetlinkMessageCommand),","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":"UnknownControlCommand","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_CONTROL_COMMAND` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:681:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m681\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_CONTROL_COMMAND(GenericNetlinkMessageCommand),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownControlCommand`\u001b[0m\n\n"}
{"message":"variant `UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18684,"byte_end":18718,"line_start":682,"line_end":682,"column_start":2,"column_end":36,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(GenericNetlinkControlMessageAttributeType),","highlight_start":2,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18684,"byte_end":18718,"line_start":682,"line_end":682,"column_start":2,"column_end":36,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(GenericNetlinkControlMessageAttributeType),","highlight_start":2,"highlight_end":36}],"label":null,"suggested_replacement":"UnsupportedControlAttributeType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:682:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m682\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(GenericNetlinkControlMessageAttributeType),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnsupportedControlAttributeType`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_ATTRIBUTE_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18764,"byte_end":18786,"line_start":683,"line_end":683,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tUNKNOWN_ATTRIBUTE_TYPE(GenericNetlinkMessageAttributeType),","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18764,"byte_end":18786,"line_start":683,"line_end":683,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tUNKNOWN_ATTRIBUTE_TYPE(GenericNetlinkMessageAttributeType),","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"UnknownAttributeType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_ATTRIBUTE_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:683:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m683\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_ATTRIBUTE_TYPE(GenericNetlinkMessageAttributeType),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownAttributeType`\u001b[0m\n\n"}
{"message":"variant `OP_ATTRIBUTE_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18825,"byte_end":18843,"line_start":684,"line_end":684,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tOP_ATTRIBUTE_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18825,"byte_end":18843,"line_start":684,"line_end":684,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tOP_ATTRIBUTE_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"OpAttributeError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OP_ATTRIBUTE_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:684:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m684\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OP_ATTRIBUTE_ERROR(Vec<u8>),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OpAttributeError`\u001b[0m\n\n"}
{"message":"variant `OP_ATTRIBUTE_COMPONENT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18855,"byte_end":18883,"line_start":685,"line_end":685,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tOP_ATTRIBUTE_COMPONENT_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18855,"byte_end":18883,"line_start":685,"line_end":685,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tOP_ATTRIBUTE_COMPONENT_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":"OpAttributeComponentError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `OP_ATTRIBUTE_COMPONENT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:685:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m685\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    OP_ATTRIBUTE_COMPONENT_ERROR(Vec<u8>),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `OpAttributeComponentError`\u001b[0m\n\n"}
{"message":"variant `UNIMPLEMENTED_NETLINK_MESSAGE_PAYLOAD` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18895,"byte_end":18932,"line_start":686,"line_end":686,"column_start":2,"column_end":39,"is_primary":true,"text":[{"text":"\tUNIMPLEMENTED_NETLINK_MESSAGE_PAYLOAD(NetlinkMessagePayload),","highlight_start":2,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18895,"byte_end":18932,"line_start":686,"line_end":686,"column_start":2,"column_end":39,"is_primary":true,"text":[{"text":"\tUNIMPLEMENTED_NETLINK_MESSAGE_PAYLOAD(NetlinkMessagePayload),","highlight_start":2,"highlight_end":39}],"label":null,"suggested_replacement":"UnimplementedNetlinkMessagePayload","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNIMPLEMENTED_NETLINK_MESSAGE_PAYLOAD` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:686:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m686\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNIMPLEMENTED_NETLINK_MESSAGE_PAYLOAD(NetlinkMessagePayload),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnimplementedNetlinkMessagePayload`\u001b[0m\n\n"}
{"message":"variant `UTF8_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18958,"byte_end":18968,"line_start":687,"line_end":687,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tUTF8_ERROR(Utf8Error),","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18958,"byte_end":18968,"line_start":687,"line_end":687,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tUTF8_ERROR(Utf8Error),","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"Utf8Error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UTF8_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:687:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m687\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UTF8_ERROR(Utf8Error),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Utf8Error`\u001b[0m\n\n"}
{"message":"variant `SOCK_DIAG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3030,"byte_end":3039,"line_start":94,"line_end":94,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SOCK_DIAG = 4,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3030,"byte_end":3039,"line_start":94,"line_end":94,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    SOCK_DIAG = 4,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"SockDiag","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SOCK_DIAG` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:94:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SOCK_DIAG = 4,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SockDiag`\u001b[0m\n\n"}
{"message":"variant `NETFILTER_ULOG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3049,"byte_end":3063,"line_start":95,"line_end":95,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    NETFILTER_ULOG = 5,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3049,"byte_end":3063,"line_start":95,"line_end":95,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    NETFILTER_ULOG = 5,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"NetfilterUlog","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NETFILTER_ULOG` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:95:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NETFILTER_ULOG = 5,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NetfilterUlog`\u001b[0m\n\n"}
{"message":"variant `FIB_LOOKUP` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3134,"byte_end":3144,"line_start":100,"line_end":100,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    FIB_LOOKUP = 10,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3134,"byte_end":3144,"line_start":100,"line_end":100,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    FIB_LOOKUP = 10,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"FibLookup","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `FIB_LOOKUP` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:100:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FIB_LOOKUP = 10,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `FibLookup`\u001b[0m\n\n"}
{"message":"variant `IP6_FIREWALL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3195,"byte_end":3207,"line_start":103,"line_end":103,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    IP6_FIREWALL = 13,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3195,"byte_end":3207,"line_start":103,"line_end":103,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    IP6_FIREWALL = 13,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"Ip6Firewall","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IP6_FIREWALL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:103:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IP6_FIREWALL = 13,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ip6Firewall`\u001b[0m\n\n"}
{"message":"variant `DECNET_ROUTING_MESSAGE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3218,"byte_end":3240,"line_start":104,"line_end":104,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    DECNET_ROUTING_MESSAGE = 14,","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3218,"byte_end":3240,"line_start":104,"line_end":104,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    DECNET_ROUTING_MESSAGE = 14,","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":"DecnetRoutingMessage","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DECNET_ROUTING_MESSAGE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:104:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DECNET_ROUTING_MESSAGE = 14,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DecnetRoutingMessage`\u001b[0m\n\n"}
{"message":"variant `KOBJECT_UEVENT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3251,"byte_end":3265,"line_start":105,"line_end":105,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    KOBJECT_UEVENT = 15,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3251,"byte_end":3265,"line_start":105,"line_end":105,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    KOBJECT_UEVENT = 15,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"KobjectUevent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `KOBJECT_UEVENT` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:105:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    KOBJECT_UEVENT = 15,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `KobjectUevent`\u001b[0m\n\n"}
{"message":"variant `SCSI_TRANSPORT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3294,"byte_end":3308,"line_start":107,"line_end":107,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    SCSI_TRANSPORT = 18,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3294,"byte_end":3308,"line_start":107,"line_end":107,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    SCSI_TRANSPORT = 18,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"ScsiTransport","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `SCSI_TRANSPORT` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:107:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SCSI_TRANSPORT = 18,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ScsiTransport`\u001b[0m\n\n"}
{"message":"variant `DUMP_INCONSISTENT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":5703,"byte_end":5720,"line_start":195,"line_end":195,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    DUMP_INCONSISTENT, // Dump was inconsistent due to sequence change","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":5703,"byte_end":5720,"line_start":195,"line_end":195,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    DUMP_INCONSISTENT, // Dump was inconsistent due to sequence change","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"DumpInconsistent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DUMP_INCONSISTENT` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:195:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DUMP_INCONSISTENT, // Dump was inconsistent due to sequence change\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DumpInconsistent`\u001b[0m\n\n"}
{"message":"variant `DUMP_FILTERED` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":5774,"byte_end":5787,"line_start":196,"line_end":196,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    DUMP_FILTERED,     // Dump was filtered as requested","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":5774,"byte_end":5787,"line_start":196,"line_end":196,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    DUMP_FILTERED,     // Dump was filtered as requested","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"DumpFiltered","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DUMP_FILTERED` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:196:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DUMP_FILTERED,     // Dump was filtered as requested\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DumpFiltered`\u001b[0m\n\n"}
{"message":"variant `NO_RECURSIVE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":6194,"byte_end":6206,"line_start":211,"line_end":211,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    NO_RECURSIVE, // Do not delete recursively","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":6194,"byte_end":6206,"line_start":211,"line_end":211,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    NO_RECURSIVE, // Do not delete recursively","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"NoRecursive","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NO_RECURSIVE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:211:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NO_RECURSIVE, // Do not delete recursively\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NoRecursive`\u001b[0m\n\n"}
{"message":"variant `ACK_TLVS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":6307,"byte_end":6315,"line_start":215,"line_end":215,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    ACK_TLVS, // extended ACK TVLs were included","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":6307,"byte_end":6315,"line_start":215,"line_end":215,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    ACK_TLVS, // extended ACK TVLs were included","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"AckTlvs","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ACK_TLVS` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:215:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ACK_TLVS, // extended ACK TVLs were included\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AckTlvs`\u001b[0m\n\n"}
{"message":"variant `IO_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16317,"byte_end":16325,"line_start":555,"line_end":555,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16317,"byte_end":16325,"line_start":555,"line_end":555,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"IoError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IO_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:555:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IO_ERROR(io::Error),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IoError`\u001b[0m\n\n"}
{"message":"variant `GENERIC_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16342,"byte_end":16355,"line_start":556,"line_end":556,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    GENERIC_ERROR(Box<GenericError>),","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16342,"byte_end":16355,"line_start":556,"line_end":556,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    GENERIC_ERROR(Box<GenericError>),","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"GenericError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GENERIC_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:556:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GENERIC_ERROR(Box<GenericError>),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GenericError`\u001b[0m\n\n"}
{"message":"variant `MESSAGE_HEADER_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16380,"byte_end":16400,"line_start":557,"line_end":557,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MESSAGE_HEADER_ERROR,","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16380,"byte_end":16400,"line_start":557,"line_end":557,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MESSAGE_HEADER_ERROR,","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":"MessageHeaderError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MESSAGE_HEADER_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:557:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m557\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MESSAGE_HEADER_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MessageHeaderError`\u001b[0m\n\n"}
{"message":"variant `ATTRIBUTE_HEADER_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16406,"byte_end":16428,"line_start":558,"line_end":558,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    ATTRIBUTE_HEADER_ERROR,","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16406,"byte_end":16428,"line_start":558,"line_end":558,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    ATTRIBUTE_HEADER_ERROR,","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":"AttributeHeaderError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `ATTRIBUTE_HEADER_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:558:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m558\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ATTRIBUTE_HEADER_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AttributeHeaderError`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_MESSAGE_FLAGS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16434,"byte_end":16455,"line_start":559,"line_end":559,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    UNKNOWN_MESSAGE_FLAGS(u16),","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16434,"byte_end":16455,"line_start":559,"line_end":559,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    UNKNOWN_MESSAGE_FLAGS(u16),","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"UnknownMessageFlags","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_MESSAGE_FLAGS` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:559:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m559\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_MESSAGE_FLAGS(u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownMessageFlags`\u001b[0m\n\n"}
{"message":"variant `UNSUPPORTED_PROTOCOL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16466,"byte_end":16486,"line_start":560,"line_end":560,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    UNSUPPORTED_PROTOCOL(NetlinkProtocol),","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16466,"byte_end":16486,"line_start":560,"line_end":560,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    UNSUPPORTED_PROTOCOL(NetlinkProtocol),","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":"UnsupportedProtocol","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNSUPPORTED_PROTOCOL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:560:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m560\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNSUPPORTED_PROTOCOL(NetlinkProtocol),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnsupportedProtocol`\u001b[0m\n\n"}
{"message":"variant `KERNEL_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16509,"byte_end":16521,"line_start":561,"line_end":561,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    KERNEL_ERROR(i32),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16509,"byte_end":16521,"line_start":561,"line_end":561,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    KERNEL_ERROR(i32),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"KernelError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `KERNEL_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:561:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    KERNEL_ERROR(i32),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `KernelError`\u001b[0m\n\n"}
{"message":"variant `CONVERT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25264,"byte_end":25277,"line_start":881,"line_end":881,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCONVERT_ERROR,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25264,"byte_end":25277,"line_start":881,"line_end":881,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tCONVERT_ERROR,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"ConvertError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CONVERT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:881:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m881\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CONVERT_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ConvertError`\u001b[0m\n\n"}
{"message":"variant `CHANNEL_SEND_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25280,"byte_end":25298,"line_start":882,"line_end":882,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tCHANNEL_SEND_ERROR,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25280,"byte_end":25298,"line_start":882,"line_end":882,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tCHANNEL_SEND_ERROR,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"ChannelSendError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHANNEL_SEND_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:882:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m882\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHANNEL_SEND_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChannelSendError`\u001b[0m\n\n"}
{"message":"variant `CHANNEL_RECV_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25301,"byte_end":25319,"line_start":883,"line_end":883,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tCHANNEL_RECV_ERROR,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25301,"byte_end":25319,"line_start":883,"line_end":883,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tCHANNEL_RECV_ERROR,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"ChannelRecvError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CHANNEL_RECV_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:883:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m883\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CHANNEL_RECV_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ChannelRecvError`\u001b[0m\n\n"}
{"message":"variant `PARSE_INT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25322,"byte_end":25337,"line_start":884,"line_end":884,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tPARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25322,"byte_end":25337,"line_start":884,"line_end":884,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tPARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"ParseIntError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PARSE_INT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:884:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m884\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PARSE_INT_ERROR(std::num::ParseIntError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ParseIntError`\u001b[0m\n\n"}
{"message":"variant `PCAP_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25365,"byte_end":25375,"line_start":885,"line_end":885,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tPCAP_ERROR(pcap::Error),","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25365,"byte_end":25375,"line_start":885,"line_end":885,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tPCAP_ERROR(pcap::Error),","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"PcapError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PCAP_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:885:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m885\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PCAP_ERROR(pcap::Error),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PcapError`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_VLAN_TAG` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25391,"byte_end":25407,"line_start":886,"line_end":886,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tUNKNOWN_VLAN_TAG(u16),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25391,"byte_end":25407,"line_start":886,"line_end":886,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tUNKNOWN_VLAN_TAG(u16),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"UnknownVlanTag","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_VLAN_TAG` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:886:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m886\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_VLAN_TAG(u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownVlanTag`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_PROTOCOL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25415,"byte_end":25431,"line_start":887,"line_end":887,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tUNKNOWN_PROTOCOL(u16),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25415,"byte_end":25431,"line_start":887,"line_end":887,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tUNKNOWN_PROTOCOL(u16),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"UnknownProtocol","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_PROTOCOL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:887:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m887\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_PROTOCOL(u16),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownProtocol`\u001b[0m\n\n"}
{"message":"variant `IPV4_PACKET_LENGTH_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25439,"byte_end":25463,"line_start":888,"line_end":888,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tIPV4_PACKET_LENGTH_ERROR(usize),","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25439,"byte_end":25463,"line_start":888,"line_end":888,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tIPV4_PACKET_LENGTH_ERROR(usize),","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"Ipv4PacketLengthError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IPV4_PACKET_LENGTH_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:888:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m888\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPV4_PACKET_LENGTH_ERROR(usize),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ipv4PacketLengthError`\u001b[0m\n\n"}
{"message":"variant `IPV4_PACKET_VERSION_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25473,"byte_end":25498,"line_start":889,"line_end":889,"column_start":2,"column_end":27,"is_primary":true,"text":[{"text":"\tIPV4_PACKET_VERSION_ERROR(u8),","highlight_start":2,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25473,"byte_end":25498,"line_start":889,"line_end":889,"column_start":2,"column_end":27,"is_primary":true,"text":[{"text":"\tIPV4_PACKET_VERSION_ERROR(u8),","highlight_start":2,"highlight_end":27}],"label":null,"suggested_replacement":"Ipv4PacketVersionError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IPV4_PACKET_VERSION_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:889:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPV4_PACKET_VERSION_ERROR(u8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ipv4PacketVersionError`\u001b[0m\n\n"}
{"message":"variant `IPV6_PACKET_LENGTH_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25505,"byte_end":25529,"line_start":890,"line_end":890,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tIPV6_PACKET_LENGTH_ERROR(usize),","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25505,"byte_end":25529,"line_start":890,"line_end":890,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tIPV6_PACKET_LENGTH_ERROR(usize),","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"Ipv6PacketLengthError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IPV6_PACKET_LENGTH_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:890:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m890\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPV6_PACKET_LENGTH_ERROR(usize),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ipv6PacketLengthError`\u001b[0m\n\n"}
{"message":"variant `IPV6_PACKET_VERSION_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25539,"byte_end":25564,"line_start":891,"line_end":891,"column_start":2,"column_end":27,"is_primary":true,"text":[{"text":"\tIPV6_PACKET_VERSION_ERROR(u8),","highlight_start":2,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25539,"byte_end":25564,"line_start":891,"line_end":891,"column_start":2,"column_end":27,"is_primary":true,"text":[{"text":"\tIPV6_PACKET_VERSION_ERROR(u8),","highlight_start":2,"highlight_end":27}],"label":null,"suggested_replacement":"Ipv6PacketVersionError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IPV6_PACKET_VERSION_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:891:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m891\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPV6_PACKET_VERSION_ERROR(u8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ipv6PacketVersionError`\u001b[0m\n\n"}
{"message":"variant `IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25571,"byte_end":25604,"line_start":892,"line_end":892,"column_start":2,"column_end":35,"is_primary":true,"text":[{"text":"\tIPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(u8),","highlight_start":2,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25571,"byte_end":25604,"line_start":892,"line_end":892,"column_start":2,"column_end":35,"is_primary":true,"text":[{"text":"\tIPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(u8),","highlight_start":2,"highlight_end":35}],"label":null,"suggested_replacement":"Ipv6UnknownOptionalHeaderType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:892:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m892\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(u8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Ipv6UnknownOptionalHeaderType`\u001b[0m\n\n"}
{"message":"variant `POISON_MUTEX` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25611,"byte_end":25623,"line_start":893,"line_end":893,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tPOISON_MUTEX,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25611,"byte_end":25623,"line_start":893,"line_end":893,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tPOISON_MUTEX,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"PoisonMutex","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `POISON_MUTEX` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:893:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m893\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    POISON_MUTEX,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PoisonMutex`\u001b[0m\n\n"}
{"message":"variant `UNSUPPORTED_PROTOCOL` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25626,"byte_end":25646,"line_start":894,"line_end":894,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_PROTOCOL(u8),","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25626,"byte_end":25646,"line_start":894,"line_end":894,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_PROTOCOL(u8),","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"UnsupportedProtocol","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNSUPPORTED_PROTOCOL` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:894:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m894\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNSUPPORTED_PROTOCOL(u8),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnsupportedProtocol`\u001b[0m\n\n"}
{"message":"variant `IO_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25653,"byte_end":25661,"line_start":895,"line_end":895,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tIO_ERROR(io::Error),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25653,"byte_end":25661,"line_start":895,"line_end":895,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tIO_ERROR(io::Error),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"IoError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IO_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:895:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m895\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IO_ERROR(io::Error),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IoError`\u001b[0m\n\n"}
{"message":"variant `COMMON_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25675,"byte_end":25687,"line_start":896,"line_end":896,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCOMMON_ERROR(CommonError),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25675,"byte_end":25687,"line_start":896,"line_end":896,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCOMMON_ERROR(CommonError),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"CommonError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `COMMON_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:896:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    COMMON_ERROR(CommonError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CommonError`\u001b[0m\n\n"}
{"message":"variant `CONFIG_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":25703,"byte_end":25715,"line_start":897,"line_end":897,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCONFIG_ERROR(ConfigError),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":25703,"byte_end":25715,"line_start":897,"line_end":897,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tCONFIG_ERROR(ConfigError),","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"ConfigError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CONFIG_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:897:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CONFIG_ERROR(ConfigError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ConfigError`\u001b[0m\n\n"}
{"message":"variant `IO_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39372,"byte_end":39380,"line_start":1364,"line_end":1364,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39372,"byte_end":39380,"line_start":1364,"line_end":1364,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"IoError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IO_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1364:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IO_ERROR(io::Error),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IoError`\u001b[0m\n\n"}
{"message":"variant `TASKSTATS_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39397,"byte_end":39412,"line_start":1365,"line_end":1365,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    TASKSTATS_ERROR(TaskStatsError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39397,"byte_end":39412,"line_start":1365,"line_end":1365,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    TASKSTATS_ERROR(TaskStatsError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"TaskstatsError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `TASKSTATS_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1365:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TASKSTATS_ERROR(TaskStatsError),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `TaskstatsError`\u001b[0m\n\n"}
{"message":"variant `PARSE_INT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39434,"byte_end":39449,"line_start":1366,"line_end":1366,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    PARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39434,"byte_end":39449,"line_start":1366,"line_end":1366,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    PARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"ParseIntError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PARSE_INT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1366:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PARSE_INT_ERROR(std::num::ParseIntError),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ParseIntError`\u001b[0m\n\n"}
{"message":"variant `UID_MAP_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39480,"byte_end":39493,"line_start":1367,"line_end":1367,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    UID_MAP_ERROR,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39480,"byte_end":39493,"line_start":1367,"line_end":1367,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    UID_MAP_ERROR,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"UidMapError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UID_MAP_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1367:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UID_MAP_ERROR,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UidMapError`\u001b[0m\n\n"}
{"message":"variant `GID_MAP_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39499,"byte_end":39512,"line_start":1368,"line_end":1368,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    GID_MAP_ERROR,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39499,"byte_end":39512,"line_start":1368,"line_end":1368,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    GID_MAP_ERROR,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"GidMapError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GID_MAP_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1368:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GID_MAP_ERROR,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GidMapError`\u001b[0m\n\n"}
{"message":"variant `COMMON_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":39518,"byte_end":39530,"line_start":1369,"line_end":1369,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    COMMON_ERROR(CommonError),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":39518,"byte_end":39530,"line_start":1369,"line_end":1369,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    COMMON_ERROR(CommonError),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"CommonError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `COMMON_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1369:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    COMMON_ERROR(CommonError),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CommonError`\u001b[0m\n\n"}
{"message":"variant `REGISTER_CPUMASK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":29726,"byte_end":29742,"line_start":1016,"line_end":1016,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tREGISTER_CPUMASK(String),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":29726,"byte_end":29742,"line_start":1016,"line_end":1016,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tREGISTER_CPUMASK(String),","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"RegisterCpumask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `REGISTER_CPUMASK` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1016:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1016\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    REGISTER_CPUMASK(String),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RegisterCpumask`\u001b[0m\n\n"}
{"message":"variant `DEREGISTER_CPUMASK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":29753,"byte_end":29771,"line_start":1017,"line_end":1017,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tDEREGISTER_CPUMASK(String),","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":29753,"byte_end":29771,"line_start":1017,"line_end":1017,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tDEREGISTER_CPUMASK(String),","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"DeregisterCpumask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DEREGISTER_CPUMASK` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1017:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DEREGISTER_CPUMASK(String),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeregisterCpumask`\u001b[0m\n\n"}
{"message":"variant `REGISTER_CPUMASK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":31237,"byte_end":31253,"line_start":1076,"line_end":1076,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tREGISTER_CPUMASK = 3,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":31237,"byte_end":31253,"line_start":1076,"line_end":1076,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tREGISTER_CPUMASK = 3,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"RegisterCpumask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `REGISTER_CPUMASK` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1076:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1076\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    REGISTER_CPUMASK = 3,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RegisterCpumask`\u001b[0m\n\n"}
{"message":"variant `DEREGISTER_CPUMASK` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":31260,"byte_end":31278,"line_start":1077,"line_end":1077,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tDEREGISTER_CPUMASK = 4,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":31260,"byte_end":31278,"line_start":1077,"line_end":1077,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tDEREGISTER_CPUMASK = 4,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"DeregisterCpumask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `DEREGISTER_CPUMASK` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1077:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1077\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DEREGISTER_CPUMASK = 4,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DeregisterCpumask`\u001b[0m\n\n"}
{"message":"variant `AGGR_PID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":32257,"byte_end":32265,"line_start":1144,"line_end":1144,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tAGGR_PID(TaskStatsResultAttributeAggregatePid),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":32257,"byte_end":32265,"line_start":1144,"line_end":1144,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tAGGR_PID(TaskStatsResultAttributeAggregatePid),","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"AggrPid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AGGR_PID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1144:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AGGR_PID(TaskStatsResultAttributeAggregatePid),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AggrPid`\u001b[0m\n\n"}
{"message":"variant `AGGR_TGID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":32306,"byte_end":32315,"line_start":1145,"line_end":1145,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tAGGR_TGID(TaskStatsResultAttributeAggregateTgid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":32306,"byte_end":32315,"line_start":1145,"line_end":1145,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tAGGR_TGID(TaskStatsResultAttributeAggregateTgid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"AggrTgid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AGGR_TGID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1145:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AGGR_TGID(TaskStatsResultAttributeAggregateTgid),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AggrTgid`\u001b[0m\n\n"}
{"message":"variant `AGGR_PID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":35480,"byte_end":35488,"line_start":1254,"line_end":1254,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tAGGR_PID = 4,\t// contains pid + stats","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":35480,"byte_end":35488,"line_start":1254,"line_end":1254,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tAGGR_PID = 4,\t// contains pid + stats","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"AggrPid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AGGR_PID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1254:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AGGR_PID = 4,    // contains pid + stats\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AggrPid`\u001b[0m\n\n"}
{"message":"variant `AGGR_TGID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":35519,"byte_end":35528,"line_start":1255,"line_end":1255,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tAGGR_TGID = 5,\t// contains tgid + stats","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":35519,"byte_end":35528,"line_start":1255,"line_end":1255,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tAGGR_TGID = 5,\t// contains tgid + stats","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"AggrTgid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `AGGR_TGID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1255:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AGGR_TGID = 5,    // contains tgid + stats\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `AggrTgid`\u001b[0m\n\n"}
{"message":"variant `GENERIC_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41395,"byte_end":41408,"line_start":1486,"line_end":1486,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGENERIC_ERROR(GenericError),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41395,"byte_end":41408,"line_start":1486,"line_end":1486,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tGENERIC_ERROR(GenericError),","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"GenericError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GENERIC_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1486:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1486\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GENERIC_ERROR(GenericError),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GenericError`\u001b[0m\n\n"}
{"message":"variant `UNSUPPORTED_TASKSTATS_VERSION` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41425,"byte_end":41454,"line_start":1487,"line_end":1487,"column_start":2,"column_end":31,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_TASKSTATS_VERSION(u16),","highlight_start":2,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41425,"byte_end":41454,"line_start":1487,"line_end":1487,"column_start":2,"column_end":31,"is_primary":true,"text":[{"text":"\tUNSUPPORTED_TASKSTATS_VERSION(u16),","highlight_start":2,"highlight_end":31}],"label":null,"suggested_replacement":"UnsupportedTaskstatsVersion","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNSUPPORTED_TASKSTATS_VERSION` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1487:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNSUPPORTED_TASKSTATS_VERSION(u16),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnsupportedTaskstatsVersion`\u001b[0m\n\n"}
{"message":"variant `GET_FAMILY_ID_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41462,"byte_end":41481,"line_start":1488,"line_end":1488,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tGET_FAMILY_ID_ERROR,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41462,"byte_end":41481,"line_start":1488,"line_end":1488,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tGET_FAMILY_ID_ERROR,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"GetFamilyIdError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `GET_FAMILY_ID_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1488:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GET_FAMILY_ID_ERROR,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `GetFamilyIdError`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_COMMAND` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41484,"byte_end":41499,"line_start":1489,"line_end":1489,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tUNKNOWN_COMMAND(u8),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41484,"byte_end":41499,"line_start":1489,"line_end":1489,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tUNKNOWN_COMMAND(u8),","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"UnknownCommand","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_COMMAND` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1489:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_COMMAND(u8),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownCommand`\u001b[0m\n\n"}
{"message":"variant `NO_AGGR_PID_ATTRIBUTE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41506,"byte_end":41527,"line_start":1490,"line_end":1490,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tNO_AGGR_PID_ATTRIBUTE(TaskStatsMessage),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41506,"byte_end":41527,"line_start":1490,"line_end":1490,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tNO_AGGR_PID_ATTRIBUTE(TaskStatsMessage),","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"NoAggrPidAttribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NO_AGGR_PID_ATTRIBUTE` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1490:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NO_AGGR_PID_ATTRIBUTE(TaskStatsMessage),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NoAggrPidAttribute`\u001b[0m\n\n"}
{"message":"variant `NO_AGGR_TGID_ATTRIBUTE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41548,"byte_end":41570,"line_start":1491,"line_end":1491,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tNO_AGGR_TGID_ATTRIBUTE(TaskStatsMessage),","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41548,"byte_end":41570,"line_start":1491,"line_end":1491,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tNO_AGGR_TGID_ATTRIBUTE(TaskStatsMessage),","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"NoAggrTgidAttribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NO_AGGR_TGID_ATTRIBUTE` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1491:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NO_AGGR_TGID_ATTRIBUTE(TaskStatsMessage),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NoAggrTgidAttribute`\u001b[0m\n\n"}
{"message":"variant `UNKNOWN_RESULT_ATTRIBUTE_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41591,"byte_end":41620,"line_start":1492,"line_end":1492,"column_start":2,"column_end":31,"is_primary":true,"text":[{"text":"\tUNKNOWN_RESULT_ATTRIBUTE_TYPE(TaskStatsAttributeType),","highlight_start":2,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41591,"byte_end":41620,"line_start":1492,"line_end":1492,"column_start":2,"column_end":31,"is_primary":true,"text":[{"text":"\tUNKNOWN_RESULT_ATTRIBUTE_TYPE(TaskStatsAttributeType),","highlight_start":2,"highlight_end":31}],"label":null,"suggested_replacement":"UnknownResultAttributeType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNKNOWN_RESULT_ATTRIBUTE_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1492:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1492\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNKNOWN_RESULT_ATTRIBUTE_TYPE(TaskStatsAttributeType),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnknownResultAttributeType`\u001b[0m\n\n"}
{"message":"variant `TASK_STRUCT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41647,"byte_end":41664,"line_start":1493,"line_end":1493,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tTASK_STRUCT_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41647,"byte_end":41664,"line_start":1493,"line_end":1493,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tTASK_STRUCT_ERROR(Vec<u8>),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"TaskStructError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `TASK_STRUCT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1493:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TASK_STRUCT_ERROR(Vec<u8>),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `TaskStructError`\u001b[0m\n\n"}
{"message":"variant `WRONG_TID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41676,"byte_end":41685,"line_start":1494,"line_end":1494,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tWRONG_TID(Tid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41676,"byte_end":41685,"line_start":1494,"line_end":1494,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tWRONG_TID(Tid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"WrongTid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `WRONG_TID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1494:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1494\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    WRONG_TID(Tid),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WrongTid`\u001b[0m\n\n"}
{"message":"variant `WRONG_PID` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41693,"byte_end":41702,"line_start":1495,"line_end":1495,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tWRONG_PID(Pid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41693,"byte_end":41702,"line_start":1495,"line_end":1495,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tWRONG_PID(Pid),","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"WrongPid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `WRONG_PID` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1495:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1495\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    WRONG_PID(Pid),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WrongPid`\u001b[0m\n\n"}
{"message":"variant `WRONG_RESULT_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":41710,"byte_end":41727,"line_start":1496,"line_end":1496,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tWRONG_RESULT_TYPE(TaskStatsResultAttribute),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":41710,"byte_end":41727,"line_start":1496,"line_end":1496,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tWRONG_RESULT_TYPE(TaskStatsResultAttribute),","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"WrongResultType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `WRONG_RESULT_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1496:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    WRONG_RESULT_TYPE(TaskStatsResultAttribute),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WrongResultType`\u001b[0m\n\n"}
{"message":"variant `NETWROK_STAT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7038,"byte_end":7056,"line_start":220,"line_end":220,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    NETWROK_STAT_ERROR(NetworkStatError),","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7038,"byte_end":7056,"line_start":220,"line_end":220,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    NETWROK_STAT_ERROR(NetworkStatError),","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"NetwrokStatError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NETWROK_STAT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:220:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NETWROK_STAT_ERROR(NetworkStatError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NetwrokStatError`\u001b[0m\n\n"}
{"message":"variant `TASKSTATS_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7080,"byte_end":7095,"line_start":221,"line_end":221,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    TASKSTATS_ERROR(TaskStatsError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7080,"byte_end":7095,"line_start":221,"line_end":221,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    TASKSTATS_ERROR(TaskStatsError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"TaskstatsError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `TASKSTATS_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:221:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TASKSTATS_ERROR(TaskStatsError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `TaskstatsError`\u001b[0m\n\n"}
{"message":"variant `IO_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7117,"byte_end":7125,"line_start":222,"line_end":222,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7117,"byte_end":7125,"line_start":222,"line_end":222,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    IO_ERROR(io::Error),","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"IoError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `IO_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:222:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IO_ERROR(io::Error),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IoError`\u001b[0m\n\n"}
{"message":"variant `NO_CONFIG_PATH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7142,"byte_end":7156,"line_start":223,"line_end":223,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    NO_CONFIG_PATH,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7142,"byte_end":7156,"line_start":223,"line_end":223,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    NO_CONFIG_PATH,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"NoConfigPath","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `NO_CONFIG_PATH` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:223:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NO_CONFIG_PATH,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `NoConfigPath`\u001b[0m\n\n"}
{"message":"variant `CONFIG_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7162,"byte_end":7174,"line_start":224,"line_end":224,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    CONFIG_ERROR(ConfigError),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7162,"byte_end":7174,"line_start":224,"line_end":224,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    CONFIG_ERROR(ConfigError),","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"ConfigError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `CONFIG_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:224:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CONFIG_ERROR(ConfigError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ConfigError`\u001b[0m\n\n"}
{"message":"variant `PROCESS_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7193,"byte_end":7206,"line_start":225,"line_end":225,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    PROCESS_ERROR(ProcessError),","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7193,"byte_end":7206,"line_start":225,"line_end":225,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    PROCESS_ERROR(ProcessError),","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"ProcessError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PROCESS_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:225:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PROCESS_ERROR(ProcessError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ProcessError`\u001b[0m\n\n"}
{"message":"variant `LISTEN_THREAD_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7226,"byte_end":7245,"line_start":226,"line_end":226,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    LISTEN_THREAD_ERROR(Box<dyn Any + Send>),","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7226,"byte_end":7245,"line_start":226,"line_end":226,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    LISTEN_THREAD_ERROR(Box<dyn Any + Send>),","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"ListenThreadError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LISTEN_THREAD_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:226:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LISTEN_THREAD_ERROR(Box<dyn Any + Send>),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ListenThreadError`\u001b[0m\n\n"}
{"message":"variant `PARSE_INT_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7272,"byte_end":7287,"line_start":227,"line_end":227,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    PARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7272,"byte_end":7287,"line_start":227,"line_end":227,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    PARSE_INT_ERROR(std::num::ParseIntError),","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"ParseIntError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `PARSE_INT_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:227:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PARSE_INT_ERROR(std::num::ParseIntError),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ParseIntError`\u001b[0m\n\n"}
{"message":"variant `UNIMPLEMENTED_ERROR` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7318,"byte_end":7337,"line_start":228,"line_end":228,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    UNIMPLEMENTED_ERROR,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7318,"byte_end":7337,"line_start":228,"line_end":228,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    UNIMPLEMENTED_ERROR,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"UnimplementedError","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNIMPLEMENTED_ERROR` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:228:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNIMPLEMENTED_ERROR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UnimplementedError`\u001b[0m\n\n"}
{"message":"variant `UNIMPLEMENTED` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":5301,"byte_end":5326,"line_start":183,"line_end":183,"column_start":10,"column_end":35,"is_primary":false,"text":[{"text":"pub enum NetlinkMessagePayloadType {","highlight_start":10,"highlight_end":35}],"label":"variant in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink.rs","byte_start":5346,"byte_end":5359,"line_start":185,"line_end":185,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    UNIMPLEMENTED,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`NetlinkMessagePayloadType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNIMPLEMENTED` is never constructed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:185:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum NetlinkMessagePayloadType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GENERIC,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNIMPLEMENTED,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `NetlinkMessagePayloadType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"fields `attributeType` and `payload` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14951,"byte_end":14974,"line_start":501,"line_end":501,"column_start":12,"column_end":35,"is_primary":false,"text":[{"text":"pub struct NetlinkMessageAttribute {","highlight_start":12,"highlight_end":35}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink.rs","byte_start":14981,"byte_end":14994,"line_start":502,"line_end":502,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    attributeType: NetlinkMessageAttributeType,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink.rs","byte_start":15029,"byte_end":15036,"line_start":503,"line_end":503,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    payload: Vec<u8>,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`NetlinkMessageAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `attributeType` and `payload` are never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:502:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct NetlinkMessageAttribute {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attributeType: NetlinkMessageAttributeType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    payload: Vec<u8>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `NetlinkMessageAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"field `selfAddress` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15224,"byte_end":15241,"line_start":515,"line_end":515,"column_start":12,"column_end":29,"is_primary":false,"text":[{"text":"pub struct NetlinkConnection {","highlight_start":12,"highlight_end":29}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink.rs","byte_start":15268,"byte_end":15279,"line_start":517,"line_end":517,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    selfAddress: SocketAddr,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`NetlinkConnection` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `selfAddress` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:517:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m515\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct NetlinkConnection {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    socket: Socket,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    selfAddress: SocketAddr,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `NetlinkConnection` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"associated constant `ALIGN` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":10791,"byte_end":10796,"line_start":368,"line_end":368,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    pub const ALIGN: usize = 4;","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `ALIGN` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:368:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const ALIGN: usize = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"associated function `Type` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":11085,"byte_end":11089,"line_start":382,"line_end":382,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Type(&self) -> NetlinkMessagePayloadType {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `Type` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:382:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type(&self) -> NetlinkMessagePayloadType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"associated function `FromByteArray` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14369,"byte_end":14382,"line_start":475,"line_end":475,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `FromByteArray` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:475:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m475\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `PAYLOAD_ALIGN` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15091,"byte_end":15104,"line_start":507,"line_end":507,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"    const PAYLOAD_ALIGN: usize = 4;","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `PAYLOAD_ALIGN` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:507:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const PAYLOAD_ALIGN: usize = 4;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"fields `id` and `flags` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":8994,"byte_end":9033,"line_start":354,"line_end":354,"column_start":12,"column_end":51,"is_primary":false,"text":[{"text":"pub struct GenericNetlinkControlMessageOpAttribute","highlight_start":12,"highlight_end":51}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink/generic.rs","byte_start":9037,"byte_end":9039,"line_start":356,"line_end":356,"column_start":2,"column_end":4,"is_primary":true,"text":[{"text":"\tid: u32,","highlight_start":2,"highlight_end":4}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink/generic.rs","byte_start":9047,"byte_end":9052,"line_start":357,"line_end":357,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tflags: Vec<GenericNetlinkControlMessageOpAttributeFlag>,","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`GenericNetlinkControlMessageOpAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `id` and `flags` are never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:356:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct GenericNetlinkControlMessageOpAttribute\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    id: u32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    flags: Vec<GenericNetlinkControlMessageOpAttributeFlag>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `GenericNetlinkControlMessageOpAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"variant `UNSPECIFIED` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10231,"byte_end":10268,"line_start":400,"line_end":400,"column_start":10,"column_end":47,"is_primary":false,"text":[{"text":"pub enum GenericNetlinkControlMessageAttribute","highlight_start":10,"highlight_end":47}],"label":"variant in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"netlink/generic.rs","byte_start":10272,"byte_end":10283,"line_start":402,"line_end":402,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tUNSPECIFIED,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`GenericNetlinkControlMessageAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `UNSPECIFIED` is never constructed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:402:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum GenericNetlinkControlMessageAttribute\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    UNSPECIFIED,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `GenericNetlinkControlMessageAttribute` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"associated function `SrcAddr` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1215,"byte_end":1222,"line_start":56,"line_end":56,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `SrcAddr` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SrcAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `SrcPort` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1271,"byte_end":1278,"line_start":61,"line_end":61,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `SrcPort` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SrcPort (&self) -> u16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `DesAddr` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1324,"byte_end":1331,"line_start":66,"line_end":66,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `DesAddr` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn DesAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `DesPort` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1380,"byte_end":1387,"line_start":71,"line_end":71,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `DesPort` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:71:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn DesPort (&self) -> u16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `ConnectionType` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1433,"byte_end":1447,"line_start":76,"line_end":76,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn ConnectionType (&self) -> ConnectionType","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `ConnectionType` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:76:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ConnectionType (&self) -> ConnectionType\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `UniConnection` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2779,"byte_end":2792,"line_start":163,"line_end":163,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn UniConnection (&self) -> UniConnection","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `UniConnection` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:163:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn UniConnection (&self) -> UniConnection\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"field `length` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30043,"byte_end":30054,"line_start":1029,"line_end":1029,"column_start":8,"column_end":19,"is_primary":false,"text":[{"text":"struct UidMapEntry {","highlight_start":8,"highlight_end":19}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"Process.rs","byte_start":30141,"byte_end":30147,"line_start":1034,"line_end":1034,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    length: usize,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`UidMapEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `length` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1034:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1029\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct UidMapEntry {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1034\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    length: usize,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `UidMapEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"field `length` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32934,"byte_end":32945,"line_start":1143,"line_end":1143,"column_start":8,"column_end":19,"is_primary":false,"text":[{"text":"struct GidMapEntry {","highlight_start":8,"highlight_end":19}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"Process.rs","byte_start":33032,"byte_end":33038,"line_start":1148,"line_end":1148,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    length: usize,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`GidMapEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `length` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1148:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct GidMapEntry {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    length: usize,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `GidMapEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"associated function `Name` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":5418,"byte_end":5422,"line_start":223,"line_end":223,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Name(&self) -> String {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `Name` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:223:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Name(&self) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"associated function `Tid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18155,"byte_end":18158,"line_start":650,"line_end":650,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Tid(&self) -> Tid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `Tid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:650:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Tid(&self) -> Tid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"associated function `Pid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18209,"byte_end":18212,"line_start":653,"line_end":653,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `Pid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:653:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m653\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Pid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"associated function `RealTid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18264,"byte_end":18271,"line_start":657,"line_end":657,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealTid(&self) -> Tid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealTid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:657:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m657\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealTid(&self) -> Tid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealPid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18326,"byte_end":18333,"line_start":660,"line_end":660,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealPid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:660:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `Pid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21442,"byte_end":21445,"line_start":797,"line_end":797,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `Pid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:797:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Pid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"associated function `ParentPid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21496,"byte_end":21505,"line_start":800,"line_end":800,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn ParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `ParentPid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:800:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m800\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ParentPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealPid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21563,"byte_end":21570,"line_start":804,"line_end":804,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealPid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:804:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m804\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealParentPid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21625,"byte_end":21638,"line_start":807,"line_end":807,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn RealParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealParentPid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:807:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealParentPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealUid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21700,"byte_end":21707,"line_start":811,"line_end":811,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealUid(&self) -> Uid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealUid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:811:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealEffectiveUid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21762,"byte_end":21778,"line_start":814,"line_end":814,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveUid(&self) -> Uid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealEffectiveUid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:814:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealEffectiveUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealSavedUid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21842,"byte_end":21854,"line_start":817,"line_end":817,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedUid(&self) -> Uid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealSavedUid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:817:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m817\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealSavedUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealFsUid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21914,"byte_end":21923,"line_start":820,"line_end":820,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsUid(&self) -> Uid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealFsUid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:820:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealFsUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealGid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21981,"byte_end":21988,"line_start":824,"line_end":824,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealGid(&self) -> Gid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealGid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:824:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m824\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealEffectiveGid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22043,"byte_end":22059,"line_start":827,"line_end":827,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveGid(&self) -> Gid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealEffectiveGid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:827:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealEffectiveGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealSavedGid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22123,"byte_end":22135,"line_start":830,"line_end":830,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedGid(&self) -> Gid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealSavedGid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:830:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m830\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealSavedGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function `RealFsGid` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22195,"byte_end":22204,"line_start":833,"line_end":833,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsGid(&self) -> Gid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `RealFsGid` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:833:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m833\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealFsGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"fields `pid` and `stats` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":31915,"byte_end":31952,"line_start":1118,"line_end":1118,"column_start":12,"column_end":49,"is_primary":false,"text":[{"text":"pub struct TaskStatsResultAttributeAggregateTgid","highlight_start":12,"highlight_end":49}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"taskstat.rs","byte_start":31956,"byte_end":31959,"line_start":1120,"line_end":1120,"column_start":2,"column_end":5,"is_primary":true,"text":[{"text":"\tpid: Pid,","highlight_start":2,"highlight_end":5}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"taskstat.rs","byte_start":31967,"byte_end":31972,"line_start":1121,"line_end":1121,"column_start":2,"column_end":7,"is_primary":true,"text":[{"text":"\tstats: TaskStatsRaw,","highlight_start":2,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`TaskStatsResultAttributeAggregateTgid` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `pid` and `stats` are never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1120:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct TaskStatsResultAttributeAggregateTgid\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pid: Pid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    stats: TaskStatsRaw,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `TaskStatsResultAttributeAggregateTgid` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"message":"associated function `GetProcessTaskStats` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":40396,"byte_end":40415,"line_start":1449,"line_end":1449,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function `GetProcessTaskStats` is never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1449:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"crate `MonitorDaemon` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case: `monitor_daemon`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: crate `MonitorDaemon` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: convert the identifier to snake case: `monitor_daemon`\u001b[0m\n\n"}
{"message":"module `NetworkStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":41,"byte_end":52,"line_start":4,"line_end":4,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"mod NetworkStat;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":41,"byte_end":52,"line_start":4,"line_end":4,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"mod NetworkStat;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"network_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `NetworkStat` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod NetworkStat;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_stat`\u001b[0m\n\n"}
{"message":"module `Process` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":58,"byte_end":65,"line_start":5,"line_end":5,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"mod Process;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":58,"byte_end":65,"line_start":5,"line_end":5,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"mod Process;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"process","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `Process` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod Process;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `process`\u001b[0m\n\n"}
{"message":"structure field `containerName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":606,"byte_end":619,"line_start":30,"line_end":30,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    containerName: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":606,"byte_end":619,"line_start":30,"line_end":30,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    containerName: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"container_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `containerName` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    containerName: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `container_name`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":702,"byte_end":705,"line_start":35,"line_end":35,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(containerName: String) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":702,"byte_end":705,"line_start":35,"line_end":35,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(containerName: String) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:35:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(containerName: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `containerName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":706,"byte_end":719,"line_start":35,"line_end":35,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(containerName: String) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":706,"byte_end":719,"line_start":35,"line_end":35,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(containerName: String) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":"container_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `containerName` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:35:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(containerName: String) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `container_name`\u001b[0m\n\n"}
{"message":"structure field `containerStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":897,"byte_end":911,"line_start":45,"line_end":45,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    containerStats: Vec<ContainerStat>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":897,"byte_end":911,"line_start":45,"line_end":45,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    containerStats: Vec<ContainerStat>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"container_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `containerStats` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:45:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    containerStats: Vec<ContainerStat>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `container_stats`\u001b[0m\n\n"}
{"message":"structure field `networkRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":937,"byte_end":951,"line_start":46,"line_end":46,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    networkRawStat: NetworkRawStat,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":937,"byte_end":951,"line_start":46,"line_end":46,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    networkRawStat: NetworkRawStat,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"network_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `networkRawStat` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:46:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    networkRawStat: NetworkRawStat,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_raw_stat`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1000,"byte_end":1003,"line_start":50,"line_end":50,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1000,"byte_end":1003,"line_start":50,"line_end":50,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:50:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"function `GetProcessesStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1144,"byte_end":1161,"line_start":58,"line_end":58,"column_start":4,"column_end":21,"is_primary":true,"text":[{"text":"fn GetProcessesStats(","highlight_start":4,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1144,"byte_end":1161,"line_start":58,"line_end":58,"column_start":4,"column_end":21,"is_primary":true,"text":[{"text":"fn GetProcessesStats(","highlight_start":4,"highlight_end":21}],"label":null,"suggested_replacement":"get_processes_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GetProcessesStats` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:58:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn GetProcessesStats(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_processes_stats`\u001b[0m\n\n"}
{"message":"variable `realPidList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1167,"byte_end":1178,"line_start":59,"line_end":59,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    realPidList: &[Pid],","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1167,"byte_end":1178,"line_start":59,"line_end":59,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    realPidList: &[Pid],","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"real_pid_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPidList` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:59:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realPidList: &[Pid],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid_list`\u001b[0m\n\n"}
{"message":"variable `taskStatsConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1192,"byte_end":1211,"line_start":60,"line_end":60,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    taskStatsConnection: &mut TaskStatsConnection,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1192,"byte_end":1211,"line_start":60,"line_end":60,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    taskStatsConnection: &mut TaskStatsConnection,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"task_stats_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsConnection` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:60:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    taskStatsConnection: &mut TaskStatsConnection,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_connection`\u001b[0m\n\n"}
{"message":"variable `networkRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1243,"byte_end":1257,"line_start":61,"line_end":61,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    networkRawStat: &mut NetworkRawStat,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1243,"byte_end":1257,"line_start":61,"line_end":61,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    networkRawStat: &mut NetworkRawStat,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"network_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkRawStat` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:61:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    networkRawStat: &mut NetworkRawStat,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_raw_stat`\u001b[0m\n\n"}
{"message":"variable `currentRealPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1375,"byte_end":1389,"line_start":65,"line_end":65,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    for currentRealPid in realPidList {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1375,"byte_end":1389,"line_start":65,"line_end":65,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    for currentRealPid in realPidList {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"current_real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentRealPid` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:65:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for currentRealPid in realPidList {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_real_pid`\u001b[0m\n\n"}
{"message":"variable `newProcess` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1429,"byte_end":1439,"line_start":66,"line_end":66,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"        if let Ok(mut newProcess) = Process::GetRealProcess(currentRealPid) {","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1429,"byte_end":1439,"line_start":66,"line_end":66,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"        if let Ok(mut newProcess) = Process::GetRealProcess(currentRealPid) {","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":"new_process","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newProcess` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:66:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Ok(mut newProcess) = Process::GetRealProcess(currentRealPid) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_process`\u001b[0m\n\n"}
{"message":"function `ListenThread` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1720,"byte_end":1732,"line_start":79,"line_end":79,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn ListenThread() -> Result<(), DaemonError> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1720,"byte_end":1732,"line_start":79,"line_end":79,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn ListenThread() -> Result<(), DaemonError> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":"listen_thread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `ListenThread` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:79:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ListenThread() -> Result<(), DaemonError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_thread`\u001b[0m\n\n"}
{"message":"variable `taskStatsConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":1814,"byte_end":1833,"line_start":81,"line_end":81,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"    let mut taskStatsConnection = TaskStatsConnection::New()?;","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":1814,"byte_end":1833,"line_start":81,"line_end":81,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"    let mut taskStatsConnection = TaskStatsConnection::New()?;","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":"task_stats_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsConnection` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:81:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut taskStatsConnection = TaskStatsConnection::New()?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_connection`\u001b[0m\n\n"}
{"message":"variable `_peerAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2078,"byte_end":2087,"line_start":89,"line_end":89,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"            Ok((mut stream, mut _peerAddr)) => {","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2078,"byte_end":2087,"line_start":89,"line_end":89,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"            Ok((mut stream, mut _peerAddr)) => {","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":"_peer_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_peerAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:89:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Ok((mut stream, mut _peerAddr)) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_peer_addr`\u001b[0m\n\n"}
{"message":"variable `totalStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2119,"byte_end":2128,"line_start":90,"line_end":90,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                let mut totalStat = TotalStat::New();","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2119,"byte_end":2128,"line_start":90,"line_end":90,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                let mut totalStat = TotalStat::New();","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":"total_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `totalStat` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:90:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut totalStat = TotalStat::New();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_stat`\u001b[0m\n\n"}
{"message":"variable `globalConfig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2326,"byte_end":2338,"line_start":96,"line_end":96,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2326,"byte_end":2338,"line_start":96,"line_end":96,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":"global_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `globalConfig` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:96:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let globalConfig = config::GetGlobalConfig().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `global_config`\u001b[0m\n\n"}
{"message":"variable `monitorTarget` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2455,"byte_end":2468,"line_start":99,"line_end":99,"column_start":35,"column_end":48,"is_primary":true,"text":[{"text":"                'monitorLoop: for monitorTarget in &globalConfig.MonitorTargets() {","highlight_start":35,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2455,"byte_end":2468,"line_start":99,"line_end":99,"column_start":35,"column_end":48,"is_primary":true,"text":[{"text":"                'monitorLoop: for monitorTarget in &globalConfig.MonitorTargets() {","highlight_start":35,"highlight_end":48}],"label":null,"suggested_replacement":"monitor_target","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `monitorTarget` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:99:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                'monitorLoop: for monitorTarget in &globalConfig.MonitorTargets() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `monitor_target`\u001b[0m\n\n"}
{"message":"variable `commandOutput` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2780,"byte_end":2793,"line_start":105,"line_end":105,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"                        let commandOutput = match Command::new(\"docker\")","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2780,"byte_end":2793,"line_start":105,"line_end":105,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"                        let commandOutput = match Command::new(\"docker\")","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":"command_output","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `commandOutput` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:105:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let commandOutput = match Command::new(\"docker\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_output`\u001b[0m\n\n"}
{"message":"variable `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":3472,"byte_end":3479,"line_start":121,"line_end":121,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"                            let realPid = Pid::New(","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":3472,"byte_end":3479,"line_start":121,"line_end":121,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"                            let realPid = Pid::New(","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:121:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   let realPid = Pid::New(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"variable `statusFileContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":3891,"byte_end":3908,"line_start":131,"line_end":131,"column_start":33,"column_end":50,"is_primary":true,"text":[{"text":"                            let statusFileContent =","highlight_start":33,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":3891,"byte_end":3908,"line_start":131,"line_end":131,"column_start":33,"column_end":50,"is_primary":true,"text":[{"text":"                            let statusFileContent =","highlight_start":33,"highlight_end":50}],"label":null,"suggested_replacement":"status_file_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `statusFileContent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:131:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   let statusFileContent =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `status_file_content`\u001b[0m\n\n"}
{"message":"variable `contentLines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":4204,"byte_end":4216,"line_start":137,"line_end":137,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"                            let contentLines: Vec<&str> = statusFileContent.lines().collect();","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":4204,"byte_end":4216,"line_start":137,"line_end":137,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"                            let contentLines: Vec<&str> = statusFileContent.lines().collect();","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":"content_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `contentLines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:137:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   let contentLines: Vec<&str> = statusFileContent.lines().collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `content_lines`\u001b[0m\n\n"}
{"message":"variable `realPidList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":2576,"byte_end":2587,"line_start":101,"line_end":101,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                    let realPidList = if monitorTarget.containerName != \"/\" {","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":2576,"byte_end":2587,"line_start":101,"line_end":101,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                    let realPidList = if monitorTarget.containerName != \"/\" {","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"real_pid_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPidList` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:101:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let realPidList = if monitorTarget.containerName != \"/\" {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid_list`\u001b[0m\n\n"}
{"message":"variable `containerStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":5242,"byte_end":5255,"line_start":162,"line_end":162,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"                            let containerStat = ContainerStat {","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":5242,"byte_end":5255,"line_start":162,"line_end":162,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"                            let containerStat = ContainerStat {","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":"container_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `containerStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:162:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   let containerStat = ContainerStat {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `container_stat`\u001b[0m\n\n"}
{"message":"variable `listenThread` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":6724,"byte_end":6736,"line_start":207,"line_end":207,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let listenThread = thread::spawn(|| ListenThread());","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":6724,"byte_end":6736,"line_start":207,"line_end":207,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let listenThread = thread::spawn(|| ListenThread());","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"listen_thread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `listenThread` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:207:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let listenThread = thread::spawn(|| ListenThread());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_thread`\u001b[0m\n\n"}
{"message":"variable `listenThreadError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":6838,"byte_end":6855,"line_start":211,"line_end":211,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        Err(listenThreadError) => return Err(DaemonError::LISTEN_THREAD_ERROR(listenThreadError)),","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":6838,"byte_end":6855,"line_start":211,"line_end":211,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        Err(listenThreadError) => return Err(DaemonError::LISTEN_THREAD_ERROR(listenThreadError)),","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"listen_thread_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `listenThreadError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:211:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Err(listenThreadError) => return Err(DaemonError::LISTEN_THREAD_ERROR(listenThreadError)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_thread_error`\u001b[0m\n\n"}
{"message":"variable `networkStatError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7555,"byte_end":7571,"line_start":236,"line_end":236,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"            Self::NETWROK_STAT_ERROR(networkStatError) => {","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7555,"byte_end":7571,"line_start":236,"line_end":236,"column_start":38,"column_end":54,"is_primary":true,"text":[{"text":"            Self::NETWROK_STAT_ERROR(networkStatError) => {","highlight_start":38,"highlight_end":54}],"label":null,"suggested_replacement":"network_stat_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkStatError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:236:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::NETWROK_STAT_ERROR(networkStatError) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_stat_error`\u001b[0m\n\n"}
{"message":"variable `taskStatsError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7708,"byte_end":7722,"line_start":239,"line_end":239,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"            Self::TASKSTATS_ERROR(taskStatsError) => {","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7708,"byte_end":7722,"line_start":239,"line_end":239,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"            Self::TASKSTATS_ERROR(taskStatsError) => {","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":"task_stats_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:239:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::TASKSTATS_ERROR(taskStatsError) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_error`\u001b[0m\n\n"}
{"message":"variable `ioError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":7846,"byte_end":7853,"line_start":242,"line_end":242,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"            Self::IO_ERROR(ioError) => String::from(format!(\"IO error: {}\", ioError)),","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":7846,"byte_end":7853,"line_start":242,"line_end":242,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"            Self::IO_ERROR(ioError) => String::from(format!(\"IO error: {}\", ioError)),","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"io_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ioError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:242:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::IO_ERROR(ioError) => String::from(format!(\"IO error: {}\", ioError)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_error`\u001b[0m\n\n"}
{"message":"variable `configError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":8005,"byte_end":8016,"line_start":244,"line_end":244,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"            Self::CONFIG_ERROR(configError) => {","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":8005,"byte_end":8016,"line_start":244,"line_end":244,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"            Self::CONFIG_ERROR(configError) => {","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":"config_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `configError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:244:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::CONFIG_ERROR(configError) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `config_error`\u001b[0m\n\n"}
{"message":"variable `processError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":8140,"byte_end":8152,"line_start":247,"line_end":247,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"            Self::PROCESS_ERROR(processError) => {","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":8140,"byte_end":8152,"line_start":247,"line_end":247,"column_start":33,"column_end":45,"is_primary":true,"text":[{"text":"            Self::PROCESS_ERROR(processError) => {","highlight_start":33,"highlight_end":45}],"label":null,"suggested_replacement":"process_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `processError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:247:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::PROCESS_ERROR(processError) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `process_error`\u001b[0m\n\n"}
{"message":"variable `listenThreadError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"main.rs","byte_start":8284,"byte_end":8301,"line_start":250,"line_end":250,"column_start":39,"column_end":56,"is_primary":true,"text":[{"text":"            Self::LISTEN_THREAD_ERROR(listenThreadError) => {","highlight_start":39,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"main.rs","byte_start":8284,"byte_end":8301,"line_start":250,"line_end":250,"column_start":39,"column_end":56,"is_primary":true,"text":[{"text":"            Self::LISTEN_THREAD_ERROR(listenThreadError) => {","highlight_start":39,"highlight_end":56}],"label":null,"suggested_replacement":"listen_thread_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `listenThreadError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mmain.rs:250:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::LISTEN_THREAD_ERROR(listenThreadError) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_thread_error`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":316,"byte_end":319,"line_start":15,"line_end":15,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (uid: usize) -> Self { Self(uid.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":316,"byte_end":319,"line_start":15,"line_end":15,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (uid: usize) -> Self { Self(uid.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (uid: usize) -> Self { Self(uid.try_into ().unwrap ()) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `ToUsize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":385,"byte_end":392,"line_start":16,"line_end":16,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":385,"byte_end":392,"line_start":16,"line_end":16,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"to_usize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToUsize` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_usize`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":814,"byte_end":817,"line_start":41,"line_end":41,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (gid: usize) -> Self { Self(gid.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":814,"byte_end":817,"line_start":41,"line_end":41,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (gid: usize) -> Self { Self(gid.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (gid: usize) -> Self { Self(gid.try_into ().unwrap ()) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `ToUsize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":883,"byte_end":890,"line_start":42,"line_end":42,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":883,"byte_end":890,"line_start":42,"line_end":42,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"to_usize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToUsize` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:42:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToUsize (&self) -> usize { self.0.try_into ().unwrap () }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_usize`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":1316,"byte_end":1319,"line_start":67,"line_end":67,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (inode: usize) -> Self { Self(inode.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":1316,"byte_end":1319,"line_start":67,"line_end":67,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (inode: usize) -> Self { Self(inode.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:67:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (inode: usize) -> Self { Self(inode.try_into ().unwrap ()) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":1682,"byte_end":1685,"line_start":87,"line_end":87,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self { Self(0) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":1682,"byte_end":1685,"line_start":87,"line_end":87,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self { Self(0) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:87:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New () -> Self { Self(0) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `GetCurrentTimestamp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":1718,"byte_end":1737,"line_start":89,"line_end":89,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetCurrentTimestamp () -> Self","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":1718,"byte_end":1737,"line_start":89,"line_end":89,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetCurrentTimestamp () -> Self","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"get_current_timestamp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetCurrentTimestamp` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:89:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetCurrentTimestamp () -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_current_timestamp`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2161,"byte_end":2164,"line_start":106,"line_end":106,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self { Self(0) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2161,"byte_end":2164,"line_start":106,"line_end":106,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self { Self(0) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:106:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New () -> Self { Self(0) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `FromSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2196,"byte_end":2207,"line_start":107,"line_end":107,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn FromSeconds (seconds: usize) -> Self { Self((seconds*Self::NANOSECONDS_PER_SECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2196,"byte_end":2207,"line_start":107,"line_end":107,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn FromSeconds (seconds: usize) -> Self { Self((seconds*Self::NANOSECONDS_PER_SECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"from_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:107:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromSeconds (seconds: usize) -> Self { Self((seconds*Self::NANOSECONDS_PER_SECOND).try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_seconds`\u001b[0m\n\n"}
{"message":"method `FromMilliSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2312,"byte_end":2328,"line_start":108,"line_end":108,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2312,"byte_end":2328,"line_start":108,"line_end":108,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"from_milli_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromMilliSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:108:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_milli_seconds`\u001b[0m\n\n"}
{"message":"variable `milliSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2330,"byte_end":2342,"line_start":108,"line_end":108,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"\tpub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }","highlight_start":27,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2330,"byte_end":2342,"line_start":108,"line_end":108,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"\tpub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }","highlight_start":27,"highlight_end":39}],"label":null,"suggested_replacement":"milli_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `milliSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:108:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromMilliSeconds (milliSeconds: usize) -> Self { Self((milliSeconds*Self::NANOSECONDS_PER_MILLISECOND).try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `milli_seconds`\u001b[0m\n\n"}
{"message":"method `FromMicroSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2448,"byte_end":2464,"line_start":109,"line_end":109,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2448,"byte_end":2464,"line_start":109,"line_end":109,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"from_micro_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromMicroSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_micro_seconds`\u001b[0m\n\n"}
{"message":"variable `microSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2466,"byte_end":2478,"line_start":109,"line_end":109,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"\tpub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }","highlight_start":27,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2466,"byte_end":2478,"line_start":109,"line_end":109,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"\tpub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }","highlight_start":27,"highlight_end":39}],"label":null,"suggested_replacement":"micro_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `microSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:109:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromMicroSeconds (microSeconds: usize) -> Self { Self((microSeconds*Self::NANOSECONDS_PER_MICROSECOND).try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `micro_seconds`\u001b[0m\n\n"}
{"message":"method `FromNanoSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2584,"byte_end":2599,"line_start":110,"line_end":110,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"\tpub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2584,"byte_end":2599,"line_start":110,"line_end":110,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"\tpub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"from_nano_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromNanoSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:110:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_nano_seconds`\u001b[0m\n\n"}
{"message":"variable `nanoSeconds` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":2601,"byte_end":2612,"line_start":110,"line_end":110,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":2601,"byte_end":2612,"line_start":110,"line_end":110,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":"nano_seconds","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nanoSeconds` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:110:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromNanoSeconds (nanoSeconds: usize) -> Self { Self(nanoSeconds.try_into ().unwrap ()) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nano_seconds`\u001b[0m\n\n"}
{"message":"method `FromByte` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3065,"byte_end":3073,"line_start":139,"line_end":139,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\tpub fn FromByte (byte: usize) -> Self { Self(byte as u128) }","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3065,"byte_end":3073,"line_start":139,"line_end":139,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\tpub fn FromByte (byte: usize) -> Self { Self(byte as u128) }","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"from_byte","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByte` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:139:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByte (byte: usize) -> Self { Self(byte as u128) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte`\u001b[0m\n\n"}
{"message":"method `FromKB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3127,"byte_end":3133,"line_start":140,"line_end":140,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromKB (kb: usize) -> Self { Self(kb as u128*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3127,"byte_end":3133,"line_start":140,"line_end":140,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromKB (kb: usize) -> Self { Self(kb as u128*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_kb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromKB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:140:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromKB (kb: usize) -> Self { Self(kb as u128*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_kb`\u001b[0m\n\n"}
{"message":"method `FromMB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3188,"byte_end":3194,"line_start":141,"line_end":141,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromMB (mb: usize) -> Self { Self(mb as u128*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3188,"byte_end":3194,"line_start":141,"line_end":141,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromMB (mb: usize) -> Self { Self(mb as u128*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_mb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromMB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:141:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromMB (mb: usize) -> Self { Self(mb as u128*1024*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_mb`\u001b[0m\n\n"}
{"message":"method `FromGB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3254,"byte_end":3260,"line_start":142,"line_end":142,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromGB (gb: usize) -> Self { Self(gb as u128*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3254,"byte_end":3260,"line_start":142,"line_end":142,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromGB (gb: usize) -> Self { Self(gb as u128*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_gb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromGB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:142:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromGB (gb: usize) -> Self { Self(gb as u128*1024*1024*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_gb`\u001b[0m\n\n"}
{"message":"method `FromTB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3325,"byte_end":3331,"line_start":143,"line_end":143,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromTB (tb: usize) -> Self { Self(tb as u128*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3325,"byte_end":3331,"line_start":143,"line_end":143,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromTB (tb: usize) -> Self { Self(tb as u128*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_tb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromTB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:143:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromTB (tb: usize) -> Self { Self(tb as u128*1024*1024*1024*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_tb`\u001b[0m\n\n"}
{"message":"method `FromPB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3401,"byte_end":3407,"line_start":144,"line_end":144,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromPB (pb: usize) -> Self { Self(pb as u128*1024*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3401,"byte_end":3407,"line_start":144,"line_end":144,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromPB (pb: usize) -> Self { Self(pb as u128*1024*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_pb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromPB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:144:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromPB (pb: usize) -> Self { Self(pb as u128*1024*1024*1024*1024*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_pb`\u001b[0m\n\n"}
{"message":"method `FromEB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3482,"byte_end":3488,"line_start":145,"line_end":145,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromEB (eb: usize) -> Self { Self(eb as u128*1024*1024*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3482,"byte_end":3488,"line_start":145,"line_end":145,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\tpub fn FromEB (eb: usize) -> Self { Self(eb as u128*1024*1024*1024*1024*1024*1024) }","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"from_eb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromEB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:145:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromEB (eb: usize) -> Self { Self(eb as u128*1024*1024*1024*1024*1024*1024) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_eb`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":3930,"byte_end":3933,"line_start":173,"line_end":173,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (count: usize) -> Self { Self(count as u128) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":3930,"byte_end":3933,"line_start":173,"line_end":173,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (count: usize) -> Self { Self(count as u128) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:173:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (count: usize) -> Self { Self(count as u128) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"function `AlignBuffer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":4252,"byte_end":4263,"line_start":203,"line_end":203,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn AlignBuffer (buf: &mut Vec<u8>, align: usize)","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":4252,"byte_end":4263,"line_start":203,"line_end":203,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"pub fn AlignBuffer (buf: &mut Vec<u8>, align: usize)","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"align_buffer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AlignBuffer` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:203:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn AlignBuffer (buf: &mut Vec<u8>, align: usize)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `align_buffer`\u001b[0m\n\n"}
{"message":"variable `paddingLen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":4305,"byte_end":4315,"line_start":205,"line_end":205,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"\tlet paddingLen = ((buf.len () + align - 1)/align)*align - buf.len ();","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":4305,"byte_end":4315,"line_start":205,"line_end":205,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"\tlet paddingLen = ((buf.len () + align - 1)/align)*align - buf.len ();","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":"padding_len","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paddingLen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:205:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let paddingLen = ((buf.len () + align - 1)/align)*align - buf.len ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `padding_len`\u001b[0m\n\n"}
{"message":"function `NextAlignNumber` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":4425,"byte_end":4440,"line_start":210,"line_end":210,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":4425,"byte_end":4440,"line_start":210,"line_end":210,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"next_align_number","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `NextAlignNumber` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:210:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `next_align_number`\u001b[0m\n\n"}
{"message":"variable `currentNumber` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":4442,"byte_end":4455,"line_start":210,"line_end":210,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"pub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":4442,"byte_end":4455,"line_start":210,"line_end":210,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"pub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":"current_number","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentNumber` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:210:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn NextAlignNumber (currentNumber: usize, align: usize) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_number`\u001b[0m\n\n"}
{"message":"function `ParseHexString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":4543,"byte_end":4557,"line_start":216,"line_end":216,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"pub fn ParseHexString (input: &str, endian: Endian) -> Result<Vec<u8>, CommonError>","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":4543,"byte_end":4557,"line_start":216,"line_end":216,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"pub fn ParseHexString (input: &str, endian: Endian) -> Result<Vec<u8>, CommonError>","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"parse_hex_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `ParseHexString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:216:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn ParseHexString (input: &str, endian: Endian) -> Result<Vec<u8>, CommonError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parse_hex_string`\u001b[0m\n\n"}
{"message":"function `AddressInNetwork` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5866,"byte_end":5882,"line_start":265,"line_end":265,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5866,"byte_end":5882,"line_start":265,"line_end":265,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"address_in_network","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AddressInNetwork` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:265:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `address_in_network`\u001b[0m\n\n"}
{"message":"variable `networkAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5899,"byte_end":5910,"line_start":265,"line_end":265,"column_start":41,"column_end":52,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":41,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5899,"byte_end":5910,"line_start":265,"line_end":265,"column_start":41,"column_end":52,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":41,"highlight_end":52}],"label":null,"suggested_replacement":"network_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:265:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_addr`\u001b[0m\n\n"}
{"message":"variable `networkMask` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":5921,"byte_end":5932,"line_start":265,"line_end":265,"column_start":63,"column_end":74,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":63,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":5921,"byte_end":5932,"line_start":265,"line_end":265,"column_start":63,"column_end":74,"is_primary":true,"text":[{"text":"pub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>","highlight_start":63,"highlight_end":74}],"label":null,"suggested_replacement":"network_mask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkMask` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:265:63\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn AddressInNetwork (addr: &IpAddr, networkAddr: &IpAddr, networkMask: &IpAddr) -> Result<bool, ()>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_mask`\u001b[0m\n\n"}
{"message":"variable `networkAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6098,"byte_end":6109,"line_start":272,"line_end":272,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>","highlight_start":35,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6098,"byte_end":6109,"line_start":272,"line_end":272,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>","highlight_start":35,"highlight_end":46}],"label":null,"suggested_replacement":"network_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:272:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_addr`\u001b[0m\n\n"}
{"message":"variable `networkMask` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6124,"byte_end":6135,"line_start":272,"line_end":272,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6124,"byte_end":6135,"line_start":272,"line_end":272,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":"network_mask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkMask` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:272:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (IpAddr::V4 (addr), IpAddr::V4 (networkAddr), IpAddr::V4 (networkMask)) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_mask`\u001b[0m\n\n"}
{"message":"variable `networkAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6214,"byte_end":6225,"line_start":276,"line_end":276,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkAddr = networkAddr.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6214,"byte_end":6225,"line_start":276,"line_end":276,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkAddr = networkAddr.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"network_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:276:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let networkAddr = networkAddr.octets ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_addr`\u001b[0m\n\n"}
{"message":"variable `networkMask` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6258,"byte_end":6269,"line_start":277,"line_end":277,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkMask = networkMask.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6258,"byte_end":6269,"line_start":277,"line_end":277,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkMask = networkMask.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"network_mask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkMask` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:277:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let networkMask = networkMask.octets ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_mask`\u001b[0m\n\n"}
{"message":"variable `networkAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6514,"byte_end":6525,"line_start":290,"line_end":290,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>","highlight_start":35,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6514,"byte_end":6525,"line_start":290,"line_end":290,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>","highlight_start":35,"highlight_end":46}],"label":null,"suggested_replacement":"network_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:290:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_addr`\u001b[0m\n\n"}
{"message":"variable `networkMask` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6540,"byte_end":6551,"line_start":290,"line_end":290,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6540,"byte_end":6551,"line_start":290,"line_end":290,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"\t\t(IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":"network_mask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkMask` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:290:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (IpAddr::V6 (addr), IpAddr::V6 (networkAddr), IpAddr::V6 (networkMask)) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_mask`\u001b[0m\n\n"}
{"message":"variable `networkAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6630,"byte_end":6641,"line_start":294,"line_end":294,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkAddr = networkAddr.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6630,"byte_end":6641,"line_start":294,"line_end":294,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkAddr = networkAddr.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"network_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:294:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let networkAddr = networkAddr.octets ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_addr`\u001b[0m\n\n"}
{"message":"variable `networkMask` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"common.rs","byte_start":6674,"byte_end":6685,"line_start":295,"line_end":295,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkMask = networkMask.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"common.rs","byte_start":6674,"byte_end":6685,"line_start":295,"line_end":295,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\tlet networkMask = networkMask.octets ();","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"network_mask","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkMask` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcommon.rs:295:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let networkMask = networkMask.octets ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_mask`\u001b[0m\n\n"}
{"message":"static variable `globalConfig` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":191,"byte_end":203,"line_start":11,"line_end":11,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"static mut globalConfig: Option<Arc<DaemonConfig>> = None;","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":191,"byte_end":203,"line_start":11,"line_end":11,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"static mut globalConfig: Option<Arc<DaemonConfig>> = None;","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"GLOBAL_CONFIG","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `globalConfig` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:11:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstatic mut globalConfig: Option<Arc<DaemonConfig>> = None;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GLOBAL_CONFIG`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"structure field `containerName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":311,"byte_end":324,"line_start":17,"line_end":17,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub containerName: String,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":311,"byte_end":324,"line_start":17,"line_end":17,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub containerName: String,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"container_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `containerName` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:17:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub containerName: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `container_name`\u001b[0m\n\n"}
{"message":"structure field `pidList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":339,"byte_end":346,"line_start":18,"line_end":18,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tpub pidList: Vec<Pid>,","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":339,"byte_end":346,"line_start":18,"line_end":18,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tpub pidList: Vec<Pid>,","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"pid_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `pidList` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:18:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub pidList: Vec<Pid>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pid_list`\u001b[0m\n\n"}
{"message":"structure field `oldKernel` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":427,"byte_end":436,"line_start":25,"line_end":25,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\toldKernel: bool,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":427,"byte_end":436,"line_start":25,"line_end":25,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\toldKernel: bool,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"old_kernel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `oldKernel` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:25:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    oldKernel: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `old_kernel`\u001b[0m\n\n"}
{"message":"structure field `listenAddress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":446,"byte_end":459,"line_start":27,"line_end":27,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tlistenAddress: String,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":446,"byte_end":459,"line_start":27,"line_end":27,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tlistenAddress: String,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"listen_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `listenAddress` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:27:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    listenAddress: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_address`\u001b[0m\n\n"}
{"message":"structure field `captureSizeLimit` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":470,"byte_end":486,"line_start":28,"line_end":28,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tcaptureSizeLimit: usize,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":470,"byte_end":486,"line_start":28,"line_end":28,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tcaptureSizeLimit: usize,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"capture_size_limit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `captureSizeLimit` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:28:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    captureSizeLimit: usize,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `capture_size_limit`\u001b[0m\n\n"}
{"message":"structure field `controlCommandReceiveTimeout` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":551,"byte_end":579,"line_start":30,"line_end":30,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tcontrolCommandReceiveTimeout: Duration,","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":551,"byte_end":579,"line_start":30,"line_end":30,"column_start":2,"column_end":30,"is_primary":true,"text":[{"text":"\tcontrolCommandReceiveTimeout: Duration,","highlight_start":2,"highlight_end":30}],"label":null,"suggested_replacement":"control_command_receive_timeout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `controlCommandReceiveTimeout` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:30:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    controlCommandReceiveTimeout: Duration,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_command_receive_timeout`\u001b[0m\n\n"}
{"message":"structure field `captureThreadReceiveTimeout` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":647,"byte_end":674,"line_start":32,"line_end":32,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tcaptureThreadReceiveTimeout: Duration,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":647,"byte_end":674,"line_start":32,"line_end":32,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tcaptureThreadReceiveTimeout: Duration,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":"capture_thread_receive_timeout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `captureThreadReceiveTimeout` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:32:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    captureThreadReceiveTimeout: Duration,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `capture_thread_receive_timeout`\u001b[0m\n\n"}
{"message":"structure field `printPrettyOutput` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":687,"byte_end":704,"line_start":33,"line_end":33,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tprintPrettyOutput: bool,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":687,"byte_end":704,"line_start":33,"line_end":33,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tprintPrettyOutput: bool,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"print_pretty_output","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `printPrettyOutput` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:33:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    printPrettyOutput: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_pretty_output`\u001b[0m\n\n"}
{"message":"structure field `monitorTargets` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":714,"byte_end":728,"line_start":35,"line_end":35,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tmonitorTargets: Vec<MonitorTarget>,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":714,"byte_end":728,"line_start":35,"line_end":35,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tmonitorTargets: Vec<MonitorTarget>,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"monitor_targets","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `monitorTargets` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:35:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    monitorTargets: Vec<MonitorTarget>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `monitor_targets`\u001b[0m\n\n"}
{"message":"method `IsOldKernel` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":781,"byte_end":792,"line_start":40,"line_end":40,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn IsOldKernel (&self) -> bool { self.oldKernel }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":781,"byte_end":792,"line_start":40,"line_end":40,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn IsOldKernel (&self) -> bool { self.oldKernel }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"is_old_kernel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `IsOldKernel` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:40:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn IsOldKernel (&self) -> bool { self.oldKernel }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_old_kernel`\u001b[0m\n\n"}
{"message":"method `ListenAddress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":836,"byte_end":849,"line_start":41,"line_end":41,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn ListenAddress (&self) -> String { self.listenAddress.clone () }","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":836,"byte_end":849,"line_start":41,"line_end":41,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn ListenAddress (&self) -> String { self.listenAddress.clone () }","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"listen_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ListenAddress` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ListenAddress (&self) -> String { self.listenAddress.clone () }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `listen_address`\u001b[0m\n\n"}
{"message":"method `CaptureSizeLimit` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":908,"byte_end":924,"line_start":42,"line_end":42,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn CaptureSizeLimit (&self) -> usize { self.captureSizeLimit }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":908,"byte_end":924,"line_start":42,"line_end":42,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn CaptureSizeLimit (&self) -> usize { self.captureSizeLimit }","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"capture_size_limit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CaptureSizeLimit` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:42:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CaptureSizeLimit (&self) -> usize { self.captureSizeLimit }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `capture_size_limit`\u001b[0m\n\n"}
{"message":"method `ControlCommandReceiveTimeout` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":976,"byte_end":1004,"line_start":43,"line_end":43,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn ControlCommandReceiveTimeout (&self) -> Duration { self.controlCommandReceiveTimeout }","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":976,"byte_end":1004,"line_start":43,"line_end":43,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn ControlCommandReceiveTimeout (&self) -> Duration { self.controlCommandReceiveTimeout }","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"control_command_receive_timeout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ControlCommandReceiveTimeout` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ControlCommandReceiveTimeout (&self) -> Duration { self.controlCommandReceiveTimeout }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_command_receive_timeout`\u001b[0m\n\n"}
{"message":"method `CaptureThreadReceiveTimeout` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1071,"byte_end":1098,"line_start":44,"line_end":44,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"\tpub fn CaptureThreadReceiveTimeout (&self) -> Duration { self.captureThreadReceiveTimeout }","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1071,"byte_end":1098,"line_start":44,"line_end":44,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"\tpub fn CaptureThreadReceiveTimeout (&self) -> Duration { self.captureThreadReceiveTimeout }","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":"capture_thread_receive_timeout","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CaptureThreadReceiveTimeout` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CaptureThreadReceiveTimeout (&self) -> Duration { self.captureThreadReceiveTimeout }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `capture_thread_receive_timeout`\u001b[0m\n\n"}
{"message":"method `PrintPrettyOutput` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1164,"byte_end":1181,"line_start":45,"line_end":45,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"\tpub fn PrintPrettyOutput (&self) -> bool { self.printPrettyOutput }","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1164,"byte_end":1181,"line_start":45,"line_end":45,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"\tpub fn PrintPrettyOutput (&self) -> bool { self.printPrettyOutput }","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"print_pretty_output","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `PrintPrettyOutput` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PrintPrettyOutput (&self) -> bool { self.printPrettyOutput }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_pretty_output`\u001b[0m\n\n"}
{"message":"method `MonitorTargets` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1233,"byte_end":1247,"line_start":46,"line_end":46,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn MonitorTargets (&self) -> Vec<MonitorTarget> { self.monitorTargets.clone () }","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1233,"byte_end":1247,"line_start":46,"line_end":46,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn MonitorTargets (&self) -> Vec<MonitorTarget> { self.monitorTargets.clone () }","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"monitor_targets","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MonitorTargets` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MonitorTargets (&self) -> Vec<MonitorTarget> { self.monitorTargets.clone () }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `monitor_targets`\u001b[0m\n\n"}
{"message":"function `NanoSecondsToDuration` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1318,"byte_end":1339,"line_start":50,"line_end":50,"column_start":4,"column_end":25,"is_primary":true,"text":[{"text":"fn NanoSecondsToDuration<'de, D: Deserializer<'de>> (deserializer: D) -> Result<Duration, D::Error>","highlight_start":4,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1318,"byte_end":1339,"line_start":50,"line_end":50,"column_start":4,"column_end":25,"is_primary":true,"text":[{"text":"fn NanoSecondsToDuration<'de, D: Deserializer<'de>> (deserializer: D) -> Result<Duration, D::Error>","highlight_start":4,"highlight_end":25}],"label":null,"suggested_replacement":"nano_seconds_to_duration","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `NanoSecondsToDuration` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:50:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn NanoSecondsToDuration<'de, D: Deserializer<'de>> (deserializer: D) -> Result<Duration, D::Error>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nano_seconds_to_duration`\u001b[0m\n\n"}
{"message":"function `InitGlobalConfig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1496,"byte_end":1512,"line_start":55,"line_end":55,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1496,"byte_end":1512,"line_start":55,"line_end":55,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"init_global_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `InitGlobalConfig` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:55:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `init_global_config`\u001b[0m\n\n"}
{"message":"variable `configPath` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1514,"byte_end":1524,"line_start":55,"line_end":55,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"pub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>","highlight_start":26,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1514,"byte_end":1524,"line_start":55,"line_end":55,"column_start":26,"column_end":36,"is_primary":true,"text":[{"text":"pub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>","highlight_start":26,"highlight_end":36}],"label":null,"suggested_replacement":"config_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `configPath` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:55:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn InitGlobalConfig (configPath: &str) -> Result<(), ConfigError>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `config_path`\u001b[0m\n\n"}
{"message":"function `GetGlobalConfig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":1698,"byte_end":1713,"line_start":68,"line_end":68,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn GetGlobalConfig () -> Result<Arc<DaemonConfig>, ConfigError>","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":1698,"byte_end":1713,"line_start":68,"line_end":68,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn GetGlobalConfig () -> Result<Arc<DaemonConfig>, ConfigError>","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"get_global_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GetGlobalConfig` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:68:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn GetGlobalConfig () -> Result<Arc<DaemonConfig>, ConfigError>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_global_config`\u001b[0m\n\n"}
{"message":"variable `configError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"config.rs","byte_start":2206,"byte_end":2217,"line_start":96,"line_end":96,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"\t\t\tSelf::LOAD_CONFIG_ERROR(configError) => String::from (format! (\"Load config error: {}\", configError)),","highlight_start":28,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"config.rs","byte_start":2206,"byte_end":2217,"line_start":96,"line_end":96,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"\t\t\tSelf::LOAD_CONFIG_ERROR(configError) => String::from (format! (\"Load config error: {}\", configError)),","highlight_start":28,"highlight_end":39}],"label":null,"suggested_replacement":"config_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `configError` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mconfig.rs:96:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::LOAD_CONFIG_ERROR(configError) => String::from (format! (\"Load config error: {}\", configError)),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `config_error`\u001b[0m\n\n"}
{"message":"structure field `messageLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":1635,"byte_end":1648,"line_start":44,"line_end":44,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    messageLength: u32,         // included header length","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":1635,"byte_end":1648,"line_start":44,"line_end":44,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    messageLength: u32,         // included header length","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"message_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageLength` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:44:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageLength: u32,         // included header length\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_length`\u001b[0m\n\n"}
{"message":"structure field `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":1693,"byte_end":1704,"line_start":45,"line_end":45,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    messageType: u16,           // depend on protocol","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":1693,"byte_end":1704,"line_start":45,"line_end":45,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    messageType: u16,           // depend on protocol","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:45:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageType: u16,           // depend on protocol\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"structure field `messageFlags` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":1747,"byte_end":1759,"line_start":46,"line_end":46,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    messageFlags: u16,          // used by kernel","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":1747,"byte_end":1759,"line_start":46,"line_end":46,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    messageFlags: u16,          // used by kernel","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"message_flags","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageFlags` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:46:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageFlags: u16,          // used by kernel\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_flags`\u001b[0m\n\n"}
{"message":"structure field `messageSequenceNumber` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":1797,"byte_end":1818,"line_start":47,"line_end":47,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    messageSequenceNumber: u32, // kernel don't care about this","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":1797,"byte_end":1818,"line_start":47,"line_end":47,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    messageSequenceNumber: u32, // kernel don't care about this","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"message_sequence_number","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageSequenceNumber` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:47:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageSequenceNumber: u32, // kernel don't care about this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_sequence_number`\u001b[0m\n\n"}
{"message":"structure field `messagePid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":1861,"byte_end":1871,"line_start":48,"line_end":48,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    messagePid: u32,            // kernel don't care about this","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":1861,"byte_end":1871,"line_start":48,"line_end":48,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    messagePid: u32,            // kernel don't care about this","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"message_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messagePid` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:48:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messagePid: u32,            // kernel don't care about this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_pid`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2030,"byte_end":2033,"line_start":54,"line_end":54,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2030,"byte_end":2033,"line_start":54,"line_end":54,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:54:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `payloadLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2043,"byte_end":2056,"line_start":55,"line_end":55,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        payloadLength: usize,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2043,"byte_end":2056,"line_start":55,"line_end":55,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        payloadLength: usize,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"payload_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadLength` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:55:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        payloadLength: usize,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_length`\u001b[0m\n\n"}
{"message":"variable `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2073,"byte_end":2084,"line_start":56,"line_end":56,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        messageType: u16,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2073,"byte_end":2084,"line_start":56,"line_end":56,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        messageType: u16,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        messageType: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"variable `messageFlags` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2099,"byte_end":2111,"line_start":57,"line_end":57,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        messageFlags: u16,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2099,"byte_end":2111,"line_start":57,"line_end":57,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        messageFlags: u16,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"message_flags","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageFlags` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:57:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        messageFlags: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_flags`\u001b[0m\n\n"}
{"message":"variable `messageSequenceNumber` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2126,"byte_end":2147,"line_start":58,"line_end":58,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"        messageSequenceNumber: u32,","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2126,"byte_end":2147,"line_start":58,"line_end":58,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"        messageSequenceNumber: u32,","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"message_sequence_number","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageSequenceNumber` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        messageSequenceNumber: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_sequence_number`\u001b[0m\n\n"}
{"message":"variable `messagePid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2162,"byte_end":2172,"line_start":59,"line_end":59,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        messagePid: u32,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2162,"byte_end":2172,"line_start":59,"line_end":59,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        messagePid: u32,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"message_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messagePid` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:59:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        messagePid: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_pid`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2414,"byte_end":2425,"line_start":70,"line_end":70,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2414,"byte_end":2425,"line_start":70,"line_end":70,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:70:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray(&self) -> Vec<u8> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":2649,"byte_end":2662,"line_start":78,"line_end":78,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":2649,"byte_end":2662,"line_start":78,"line_end":78,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:78:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":3646,"byte_end":3649,"line_start":124,"line_end":124,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(value: u16) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":3646,"byte_end":3649,"line_start":124,"line_end":124,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(value: u16) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:124:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(value: u16) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":5031,"byte_end":5042,"line_start":174,"line_end":174,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":5031,"byte_end":5042,"line_start":174,"line_end":174,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:174:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray(&self) -> Vec<u8> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"variable `genericPayload` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":5110,"byte_end":5124,"line_start":176,"line_end":176,"column_start":27,"column_end":41,"is_primary":true,"text":[{"text":"            Self::GENERIC(genericPayload) => genericPayload.ToByteArray(),","highlight_start":27,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":5110,"byte_end":5124,"line_start":176,"line_end":176,"column_start":27,"column_end":41,"is_primary":true,"text":[{"text":"            Self::GENERIC(genericPayload) => genericPayload.ToByteArray(),","highlight_start":27,"highlight_end":41}],"label":null,"suggested_replacement":"generic_payload","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericPayload` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:176:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::GENERIC(genericPayload) => genericPayload.ToByteArray(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_payload`\u001b[0m\n\n"}
{"message":"method `ToU16` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":7072,"byte_end":7077,"line_start":241,"line_end":241,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn ToU16(&self) -> u16 {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":7072,"byte_end":7077,"line_start":241,"line_end":241,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn ToU16(&self) -> u16 {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"to_u16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToU16` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:241:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToU16(&self) -> u16 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_u16`\u001b[0m\n\n"}
{"message":"method `FromU16` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":7997,"byte_end":8004,"line_start":263,"line_end":263,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn FromU16(value: u16) -> Result<Vec<Self>, NetlinkError> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":7997,"byte_end":8004,"line_start":263,"line_end":263,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn FromU16(value: u16) -> Result<Vec<Self>, NetlinkError> {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromU16` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:263:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromU16(value: u16) -> Result<Vec<Self>, NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_u16`\u001b[0m\n\n"}
{"message":"structure field `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":10647,"byte_end":10658,"line_start":362,"line_end":362,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    messageType: NetlinkMessageType,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":10647,"byte_end":10658,"line_start":362,"line_end":362,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    messageType: NetlinkMessageType,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:362:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageType: NetlinkMessageType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":10821,"byte_end":10824,"line_start":370,"line_end":370,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":10821,"byte_end":10824,"line_start":370,"line_end":370,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:370:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":10834,"byte_end":10845,"line_start":371,"line_end":371,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        messageType: NetlinkMessageType,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":10834,"byte_end":10845,"line_start":371,"line_end":371,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        messageType: NetlinkMessageType,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:371:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        messageType: NetlinkMessageType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":11085,"byte_end":11089,"line_start":382,"line_end":382,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Type(&self) -> NetlinkMessagePayloadType {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":11085,"byte_end":11089,"line_start":382,"line_end":382,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Type(&self) -> NetlinkMessagePayloadType {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:382:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type(&self) -> NetlinkMessagePayloadType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m(&self) -> NetlinkMessagePayloadType {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":11364,"byte_end":11375,"line_start":389,"line_end":389,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":11364,"byte_end":11375,"line_start":389,"line_end":389,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:389:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray(&self) -> Vec<u8> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":11895,"byte_end":11908,"line_start":406,"line_end":406,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":11895,"byte_end":11908,"line_start":406,"line_end":406,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:406:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"variable `payloadType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":11938,"byte_end":11949,"line_start":408,"line_end":408,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        payloadType: NetlinkMessagePayloadType,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":11938,"byte_end":11949,"line_start":408,"line_end":408,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        payloadType: NetlinkMessagePayloadType,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"payload_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:408:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        payloadType: NetlinkMessagePayloadType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_type`\u001b[0m\n\n"}
{"message":"variable `netlinkMessageHeader` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":12028,"byte_end":12048,"line_start":410,"line_end":410,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"        let netlinkMessageHeader = NetlinkMessageHeader::FromByteArray(&buf)?;","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":12028,"byte_end":12048,"line_start":410,"line_end":410,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"        let netlinkMessageHeader = NetlinkMessageHeader::FromByteArray(&buf)?;","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"netlink_message_header","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `netlinkMessageHeader` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:410:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let netlinkMessageHeader = NetlinkMessageHeader::FromByteArray(&buf)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `netlink_message_header`\u001b[0m\n\n"}
{"message":"variable `payloadStartIndex` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":12107,"byte_end":12124,"line_start":411,"line_end":411,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        let payloadStartIndex =","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":12107,"byte_end":12124,"line_start":411,"line_end":411,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        let payloadStartIndex =","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"payload_start_index","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadStartIndex` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:411:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let payloadStartIndex =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_start_index`\u001b[0m\n\n"}
{"message":"variable `payloadSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":12364,"byte_end":12375,"line_start":417,"line_end":417,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let payloadSize = netlinkMessageHeader.messageLength as usize - payloadStartIndex;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":12364,"byte_end":12375,"line_start":417,"line_end":417,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let payloadSize = netlinkMessageHeader.messageLength as usize - payloadStartIndex;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"payload_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:417:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let payloadSize = netlinkMessageHeader.messageLength as usize - payloadStartIndex;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_size`\u001b[0m\n\n"}
{"message":"variable `errorCode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":12681,"byte_end":12690,"line_start":422,"line_end":422,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let errorCode = i32::from_ne_bytes(","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":12681,"byte_end":12690,"line_start":422,"line_end":422,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let errorCode = i32::from_ne_bytes(","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"error_code","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `errorCode` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:422:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let errorCode = i32::from_ne_bytes(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `error_code`\u001b[0m\n\n"}
{"message":"variable `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":13027,"byte_end":13038,"line_start":432,"line_end":432,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let messageType = GenericNetlinkMessageType::New(netlinkMessageHeader.messageType);","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":13027,"byte_end":13038,"line_start":432,"line_end":432,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let messageType = GenericNetlinkMessageType::New(netlinkMessageHeader.messageType);","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:432:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let messageType = GenericNetlinkMessageType::New(netlinkMessageHeader.messageType);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"structure field `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":13770,"byte_end":13783,"line_start":454,"line_end":454,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    attributeType: u16,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":13770,"byte_end":13783,"line_start":454,"line_end":454,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    attributeType: u16,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:454:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attributeType: u16,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":13903,"byte_end":13906,"line_start":460,"line_end":460,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":13903,"byte_end":13906,"line_start":460,"line_end":460,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:460:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `payloadLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":13907,"byte_end":13920,"line_start":460,"line_end":460,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":13907,"byte_end":13920,"line_start":460,"line_end":460,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":"payload_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadLength` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:460:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_length`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":13929,"byte_end":13942,"line_start":460,"line_end":460,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":13929,"byte_end":13942,"line_start":460,"line_end":460,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:460:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(payloadLength: usize, attributeType: NetlinkMessageAttributeType) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14134,"byte_end":14145,"line_start":467,"line_end":467,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":14134,"byte_end":14145,"line_start":467,"line_end":467,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:467:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m467\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray(&self) -> Vec<u8> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14369,"byte_end":14382,"line_start":475,"line_end":475,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":14369,"byte_end":14382,"line_start":475,"line_end":475,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:475:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m475\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray(buf: &[u8]) -> Result<Self, NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14761,"byte_end":14764,"line_start":489,"line_end":489,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(value: u16) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":14761,"byte_end":14764,"line_start":489,"line_end":489,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(value: u16) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:489:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(value: u16) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"structure field `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":14981,"byte_end":14994,"line_start":502,"line_end":502,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    attributeType: NetlinkMessageAttributeType,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":14981,"byte_end":14994,"line_start":502,"line_end":502,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    attributeType: NetlinkMessageAttributeType,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:502:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attributeType: NetlinkMessageAttributeType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15129,"byte_end":15140,"line_start":509,"line_end":509,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15129,"byte_end":15140,"line_start":509,"line_end":509,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn ToByteArray(&self) -> Vec<u8> {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:509:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m509\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray(&self) -> Vec<u8> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"structure field `selfAddress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15268,"byte_end":15279,"line_start":517,"line_end":517,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    selfAddress: SocketAddr,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15268,"byte_end":15279,"line_start":517,"line_end":517,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    selfAddress: SocketAddr,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"self_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `selfAddress` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:517:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    selfAddress: SocketAddr,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `self_address`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15401,"byte_end":15404,"line_start":524,"line_end":524,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(protocol: NetlinkProtocol) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15401,"byte_end":15404,"line_start":524,"line_end":524,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(protocol: NetlinkProtocol) -> Result<Self, NetlinkError> {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:524:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m524\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(protocol: NetlinkProtocol) -> Result<Self, NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `selfAddress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15543,"byte_end":15554,"line_start":526,"line_end":526,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let selfAddress = socket.bind_auto()?;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15543,"byte_end":15554,"line_start":526,"line_end":526,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let selfAddress = socket.bind_auto()?;","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"self_address","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `selfAddress` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:526:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let selfAddress = socket.bind_auto()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `self_address`\u001b[0m\n\n"}
{"message":"method `Send` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15693,"byte_end":15697,"line_start":535,"line_end":535,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Send(&self, message: NetlinkMessage) -> Result<(), NetlinkError> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15693,"byte_end":15697,"line_start":535,"line_end":535,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Send(&self, message: NetlinkMessage) -> Result<(), NetlinkError> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"send","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Send` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:535:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Send(&self, message: NetlinkMessage) -> Result<(), NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `send`\u001b[0m\n\n"}
{"message":"method `Recv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":15847,"byte_end":15851,"line_start":540,"line_end":540,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Recv(&self) -> Result<NetlinkMessage, NetlinkError> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":15847,"byte_end":15851,"line_start":540,"line_end":540,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Recv(&self) -> Result<NetlinkMessage, NetlinkError> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Recv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:540:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m540\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Recv(&self) -> Result<NetlinkMessage, NetlinkError> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recv`\u001b[0m\n\n"}
{"message":"variable `payloadType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":16002,"byte_end":16013,"line_start":544,"line_end":544,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let payloadType = match self.protocol {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":16002,"byte_end":16013,"line_start":544,"line_end":544,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let payloadType = match self.protocol {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"payload_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:544:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m544\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let payloadType = match self.protocol {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_type`\u001b[0m\n\n"}
{"message":"variable `errorCode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink.rs","byte_start":17395,"byte_end":17404,"line_start":579,"line_end":579,"column_start":32,"column_end":41,"is_primary":true,"text":[{"text":"            Self::KERNEL_ERROR(errorCode) => {","highlight_start":32,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink.rs","byte_start":17395,"byte_end":17404,"line_start":579,"line_end":579,"column_start":32,"column_end":41,"is_primary":true,"text":[{"text":"            Self::KERNEL_ERROR(errorCode) => {","highlight_start":32,"highlight_end":41}],"label":null,"suggested_replacement":"error_code","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `errorCode` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink.rs:579:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m579\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::KERNEL_ERROR(errorCode) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `error_code`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":686,"byte_end":689,"line_start":26,"line_end":26,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (command: u8, version: u8) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":686,"byte_end":689,"line_start":26,"line_end":26,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (command: u8, version: u8) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:26:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (command: u8, version: u8) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":795,"byte_end":806,"line_start":36,"line_end":36,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":795,"byte_end":806,"line_start":36,"line_end":36,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:36:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":991,"byte_end":1004,"line_start":43,"line_end":43,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":991,"byte_end":1004,"line_start":43,"line_end":43,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":1357,"byte_end":1360,"line_start":61,"line_end":61,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u8) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":1357,"byte_end":1360,"line_start":61,"line_end":61,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u8) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (value: u8) -> Self { Self(value) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":1623,"byte_end":1626,"line_start":75,"line_end":75,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"\tpub const fn New (value: u16) -> Self { Self(value) }","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":1623,"byte_end":1626,"line_start":75,"line_end":75,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"\tpub const fn New (value: u16) -> Self { Self(value) }","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:75:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const fn New (value: u16) -> Self { Self(value) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"structure field `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":1962,"byte_end":1975,"line_start":92,"line_end":92,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tattributeType: GenericNetlinkMessageAttributeType,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":1962,"byte_end":1975,"line_start":92,"line_end":92,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tattributeType: GenericNetlinkMessageAttributeType,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attributeType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:92:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attributeType: GenericNetlinkMessageAttributeType,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2144,"byte_end":2147,"line_start":101,"line_end":101,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2144,"byte_end":2147,"line_start":101,"line_end":101,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:101:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2149,"byte_end":2162,"line_start":101,"line_end":101,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2149,"byte_end":2162,"line_start":101,"line_end":101,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:101:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (attributeType: GenericNetlinkMessageAttributeType, payload: Vec<u8>) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2286,"byte_end":2290,"line_start":110,"line_end":110,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> GenericNetlinkMessageAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2286,"byte_end":2290,"line_start":110,"line_end":110,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> GenericNetlinkMessageAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:110:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type (&self) -> GenericNetlinkMessageAttributeType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m (&self) -> GenericNetlinkMessageAttributeType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2373,"byte_end":2384,"line_start":115,"line_end":115,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2373,"byte_end":2384,"line_start":115,"line_end":115,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:115:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2706,"byte_end":2719,"line_start":125,"line_end":125,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2706,"byte_end":2719,"line_start":125,"line_end":125,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:125:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":2773,"byte_end":2786,"line_start":128,"line_end":128,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType = GenericNetlinkMessageAttributeType::New (u16::from_ne_bytes (buf[2..4].try_into ().unwrap ()));","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":2773,"byte_end":2786,"line_start":128,"line_end":128,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType = GenericNetlinkMessageAttributeType::New (u16::from_ne_bytes (buf[2..4].try_into ().unwrap ()));","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:128:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let attributeType = GenericNetlinkMessageAttributeType::New (u16::from_ne_bytes (buf[2..4].try_into ().unwrap ()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":3256,"byte_end":3259,"line_start":152,"line_end":152,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u16) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":3256,"byte_end":3259,"line_start":152,"line_end":152,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u16) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:152:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (value: u16) -> Self { Self(value) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":3306,"byte_end":3317,"line_start":154,"line_end":154,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":3306,"byte_end":3317,"line_start":154,"line_end":154,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:154:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"structure field `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":3715,"byte_end":3726,"line_start":177,"line_end":177,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tmessageType: GenericNetlinkMessageType,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":3715,"byte_end":3726,"line_start":177,"line_end":177,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tmessageType: GenericNetlinkMessageType,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:177:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    messageType: GenericNetlinkMessageType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":3969,"byte_end":3972,"line_start":188,"line_end":188,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":3969,"byte_end":3972,"line_start":188,"line_end":188,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:188:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":3974,"byte_end":3985,"line_start":188,"line_end":188,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self","highlight_start":14,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":3974,"byte_end":3985,"line_start":188,"line_end":188,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self","highlight_start":14,"highlight_end":25}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:188:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (messageType: GenericNetlinkMessageType, command: GenericNetlinkMessageCommand) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"method `MessageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4174,"byte_end":4185,"line_start":199,"line_end":199,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn MessageType (&self) -> GenericNetlinkMessageType { self.messageType }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4174,"byte_end":4185,"line_start":199,"line_end":199,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn MessageType (&self) -> GenericNetlinkMessageType { self.messageType }","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MessageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:199:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MessageType (&self) -> GenericNetlinkMessageType { self.messageType }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"method `Command` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4252,"byte_end":4259,"line_start":200,"line_end":200,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn Command (&self) -> GenericNetlinkMessageCommand { self.command }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4252,"byte_end":4259,"line_start":200,"line_end":200,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn Command (&self) -> GenericNetlinkMessageCommand { self.command }","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Command` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:200:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Command (&self) -> GenericNetlinkMessageCommand { self.command }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `command`\u001b[0m\n\n"}
{"message":"method `AddAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4326,"byte_end":4338,"line_start":202,"line_end":202,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"\tpub fn AddAttribute (&mut self, attribute: GenericNetlinkMessageAttribute)","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4326,"byte_end":4338,"line_start":202,"line_end":202,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"\tpub fn AddAttribute (&mut self, attribute: GenericNetlinkMessageAttribute)","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"add_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AddAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:202:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddAttribute (&mut self, attribute: GenericNetlinkMessageAttribute)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_attribute`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4444,"byte_end":4455,"line_start":207,"line_end":207,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4444,"byte_end":4455,"line_start":207,"line_end":207,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:207:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4897,"byte_end":4910,"line_start":227,"line_end":227,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4897,"byte_end":4910,"line_start":227,"line_end":227,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:227:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"variable `messageType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":4924,"byte_end":4935,"line_start":227,"line_end":227,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>","highlight_start":36,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":4924,"byte_end":4935,"line_start":227,"line_end":227,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>","highlight_start":36,"highlight_end":47}],"label":null,"suggested_replacement":"message_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `messageType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:227:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8], messageType: GenericNetlinkMessageType) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `message_type`\u001b[0m\n\n"}
{"message":"variable `genericMessageHeader` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":5003,"byte_end":5023,"line_start":229,"line_end":229,"column_start":7,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet genericMessageHeader = GenericNetlinkMessageHeader::FromByteArray (&buf)?;","highlight_start":7,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":5003,"byte_end":5023,"line_start":229,"line_end":229,"column_start":7,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet genericMessageHeader = GenericNetlinkMessageHeader::FromByteArray (&buf)?;","highlight_start":7,"highlight_end":27}],"label":null,"suggested_replacement":"generic_message_header","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericMessageHeader` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:229:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let genericMessageHeader = GenericNetlinkMessageHeader::FromByteArray (&buf)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_message_header`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":5089,"byte_end":5110,"line_start":231,"line_end":231,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (messageType, GenericNetlinkMessageCommand::New (genericMessageHeader.command));","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":5089,"byte_end":5110,"line_start":231,"line_end":231,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (messageType, GenericNetlinkMessageCommand::New (genericMessageHeader.command));","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:231:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let mut genericNetlinkMessage = GenericNetlinkMessage::New (messageType, GenericNetlinkMessageCommand::New (genericMessageHeader.co\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"variable `attributeCurrentIndex` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":5259,"byte_end":5280,"line_start":234,"line_end":234,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut attributeCurrentIndex = common::NextAlignNumber (GenericNetlinkMessageHeader::LENGTH, GenericNetlinkMessage::ATTRIBUTE_ALIGN);","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":5259,"byte_end":5280,"line_start":234,"line_end":234,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut attributeCurrentIndex = common::NextAlignNumber (GenericNetlinkMessageHeader::LENGTH, GenericNetlinkMessage::ATTRIBUTE_ALIGN);","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"attribute_current_index","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeCurrentIndex` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:234:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut attributeCurrentIndex = common::NextAlignNumber (GenericNetlinkMessageHeader::LENGTH, GenericNetlinkMessage::ATTRIBUT\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_current_index`\u001b[0m\n\n"}
{"message":"variable `currentAttributeSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":5441,"byte_end":5461,"line_start":238,"line_end":238,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tlet currentAttributeSize = u16::from_ne_bytes (buf[attributeCurrentIndex..attributeCurrentIndex + 2].try_into ().unwrap ()) as usize;","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":5441,"byte_end":5461,"line_start":238,"line_end":238,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tlet currentAttributeSize = u16::from_ne_bytes (buf[attributeCurrentIndex..attributeCurrentIndex + 2].try_into ().unwrap ()) as usize;","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":"current_attribute_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentAttributeSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:238:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let currentAttributeSize = u16::from_ne_bytes (buf[attributeCurrentIndex..attributeCurrentIndex + 2].try_into ().unwrap (\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_attribute_size`\u001b[0m\n\n"}
{"message":"variable `currentAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":5578,"byte_end":5594,"line_start":239,"line_end":239,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tlet currentAttribute = GenericNetlinkMessageAttribute::FromByteArray (&buf[attributeCurrentIndex..attributeCurrentIndex + currentAttributeSize])?;","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":5578,"byte_end":5594,"line_start":239,"line_end":239,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tlet currentAttribute = GenericNetlinkMessageAttribute::FromByteArray (&buf[attributeCurrentIndex..attributeCurrentIndex + currentAttributeSize])?;","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"current_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:239:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let currentAttribute = GenericNetlinkMessageAttribute::FromByteArray (&buf[attributeCurrentIndex..attributeCurrentIndex + currentAt\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_attribute`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageCommand` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":6616,"byte_end":6644,"line_start":278,"line_end":278,"column_start":15,"column_end":43,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":6616,"byte_end":6644,"line_start":278,"line_end":278,"column_start":15,"column_end":43,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":43}],"label":null,"suggested_replacement":"generic_netlink_message_command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageCommand` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:278:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_command`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":7955,"byte_end":7968,"line_start":315,"line_end":315,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":7955,"byte_end":7968,"line_start":315,"line_end":315,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:315:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"variable `componentType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":8171,"byte_end":8184,"line_start":320,"line_end":320,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet componentType = u16::from_ne_bytes (buf[2..4].try_into ().unwrap ());","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":8171,"byte_end":8184,"line_start":320,"line_end":320,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet componentType = u16::from_ne_bytes (buf[2..4].try_into ().unwrap ());","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":"component_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `componentType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:320:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let componentType = u16::from_ne_bytes (buf[2..4].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `component_type`\u001b[0m\n\n"}
{"message":"method `FromU32` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":8855,"byte_end":8862,"line_start":346,"line_end":346,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn FromU32 (value: u32) -> Result<Vec<Self>, GenericError>","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":8855,"byte_end":8862,"line_start":346,"line_end":346,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn FromU32 (value: u32) -> Result<Vec<Self>, GenericError>","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"from_u32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromU32` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:346:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromU32 (value: u32) -> Result<Vec<Self>, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_u32`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":9188,"byte_end":9201,"line_start":364,"line_end":364,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":9188,"byte_end":9201,"line_start":364,"line_end":364,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:364:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"variable `firstComponent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":9372,"byte_end":9386,"line_start":372,"line_end":372,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet firstComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[0..8])?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":9372,"byte_end":9386,"line_start":372,"line_end":372,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet firstComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[0..8])?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"first_component","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `firstComponent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:372:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let firstComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[0..8])?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `first_component`\u001b[0m\n\n"}
{"message":"variable `secondComponent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":9474,"byte_end":9489,"line_start":373,"line_end":373,"column_start":7,"column_end":22,"is_primary":true,"text":[{"text":"\t\tlet secondComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[8..16])?;","highlight_start":7,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":9474,"byte_end":9489,"line_start":373,"line_end":373,"column_start":7,"column_end":22,"is_primary":true,"text":[{"text":"\t\tlet secondComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[8..16])?;","highlight_start":7,"highlight_end":22}],"label":null,"suggested_replacement":"second_component","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `secondComponent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:373:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let secondComponent = GenericNetlinkControlMessageOpAttributeComponent::FromByteArray (&buf[8..16])?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `second_component`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":10487,"byte_end":10491,"line_start":413,"line_end":413,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> GenericNetlinkControlMessageAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":10487,"byte_end":10491,"line_start":413,"line_end":413,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> GenericNetlinkControlMessageAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:413:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type (&self) -> GenericNetlinkControlMessageAttributeType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m (&self) -> GenericNetlinkControlMessageAttributeType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"variable `headerSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":11873,"byte_end":11883,"line_start":452,"line_end":452,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tSelf::HEADER_SIZE(headerSize) =>","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":11873,"byte_end":11883,"line_start":452,"line_end":452,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tSelf::HEADER_SIZE(headerSize) =>","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"header_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `headerSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:452:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::HEADER_SIZE(headerSize) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `header_size`\u001b[0m\n\n"}
{"message":"variable `maxAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":12022,"byte_end":12034,"line_start":456,"line_end":456,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"\t\t\tSelf::MAX_ATTRIBUTE(maxAttribute) =>","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":12022,"byte_end":12034,"line_start":456,"line_end":456,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"\t\t\tSelf::MAX_ATTRIBUTE(maxAttribute) =>","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"max_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `maxAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:456:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::MAX_ATTRIBUTE(maxAttribute) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `max_attribute`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":12336,"byte_end":12366,"line_start":469,"line_end":469,"column_start":15,"column_end":45,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":12336,"byte_end":12366,"line_start":469,"line_end":469,"column_start":15,"column_end":45,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":45}],"label":null,"suggested_replacement":"generic_netlink_message_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:469:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_attribute`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":12438,"byte_end":12451,"line_start":471,"line_end":471,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType: GenericNetlinkControlMessageAttributeType = genericNetlinkMessageAttribute.Type ().try_into ()?;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":12438,"byte_end":12451,"line_start":471,"line_end":471,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType: GenericNetlinkControlMessageAttributeType = genericNetlinkMessageAttribute.Type ().try_into ()?;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:471:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let attributeType: GenericNetlinkControlMessageAttributeType = genericNetlinkMessageAttribute.Type ().try_into ()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `opsBuf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":13442,"byte_end":13448,"line_start":488,"line_end":488,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\t\t\t\tlet opsBuf = payload;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":13442,"byte_end":13448,"line_start":488,"line_end":488,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"\t\t\t\tlet opsBuf = payload;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"ops_buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `opsBuf` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:488:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let opsBuf = payload;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ops_buf`\u001b[0m\n\n"}
{"message":"variable `currentOpAttributeIndex` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":13503,"byte_end":13526,"line_start":490,"line_end":490,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut currentOpAttributeIndex = 0;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":13503,"byte_end":13526,"line_start":490,"line_end":490,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut currentOpAttributeIndex = 0;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"current_op_attribute_index","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentOpAttributeIndex` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:490:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut currentOpAttributeIndex = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_op_attribute_index`\u001b[0m\n\n"}
{"message":"variable `opSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":13623,"byte_end":13629,"line_start":495,"line_end":495,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet opSize = u16::from_ne_bytes (opsBuf[currentOpAttributeIndex..currentOpAttributeIndex + 2].try_into ().unwrap ()) as usize;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":13623,"byte_end":13629,"line_start":495,"line_end":495,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet opSize = u16::from_ne_bytes (opsBuf[currentOpAttributeIndex..currentOpAttributeIndex + 2].try_into ().unwrap ()) as usize;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"op_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `opSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:495:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m495\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let opSize = u16::from_ne_bytes (opsBuf[currentOpAttributeIndex..currentOpAttributeIndex + 2].try_into ().un\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `op_size`\u001b[0m\n\n"}
{"message":"variable `currentOpAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":13755,"byte_end":13773,"line_start":496,"line_end":496,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet currentOpAttribute = GenericNetlinkControlMessageOpAttribute::FromByteArray (&opsBuf[currentOpAttributeIndex + 4..currentOpAttributeIndex + opSize])?;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":13755,"byte_end":13773,"line_start":496,"line_end":496,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet currentOpAttribute = GenericNetlinkControlMessageOpAttribute::FromByteArray (&opsBuf[currentOpAttributeIndex + 4..currentOpAttributeIndex + opSize])?;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"current_op_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentOpAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:496:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let currentOpAttribute = GenericNetlinkControlMessageOpAttribute::FromByteArray (&opsBuf[currentOpAttributeIndex + 4..currentOpAttr\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_op_attribute`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageAttributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":14903,"byte_end":14937,"line_start":537,"line_end":537,"column_start":15,"column_end":49,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":14903,"byte_end":14937,"line_start":537,"line_end":537,"column_start":15,"column_end":49,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":49}],"label":null,"suggested_replacement":"generic_netlink_message_attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageAttributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:537:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_attribute_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16117,"byte_end":16120,"line_start":569,"line_end":569,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (command: GenericNetlinkControlMessageCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16117,"byte_end":16120,"line_start":569,"line_end":569,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (command: GenericNetlinkControlMessageCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:569:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m569\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (command: GenericNetlinkControlMessageCommand) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `AddControlAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16246,"byte_end":16265,"line_start":578,"line_end":578,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16246,"byte_end":16265,"line_start":578,"line_end":578,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"add_control_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AddControlAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:578:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_control_attribute`\u001b[0m\n\n"}
{"message":"variable `controlAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16278,"byte_end":16294,"line_start":578,"line_end":578,"column_start":41,"column_end":57,"is_primary":true,"text":[{"text":"\tpub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)","highlight_start":41,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16278,"byte_end":16294,"line_start":578,"line_end":578,"column_start":41,"column_end":57,"is_primary":true,"text":[{"text":"\tpub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)","highlight_start":41,"highlight_end":57}],"label":null,"suggested_replacement":"control_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `controlAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:578:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddControlAttribute (&mut self, controlAttribute: GenericNetlinkControlMessageAttribute)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_attribute`\u001b[0m\n\n"}
{"message":"method `GetControlAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16394,"byte_end":16413,"line_start":584,"line_end":584,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAttribute>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16394,"byte_end":16413,"line_start":584,"line_end":584,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAttribute>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"get_control_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetControlAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:584:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAt\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_control_attribute`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16422,"byte_end":16435,"line_start":584,"line_end":584,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"\tpub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAttribute>","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16422,"byte_end":16435,"line_start":584,"line_end":584,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"\tpub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAttribute>","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:584:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetControlAttribute (&self, attributeType: GenericNetlinkControlMessageAttributeType) -> Option<GenericNetlinkControlMessageAt\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":16800,"byte_end":16821,"line_start":602,"line_end":602,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (Self::TYPE, self.command.into ());","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":16800,"byte_end":16821,"line_start":602,"line_end":602,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (Self::TYPE, self.command.into ());","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:602:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m602\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut genericNetlinkMessage = GenericNetlinkMessage::New (Self::TYPE, self.command.into ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":17135,"byte_end":17156,"line_start":617,"line_end":617,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":17135,"byte_end":17156,"line_start":617,"line_end":617,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:617:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m617\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"structure field `netlinkConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":17674,"byte_end":17691,"line_start":644,"line_end":644,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tnetlinkConnection: NetlinkConnection,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":17674,"byte_end":17691,"line_start":644,"line_end":644,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tnetlinkConnection: NetlinkConnection,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"netlink_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `netlinkConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:644:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    netlinkConnection: NetlinkConnection,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `netlink_connection`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":17755,"byte_end":17758,"line_start":649,"line_end":649,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Result<Self, GenericError>","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":17755,"byte_end":17758,"line_start":649,"line_end":649,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Result<Self, GenericError>","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:649:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m649\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New () -> Result<Self, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `Send` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":17892,"byte_end":17896,"line_start":654,"line_end":654,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Send (&self, message: GenericNetlinkMessage) -> Result<(), GenericError>","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":17892,"byte_end":17896,"line_start":654,"line_end":654,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Send (&self, message: GenericNetlinkMessage) -> Result<(), GenericError>","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"send","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Send` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:654:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Send (&self, message: GenericNetlinkMessage) -> Result<(), GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `send`\u001b[0m\n\n"}
{"message":"variable `netlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":17974,"byte_end":17988,"line_start":656,"line_end":656,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet netlinkMessage = NetlinkMessage::New (message.messageType.into (), &[NetlinkMessageFlag::REQUEST], NetlinkMessagePayload::GENERIC(message));","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":17974,"byte_end":17988,"line_start":656,"line_end":656,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet netlinkMessage = NetlinkMessage::New (message.messageType.into (), &[NetlinkMessageFlag::REQUEST], NetlinkMessagePayload::GENERIC(message));","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `netlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:656:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   let netlinkMessage = NetlinkMessage::New (message.messageType.into (), &[NetlinkMessageFlag::REQUEST], NetlinkMessagePayload::GENER\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `netlink_message`\u001b[0m\n\n"}
{"message":"method `Recv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18186,"byte_end":18190,"line_start":662,"line_end":662,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Recv (&self) -> Result<GenericNetlinkMessage, GenericError>","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18186,"byte_end":18190,"line_start":662,"line_end":662,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Recv (&self) -> Result<GenericNetlinkMessage, GenericError>","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Recv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:662:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Recv (&self) -> Result<GenericNetlinkMessage, GenericError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `recv`\u001b[0m\n\n"}
{"message":"variable `netlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":18255,"byte_end":18269,"line_start":664,"line_end":664,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet netlinkMessage = self.netlinkConnection.Recv ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":18255,"byte_end":18269,"line_start":664,"line_end":664,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet netlinkMessage = self.netlinkConnection.Recv ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `netlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:664:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m664\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let netlinkMessage = self.netlinkConnection.Recv ()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `netlink_message`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":19345,"byte_end":19366,"line_start":701,"line_end":701,"column_start":32,"column_end":53,"is_primary":true,"text":[{"text":"\t\t\tSelf::CONTROL_MESSAGE_ERROR(genericNetlinkMessage) => String::from (format! (\"Control message error: {:?}\", genericNetlinkMessage)),","highlight_start":32,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":19345,"byte_end":19366,"line_start":701,"line_end":701,"column_start":32,"column_end":53,"is_primary":true,"text":[{"text":"\t\t\tSelf::CONTROL_MESSAGE_ERROR(genericNetlinkMessage) => String::from (format! (\"Control message error: {:?}\", genericNetlinkMessage)),","highlight_start":32,"highlight_end":53}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:701:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::CONTROL_MESSAGE_ERROR(genericNetlinkMessage) => String::from (format! (\"Control message error: {:?}\", genericNetli\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageCommand` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":19483,"byte_end":19511,"line_start":702,"line_end":702,"column_start":34,"column_end":62,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_CONTROL_COMMAND(genericNetlinkMessageCommand) => String::from (format! (\"Unknown control command: {:?}\", genericNetlinkMessageCommand)),","highlight_start":34,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":19483,"byte_end":19511,"line_start":702,"line_end":702,"column_start":34,"column_end":62,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_CONTROL_COMMAND(genericNetlinkMessageCommand) => String::from (format! (\"Unknown control command: {:?}\", genericNetlinkMessageCommand)),","highlight_start":34,"highlight_end":62}],"label":null,"suggested_replacement":"generic_netlink_message_command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageCommand` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:702:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mNTROL_COMMAND(genericNetlinkMessageCommand) => String::from (format! (\"Unknown control command: {:?}\", genericNetlinkMessageCommand)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_command`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":19648,"byte_end":19661,"line_start":703,"line_end":703,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unsupported control attribute type: {:?}\", attributeType)),","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":19648,"byte_end":19661,"line_start":703,"line_end":703,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unsupported control attribute type: {:?}\", attributeType)),","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:703:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m703\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   Self::UNSUPPORTED_CONTROL_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unsupported control attribute type: {:?}\", attri\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":19782,"byte_end":19795,"line_start":704,"line_end":704,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unknown attribute type: {:?}\", attributeType)),","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":19782,"byte_end":19795,"line_start":704,"line_end":704,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unknown attribute type: {:?}\", attributeType)),","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:704:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m704\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::UNKNOWN_ATTRIBUTE_TYPE(attributeType) => String::from (format! (\"Unknown attribute type: {:?}\", attributeType)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `opAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":19900,"byte_end":19911,"line_start":705,"line_end":705,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"\t\t\tSelf::OP_ATTRIBUTE_ERROR(opAttribute) => String::from (format! (\"Op attribute error: {:?}\", opAttribute)),","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":19900,"byte_end":19911,"line_start":705,"line_end":705,"column_start":29,"column_end":40,"is_primary":true,"text":[{"text":"\t\t\tSelf::OP_ATTRIBUTE_ERROR(opAttribute) => String::from (format! (\"Op attribute error: {:?}\", opAttribute)),","highlight_start":29,"highlight_end":40}],"label":null,"suggested_replacement":"op_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `opAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:705:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m705\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::OP_ATTRIBUTE_ERROR(opAttribute) => String::from (format! (\"Op attribute error: {:?}\", opAttribute)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `op_attribute`\u001b[0m\n\n"}
{"message":"variable `opAttributeComponent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":20020,"byte_end":20040,"line_start":706,"line_end":706,"column_start":39,"column_end":59,"is_primary":true,"text":[{"text":"\t\t\tSelf::OP_ATTRIBUTE_COMPONENT_ERROR(opAttributeComponent) => String::from (format! (\"Op attribute component error: {:?}\", opAttributeComponent)),","highlight_start":39,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":20020,"byte_end":20040,"line_start":706,"line_end":706,"column_start":39,"column_end":59,"is_primary":true,"text":[{"text":"\t\t\tSelf::OP_ATTRIBUTE_COMPONENT_ERROR(opAttributeComponent) => String::from (format! (\"Op attribute component error: {:?}\", opAttributeComponent)),","highlight_start":39,"highlight_end":59}],"label":null,"suggested_replacement":"op_attribute_component","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `opAttributeComponent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:706:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   Self::OP_ATTRIBUTE_COMPONENT_ERROR(opAttributeComponent) => String::from (format! (\"Op attribute component error: {:?}\", opAttribut\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `op_attribute_component`\u001b[0m\n\n"}
{"message":"variable `utf8Error` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"netlink/generic.rs","byte_start":20290,"byte_end":20299,"line_start":708,"line_end":708,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\tSelf::UTF8_ERROR(utf8Error) => String::from (format! (\"UTF-8 error: {}\", utf8Error)),","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"netlink/generic.rs","byte_start":20290,"byte_end":20299,"line_start":708,"line_end":708,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\tSelf::UTF8_ERROR(utf8Error) => String::from (format! (\"UTF-8 error: {}\", utf8Error)),","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":"utf8_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `utf8Error` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetlink/generic.rs:708:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::UTF8_ERROR(utf8Error) => String::from (format! (\"UTF-8 error: {}\", utf8Error)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `utf8_error`\u001b[0m\n\n"}
{"message":"constant `nullIpv4` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":547,"byte_end":555,"line_start":20,"line_end":20,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const nullIpv4: IpAddr = IpAddr::V4(Ipv4Addr::new (0, 0, 0, 0));","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":547,"byte_end":555,"line_start":20,"line_end":20,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const nullIpv4: IpAddr = IpAddr::V4(Ipv4Addr::new (0, 0, 0, 0));","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"NULL_IPV4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `nullIpv4` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:20:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst nullIpv4: IpAddr = IpAddr::V4(Ipv4Addr::new (0, 0, 0, 0));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NULL_IPV4`\u001b[0m\n\n"}
{"message":"constant `nullIpv6` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":612,"byte_end":620,"line_start":21,"line_end":21,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const nullIpv6: IpAddr = IpAddr::V6(Ipv6Addr::new (0, 0, 0, 0, 0, 0, 0, 0));","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":612,"byte_end":620,"line_start":21,"line_end":21,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"const nullIpv6: IpAddr = IpAddr::V6(Ipv6Addr::new (0, 0, 0, 0, 0, 0, 0, 0));","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"NULL_IPV6","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `nullIpv6` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:21:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst nullIpv6: IpAddr = IpAddr::V6(Ipv6Addr::new (0, 0, 0, 0, 0, 0, 0, 0));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `NULL_IPV6`\u001b[0m\n\n"}
{"message":"structure field `srcAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":881,"byte_end":888,"line_start":35,"line_end":35,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tsrcAddr: IpAddr,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":881,"byte_end":888,"line_start":35,"line_end":35,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tsrcAddr: IpAddr,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":"src_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `srcAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:35:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    srcAddr: IpAddr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_addr`\u001b[0m\n\n"}
{"message":"structure field `srcPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":899,"byte_end":906,"line_start":36,"line_end":36,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tsrcPort: u16,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":899,"byte_end":906,"line_start":36,"line_end":36,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tsrcPort: u16,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":"src_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `srcPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:36:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    srcPort: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_port`\u001b[0m\n\n"}
{"message":"structure field `desAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":914,"byte_end":921,"line_start":37,"line_end":37,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tdesAddr: IpAddr,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":914,"byte_end":921,"line_start":37,"line_end":37,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tdesAddr: IpAddr,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":"des_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `desAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:37:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    desAddr: IpAddr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_addr`\u001b[0m\n\n"}
{"message":"structure field `desPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":932,"byte_end":939,"line_start":38,"line_end":38,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tdesPort: u16,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":932,"byte_end":939,"line_start":38,"line_end":38,"column_start":2,"column_end":9,"is_primary":true,"text":[{"text":"\tdesPort: u16,","highlight_start":2,"highlight_end":9}],"label":null,"suggested_replacement":"des_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `desPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:38:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    desPort: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_port`\u001b[0m\n\n"}
{"message":"structure field `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":947,"byte_end":961,"line_start":39,"line_end":39,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tconnectionType: ConnectionType,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":947,"byte_end":961,"line_start":39,"line_end":39,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tconnectionType: ConnectionType,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `connectionType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:39:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectionType: ConnectionType,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1011,"byte_end":1014,"line_start":44,"line_end":44,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1011,"byte_end":1014,"line_start":44,"line_end":44,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `srcAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1016,"byte_end":1023,"line_start":44,"line_end":44,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1016,"byte_end":1023,"line_start":44,"line_end":44,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":"src_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_addr`\u001b[0m\n\n"}
{"message":"variable `srcPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1033,"byte_end":1040,"line_start":44,"line_end":44,"column_start":31,"column_end":38,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1033,"byte_end":1040,"line_start":44,"line_end":44,"column_start":31,"column_end":38,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":"src_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_port`\u001b[0m\n\n"}
{"message":"variable `desAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1047,"byte_end":1054,"line_start":44,"line_end":44,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":45,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1047,"byte_end":1054,"line_start":44,"line_end":44,"column_start":45,"column_end":52,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":45,"highlight_end":52}],"label":null,"suggested_replacement":"des_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_addr`\u001b[0m\n\n"}
{"message":"variable `desPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1064,"byte_end":1071,"line_start":44,"line_end":44,"column_start":62,"column_end":69,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":62,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1064,"byte_end":1071,"line_start":44,"line_end":44,"column_start":62,"column_end":69,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":62,"highlight_end":69}],"label":null,"suggested_replacement":"des_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:62\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_port`\u001b[0m\n\n"}
{"message":"variable `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1078,"byte_end":1092,"line_start":44,"line_end":44,"column_start":76,"column_end":90,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":76,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1078,"byte_end":1092,"line_start":44,"line_end":44,"column_start":76,"column_end":90,"is_primary":true,"text":[{"text":"\tpub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self","highlight_start":76,"highlight_end":90}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:44:76\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (srcAddr: IpAddr, srcPort: u16, desAddr: IpAddr, desPort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"method `SrcAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1215,"byte_end":1222,"line_start":56,"line_end":56,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1215,"byte_end":1222,"line_start":56,"line_end":56,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"src_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `SrcAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SrcAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_addr`\u001b[0m\n\n"}
{"message":"method `SrcPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1271,"byte_end":1278,"line_start":61,"line_end":61,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1271,"byte_end":1278,"line_start":61,"line_end":61,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn SrcPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"src_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `SrcPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SrcPort (&self) -> u16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_port`\u001b[0m\n\n"}
{"message":"method `DesAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1324,"byte_end":1331,"line_start":66,"line_end":66,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1324,"byte_end":1331,"line_start":66,"line_end":66,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"des_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `DesAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn DesAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_addr`\u001b[0m\n\n"}
{"message":"method `DesPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1380,"byte_end":1387,"line_start":71,"line_end":71,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1380,"byte_end":1387,"line_start":71,"line_end":71,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"\tpub fn DesPort (&self) -> u16","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"des_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `DesPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:71:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn DesPort (&self) -> u16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_port`\u001b[0m\n\n"}
{"message":"method `ConnectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1433,"byte_end":1447,"line_start":76,"line_end":76,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn ConnectionType (&self) -> ConnectionType","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1433,"byte_end":1447,"line_start":76,"line_end":76,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn ConnectionType (&self) -> ConnectionType","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ConnectionType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:76:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ConnectionType (&self) -> ConnectionType\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"structure field `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1594,"byte_end":1603,"line_start":86,"line_end":86,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tlocalAddr: IpAddr,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1594,"byte_end":1603,"line_start":86,"line_end":86,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tlocalAddr: IpAddr,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `localAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:86:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    localAddr: IpAddr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"structure field `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1614,"byte_end":1623,"line_start":87,"line_end":87,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tlocalPort: u16,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1614,"byte_end":1623,"line_start":87,"line_end":87,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tlocalPort: u16,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `localPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:87:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    localPort: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"structure field `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1631,"byte_end":1641,"line_start":88,"line_end":88,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tremoteAddr: IpAddr,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1631,"byte_end":1641,"line_start":88,"line_end":88,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tremoteAddr: IpAddr,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:88:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    remoteAddr: IpAddr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"structure field `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1652,"byte_end":1662,"line_start":89,"line_end":89,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tremotePort: u16,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1652,"byte_end":1662,"line_start":89,"line_end":89,"column_start":2,"column_end":12,"is_primary":true,"text":[{"text":"\tremotePort: u16,","highlight_start":2,"highlight_end":12}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `remotePort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:89:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    remotePort: u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"structure field `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1670,"byte_end":1684,"line_start":90,"line_end":90,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tconnectionType: ConnectionType,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1670,"byte_end":1684,"line_start":90,"line_end":90,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tconnectionType: ConnectionType,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `connectionType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:90:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectionType: ConnectionType,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1731,"byte_end":1734,"line_start":95,"line_end":95,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1731,"byte_end":1734,"line_start":95,"line_end":95,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1736,"byte_end":1745,"line_start":95,"line_end":95,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1736,"byte_end":1745,"line_start":95,"line_end":95,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"variable `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1755,"byte_end":1764,"line_start":95,"line_end":95,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1755,"byte_end":1764,"line_start":95,"line_end":95,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":33,"highlight_end":42}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localPort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"variable `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1771,"byte_end":1781,"line_start":95,"line_end":95,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1771,"byte_end":1781,"line_start":95,"line_end":95,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"variable `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1791,"byte_end":1801,"line_start":95,"line_end":95,"column_start":69,"column_end":79,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":69,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1791,"byte_end":1801,"line_start":95,"line_end":95,"column_start":69,"column_end":79,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":69,"highlight_end":79}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remotePort` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"variable `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1808,"byte_end":1822,"line_start":95,"line_end":95,"column_start":86,"column_end":100,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":86,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1808,"byte_end":1822,"line_start":95,"line_end":95,"column_start":86,"column_end":100,"is_primary":true,"text":[{"text":"\tpub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self","highlight_start":86,"highlight_end":100}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionType` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:95:86\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (localAddr: IpAddr, localPort: u16, remoteAddr: IpAddr, remotePort: u16, connectionType: ConnectionType) -> Self\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"method `LocalAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":1955,"byte_end":1964,"line_start":107,"line_end":107,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn LocalAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":1955,"byte_end":1964,"line_start":107,"line_end":107,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn LocalAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `LocalAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:107:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn LocalAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"method `LocalPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2015,"byte_end":2024,"line_start":112,"line_end":112,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn LocalPort (&self) -> u16","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2015,"byte_end":2024,"line_start":112,"line_end":112,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\tpub fn LocalPort (&self) -> u16","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `LocalPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:112:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn LocalPort (&self) -> u16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"method `RemoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2072,"byte_end":2082,"line_start":117,"line_end":117,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn RemoteAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2072,"byte_end":2082,"line_start":117,"line_end":117,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn RemoteAddr (&self) -> IpAddr","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RemoteAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:117:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RemoteAddr (&self) -> IpAddr\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"method `RemotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2134,"byte_end":2144,"line_start":122,"line_end":122,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn RemotePort (&self) -> u16","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2134,"byte_end":2144,"line_start":122,"line_end":122,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\tpub fn RemotePort (&self) -> u16","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RemotePort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:122:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RemotePort (&self) -> u16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"method `ConnectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2193,"byte_end":2207,"line_start":127,"line_end":127,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn ConnectionType (&self) -> ConnectionType","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2193,"byte_end":2207,"line_start":127,"line_end":127,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn ConnectionType (&self) -> ConnectionType","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ConnectionType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:127:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ConnectionType (&self) -> ConnectionType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"structure field `uniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2361,"byte_end":2374,"line_start":137,"line_end":137,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tuniConnection: UniConnection,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2361,"byte_end":2374,"line_start":137,"line_end":137,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tuniConnection: UniConnection,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:137:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uniConnection: UniConnection,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection`\u001b[0m\n\n"}
{"message":"structure field `packetCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2393,"byte_end":2404,"line_start":139,"line_end":139,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tpacketCount: Count,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2393,"byte_end":2404,"line_start":139,"line_end":139,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tpacketCount: Count,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"packet_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:139:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_count`\u001b[0m\n\n"}
{"message":"structure field `totalDataCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2414,"byte_end":2428,"line_start":140,"line_end":140,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\ttotalDataCount: DataCount,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2414,"byte_end":2428,"line_start":140,"line_end":140,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\ttotalDataCount: DataCount,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"total_data_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:140:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataCount: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_count`\u001b[0m\n\n"}
{"message":"structure field `realDataCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2442,"byte_end":2455,"line_start":141,"line_end":141,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\trealDataCount: DataCount,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2442,"byte_end":2455,"line_start":141,"line_end":141,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\trealDataCount: DataCount,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"real_data_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:141:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataCount: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_count`\u001b[0m\n\n"}
{"message":"structure field `isUsed` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2499,"byte_end":2505,"line_start":144,"line_end":144,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tisUsed: bool,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2499,"byte_end":2505,"line_start":144,"line_end":144,"column_start":2,"column_end":8,"is_primary":true,"text":[{"text":"\tisUsed: bool,","highlight_start":2,"highlight_end":8}],"label":null,"suggested_replacement":"is_used","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `isUsed` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:144:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    isUsed: bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `is_used`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2549,"byte_end":2552,"line_start":149,"line_end":149,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (uniConnection: UniConnection) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2549,"byte_end":2552,"line_start":149,"line_end":149,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (uniConnection: UniConnection) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:149:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (uniConnection: UniConnection) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `uniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2554,"byte_end":2567,"line_start":149,"line_end":149,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (uniConnection: UniConnection) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2554,"byte_end":2567,"line_start":149,"line_end":149,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (uniConnection: UniConnection) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":"uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:149:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (uniConnection: UniConnection) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection`\u001b[0m\n\n"}
{"message":"method `UniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2779,"byte_end":2792,"line_start":163,"line_end":163,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn UniConnection (&self) -> UniConnection","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2779,"byte_end":2792,"line_start":163,"line_end":163,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn UniConnection (&self) -> UniConnection","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `UniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:163:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn UniConnection (&self) -> UniConnection\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection`\u001b[0m\n\n"}
{"message":"method `PacketCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2854,"byte_end":2865,"line_start":168,"line_end":168,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn PacketCount (&self) -> Count","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2854,"byte_end":2865,"line_start":168,"line_end":168,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn PacketCount (&self) -> Count","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"packet_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `PacketCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:168:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PacketCount (&self) -> Count\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_count`\u001b[0m\n\n"}
{"message":"method `TotalDataCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2917,"byte_end":2931,"line_start":173,"line_end":173,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn TotalDataCount (&self) -> DataCount","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2917,"byte_end":2931,"line_start":173,"line_end":173,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"\tpub fn TotalDataCount (&self) -> DataCount","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"total_data_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalDataCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:173:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalDataCount (&self) -> DataCount\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_count`\u001b[0m\n\n"}
{"message":"method `RealDataCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":2990,"byte_end":3003,"line_start":178,"line_end":178,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn RealDataCount (&self) -> DataCount","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":2990,"byte_end":3003,"line_start":178,"line_end":178,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn RealDataCount (&self) -> DataCount","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"real_data_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealDataCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:178:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealDataCount (&self) -> DataCount\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_count`\u001b[0m\n\n"}
{"message":"method `MarkAsUsed` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":3057,"byte_end":3067,"line_start":183,"line_end":183,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"\tfn MarkAsUsed (&mut self)","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":3057,"byte_end":3067,"line_start":183,"line_end":183,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"\tfn MarkAsUsed (&mut self)","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"mark_as_used","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MarkAsUsed` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:183:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn MarkAsUsed (&mut self)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mark_as_used`\u001b[0m\n\n"}
{"message":"structure field `uniConnectionStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":3942,"byte_end":3960,"line_start":228,"line_end":228,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tuniConnectionStats: Option<HashMap<UniConnection, UniConnectionStat>>,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":3942,"byte_end":3960,"line_start":228,"line_end":228,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tuniConnectionStats: Option<HashMap<UniConnection, UniConnectionStat>>,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"uni_connection_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uniConnectionStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:228:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uniConnectionStats: Option<HashMap<UniConnection, UniConnectionStat>>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection_stats`\u001b[0m\n\n"}
{"message":"structure field `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4084,"byte_end":4097,"line_start":235,"line_end":235,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tinterfaceName: String,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4084,"byte_end":4097,"line_start":235,"line_end":235,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tinterfaceName: String,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:235:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    interfaceName: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"structure field `uniConnectionStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4206,"byte_end":4224,"line_start":239,"line_end":239,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tuniConnectionStats: HashMap<UniConnection, UniConnectionStat>,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4206,"byte_end":4224,"line_start":239,"line_end":239,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\tuniConnectionStats: HashMap<UniConnection, UniConnectionStat>,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"uni_connection_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uniConnectionStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:239:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uniConnectionStats: HashMap<UniConnection, UniConnectionStat>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection_stats`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4304,"byte_end":4307,"line_start":244,"line_end":244,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (interfaceName: String, description: String) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4304,"byte_end":4307,"line_start":244,"line_end":244,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (interfaceName: String, description: String) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:244:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (interfaceName: String, description: String) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4309,"byte_end":4322,"line_start":244,"line_end":244,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (interfaceName: String, description: String) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4309,"byte_end":4322,"line_start":244,"line_end":244,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (interfaceName: String, description: String) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:244:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (interfaceName: String, description: String) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"method `GetUniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4465,"byte_end":4485,"line_start":254,"line_end":254,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"\tpub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4465,"byte_end":4485,"line_start":254,"line_end":254,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"\tpub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"get_uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetUniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:254:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_uni_connection_stat`\u001b[0m\n\n"}
{"message":"variable `uniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4498,"byte_end":4511,"line_start":254,"line_end":254,"column_start":42,"column_end":55,"is_primary":true,"text":[{"text":"\tpub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>","highlight_start":42,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4498,"byte_end":4511,"line_start":254,"line_end":254,"column_start":42,"column_end":55,"is_primary":true,"text":[{"text":"\tpub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>","highlight_start":42,"highlight_end":55}],"label":null,"suggested_replacement":"uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:254:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetUniConnectionStat (&mut self, uniConnection: &UniConnection) -> Option<&UniConnectionStat>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection`\u001b[0m\n\n"}
{"message":"method `RemoveUsedUniConnectionStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4659,"byte_end":4687,"line_start":259,"line_end":259,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn RemoveUsedUniConnectionStats (&mut self)","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4659,"byte_end":4687,"line_start":259,"line_end":259,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn RemoveUsedUniConnectionStats (&mut self)","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"remove_used_uni_connection_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RemoveUsedUniConnectionStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:259:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RemoveUsedUniConnectionStats (&mut self)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remove_used_uni_connection_stats`\u001b[0m\n\n"}
{"message":"variable `_uniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4738,"byte_end":4752,"line_start":261,"line_end":261,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"\t\tself.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4738,"byte_end":4752,"line_start":261,"line_end":261,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"\t\tself.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":"_uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_uniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:261:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_uni_connection`\u001b[0m\n\n"}
{"message":"variable `uniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4754,"byte_end":4771,"line_start":261,"line_end":261,"column_start":52,"column_end":69,"is_primary":true,"text":[{"text":"\t\tself.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);","highlight_start":52,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4754,"byte_end":4771,"line_start":261,"line_end":261,"column_start":52,"column_end":69,"is_primary":true,"text":[{"text":"\t\tself.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);","highlight_start":52,"highlight_end":69}],"label":null,"suggested_replacement":"uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:261:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.uniConnectionStats.retain (|_uniConnection, uniConnectionStat| !uniConnectionStat.isUsed);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection_stat`\u001b[0m\n\n"}
{"message":"function `InterfaceRawStatUniConnectionStatsSerialize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":4811,"byte_end":4854,"line_start":266,"line_end":266,"column_start":4,"column_end":47,"is_primary":true,"text":[{"text":"fn InterfaceRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<UniConnection, UniConnectionStat>, serializer: S) -> Result<S::Ok, S::Error>","highlight_start":4,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":4811,"byte_end":4854,"line_start":266,"line_end":266,"column_start":4,"column_end":47,"is_primary":true,"text":[{"text":"fn InterfaceRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<UniConnection, UniConnectionStat>, serializer: S) -> Result<S::Ok, S::Error>","highlight_start":4,"highlight_end":47}],"label":null,"suggested_replacement":"interface_raw_stat_uni_connection_stats_serialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `InterfaceRawStatUniConnectionStatsSerialize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:266:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn InterfaceRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<UniConnection, UniConnectionStat>, serializer: S) -> Resul\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stat_uni_connection_stats_serialize`\u001b[0m\n\n"}
{"message":"structure field `connectionLookupTable` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5106,"byte_end":5127,"line_start":276,"line_end":276,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tconnectionLookupTable: HashMap<Inode, Connection>,","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5106,"byte_end":5127,"line_start":276,"line_end":276,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tconnectionLookupTable: HashMap<Inode, Connection>,","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"connection_lookup_table","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `connectionLookupTable` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:276:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectionLookupTable: HashMap<Inode, Connection>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_lookup_table`\u001b[0m\n\n"}
{"message":"structure field `interfaceNameLookupTable` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5188,"byte_end":5212,"line_start":279,"line_end":279,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tinterfaceNameLookupTable: HashMap<Connection, String>,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5188,"byte_end":5212,"line_start":279,"line_end":279,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tinterfaceNameLookupTable: HashMap<Connection, String>,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"interface_name_lookup_table","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `interfaceNameLookupTable` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:279:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    interfaceNameLookupTable: HashMap<Connection, String>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name_lookup_table`\u001b[0m\n\n"}
{"message":"structure field `interfaceRawStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5318,"byte_end":5335,"line_start":282,"line_end":282,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tinterfaceRawStats: HashMap<String, InterfaceRawStat>,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5318,"byte_end":5335,"line_start":282,"line_end":282,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tinterfaceRawStats: HashMap<String, InterfaceRawStat>,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"interface_raw_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `interfaceRawStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:282:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    interfaceRawStats: HashMap<String, InterfaceRawStat>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stats`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5405,"byte_end":5408,"line_start":287,"line_end":287,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5405,"byte_end":5408,"line_start":287,"line_end":287,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:287:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New () -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `LookupConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5578,"byte_end":5594,"line_start":297,"line_end":297,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn LookupConnection (&self, inode: &Inode) -> Option<&Connection>","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5578,"byte_end":5594,"line_start":297,"line_end":297,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"\tpub fn LookupConnection (&self, inode: &Inode) -> Option<&Connection>","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"lookup_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `LookupConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:297:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn LookupConnection (&self, inode: &Inode) -> Option<&Connection>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `lookup_connection`\u001b[0m\n\n"}
{"message":"method `LookupInterfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5738,"byte_end":5757,"line_start":302,"line_end":302,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn LookupInterfaceName (&self, connection: &Connection) -> Option<&str>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5738,"byte_end":5757,"line_start":302,"line_end":302,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn LookupInterfaceName (&self, connection: &Connection) -> Option<&str>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"lookup_interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `LookupInterfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:302:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn LookupInterfaceName (&self, connection: &Connection) -> Option<&str>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `lookup_interface_name`\u001b[0m\n\n"}
{"message":"method `GetInterfaceRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5910,"byte_end":5929,"line_start":307,"line_end":307,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5910,"byte_end":5929,"line_start":307,"line_end":307,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"get_interface_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetInterfaceRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:307:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_interface_raw_stat`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":5942,"byte_end":5955,"line_start":307,"line_end":307,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"\tpub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>","highlight_start":41,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":5942,"byte_end":5955,"line_start":307,"line_end":307,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"\tpub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>","highlight_start":41,"highlight_end":54}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:307:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetInterfaceRawStat (&mut self, interfaceName: &str) -> Option<&mut InterfaceRawStat>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `interfaceRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6059,"byte_end":6075,"line_start":309,"line_end":309,"column_start":61,"column_end":77,"is_primary":true,"text":[{"text":"\t\tself.interfaceRawStats.get_mut (interfaceName).and_then (|interfaceRawStat| Some(interfaceRawStat))","highlight_start":61,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6059,"byte_end":6075,"line_start":309,"line_end":309,"column_start":61,"column_end":77,"is_primary":true,"text":[{"text":"\t\tself.interfaceRawStats.get_mut (interfaceName).and_then (|interfaceRawStat| Some(interfaceRawStat))","highlight_start":61,"highlight_end":77}],"label":null,"suggested_replacement":"interface_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:309:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.interfaceRawStats.get_mut (interfaceName).and_then (|interfaceRawStat| Some(interfaceRawStat))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stat`\u001b[0m\n\n"}
{"message":"method `RemoveUsedUniConnectionStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6113,"byte_end":6141,"line_start":312,"line_end":312,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn RemoveUsedUniConnectionStats (&mut self)","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6113,"byte_end":6141,"line_start":312,"line_end":312,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"\tpub fn RemoveUsedUniConnectionStats (&mut self)","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"remove_used_uni_connection_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RemoveUsedUniConnectionStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:312:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RemoveUsedUniConnectionStats (&mut self)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remove_used_uni_connection_stats`\u001b[0m\n\n"}
{"message":"variable `interfaceRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6167,"byte_end":6183,"line_start":314,"line_end":314,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tfor (_, interfaceRawStat) in &mut self.interfaceRawStats","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6167,"byte_end":6183,"line_start":314,"line_end":314,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tfor (_, interfaceRawStat) in &mut self.interfaceRawStats","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"interface_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:314:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (_, interfaceRawStat) in &mut self.interfaceRawStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stat`\u001b[0m\n\n"}
{"message":"function `NetworkRawStatUniConnectionStatsSerialize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6287,"byte_end":6328,"line_start":322,"line_end":322,"column_start":4,"column_end":45,"is_primary":true,"text":[{"text":"fn NetworkRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<String, InterfaceRawStat>, serializer: S) -> Result<S::Ok, S::Error>","highlight_start":4,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6287,"byte_end":6328,"line_start":322,"line_end":322,"column_start":4,"column_end":45,"is_primary":true,"text":[{"text":"fn NetworkRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<String, InterfaceRawStat>, serializer: S) -> Result<S::Ok, S::Error>","highlight_start":4,"highlight_end":45}],"label":null,"suggested_replacement":"network_raw_stat_uni_connection_stats_serialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `NetworkRawStatUniConnectionStatsSerialize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:322:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn NetworkRawStatUniConnectionStatsSerialize<S: Serializer> (input: &HashMap<String, InterfaceRawStat>, serializer: S) -> Result<S::Ok, S\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_raw_stat_uni_connection_stats_serialize`\u001b[0m\n\n"}
{"message":"function `ParseIpv4Packet` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6481,"byte_end":6496,"line_start":328,"line_end":328,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn ParseIpv4Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6481,"byte_end":6496,"line_start":328,"line_end":328,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn ParseIpv4Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":"parse_ipv4_packet","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `ParseIpv4Packet` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:328:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ParseIpv4Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parse_ipv4_packet`\u001b[0m\n\n"}
{"message":"variable `headerLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6909,"byte_end":6921,"line_start":345,"line_end":345,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tlet headerLength = ((data[0]&0x0f)*4) as usize;","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6909,"byte_end":6921,"line_start":345,"line_end":345,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tlet headerLength = ((data[0]&0x0f)*4) as usize;","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":"header_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `headerLength` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:345:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let headerLength = ((data[0]&0x0f)*4) as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `header_length`\u001b[0m\n\n"}
{"message":"variable `payloadLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":6979,"byte_end":6992,"line_start":348,"line_end":348,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tlet payloadLength = u16::from_be_bytes (data[2..4].try_into ().unwrap ()) as usize - headerLength;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":6979,"byte_end":6992,"line_start":348,"line_end":348,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tlet payloadLength = u16::from_be_bytes (data[2..4].try_into ().unwrap ()) as usize - headerLength;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"payload_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadLength` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:348:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let payloadLength = u16::from_be_bytes (data[2..4].try_into ().unwrap ()) as usize - headerLength;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_length`\u001b[0m\n\n"}
{"message":"variable `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":7105,"byte_end":7119,"line_start":351,"line_end":351,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tlet connectionType = match data[9]","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":7105,"byte_end":7119,"line_start":351,"line_end":351,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tlet connectionType = match data[9]","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:351:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let connectionType = match data[9]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"variable `srcAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":7336,"byte_end":7343,"line_start":359,"line_end":359,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcAddr = IpAddr::V4(Ipv4Addr::new (data[12], data[13], data[14], data[15]));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":7336,"byte_end":7343,"line_start":359,"line_end":359,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcAddr = IpAddr::V4(Ipv4Addr::new (data[12], data[13], data[14], data[15]));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"src_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:359:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let srcAddr = IpAddr::V4(Ipv4Addr::new (data[12], data[13], data[14], data[15]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_addr`\u001b[0m\n\n"}
{"message":"variable `desAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":7453,"byte_end":7460,"line_start":362,"line_end":362,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desAddr = IpAddr::V4(Ipv4Addr::new (data[16], data[17], data[18], data[19]));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":7453,"byte_end":7460,"line_start":362,"line_end":362,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desAddr = IpAddr::V4(Ipv4Addr::new (data[16], data[17], data[18], data[19]));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"des_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:362:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let desAddr = IpAddr::V4(Ipv4Addr::new (data[16], data[17], data[18], data[19]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_addr`\u001b[0m\n\n"}
{"message":"variable `srcPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":7557,"byte_end":7564,"line_start":365,"line_end":365,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcPort = u16::from_be_bytes (data.get (headerLength..headerLength + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":7557,"byte_end":7564,"line_start":365,"line_end":365,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcPort = u16::from_be_bytes (data.get (headerLength..headerLength + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"src_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:365:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let srcPort = u16::from_be_bytes (data.get (headerLength..headerLength + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwr\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_port`\u001b[0m\n\n"}
{"message":"variable `desPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":7717,"byte_end":7724,"line_start":368,"line_end":368,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desPort = u16::from_be_bytes (data.get (headerLength + 2..headerLength + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":7717,"byte_end":7724,"line_start":368,"line_end":368,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desPort = u16::from_be_bytes (data.get (headerLength + 2..headerLength + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"des_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:368:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let desPort = u16::from_be_bytes (data.get (headerLength + 2..headerLength + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_port`\u001b[0m\n\n"}
{"message":"function `ParseIpv6Packet` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":8133,"byte_end":8148,"line_start":384,"line_end":384,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn ParseIpv6Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":8133,"byte_end":8148,"line_start":384,"line_end":384,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn ParseIpv6Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":"parse_ipv6_packet","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `ParseIpv6Packet` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:384:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ParseIpv6Packet (data: &[u8]) -> Result<UniConnectionStat, NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parse_ipv6_packet`\u001b[0m\n\n"}
{"message":"variable `payloadLength` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":8565,"byte_end":8578,"line_start":401,"line_end":401,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tlet payloadLength = u16::from_be_bytes (data[4..6].try_into ().unwrap ()) as usize;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":8565,"byte_end":8578,"line_start":401,"line_end":401,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tlet payloadLength = u16::from_be_bytes (data[4..6].try_into ().unwrap ()) as usize;","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"payload_length","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `payloadLength` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:401:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let payloadLength = u16::from_be_bytes (data[4..6].try_into ().unwrap ()) as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `payload_length`\u001b[0m\n\n"}
{"message":"variable `srcAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":9210,"byte_end":9217,"line_start":412,"line_end":412,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":9210,"byte_end":9217,"line_start":412,"line_end":412,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"src_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:412:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let srcAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_addr`\u001b[0m\n\n"}
{"message":"variable `desAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":9839,"byte_end":9846,"line_start":423,"line_end":423,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":9839,"byte_end":9846,"line_start":423,"line_end":423,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"des_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:423:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let desAddr = IpAddr::V6(Ipv6Addr::new (a, b, c, d, e, f, g, h));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_addr`\u001b[0m\n\n"}
{"message":"variable `nextHeaderType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":9951,"byte_end":9965,"line_start":426,"line_end":426,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"\tlet mut nextHeaderType = data[6];","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":9951,"byte_end":9965,"line_start":426,"line_end":426,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"\tlet mut nextHeaderType = data[6];","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"next_header_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nextHeaderType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:426:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nextHeaderType = data[6];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `next_header_type`\u001b[0m\n\n"}
{"message":"variable `currentIndex` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":9986,"byte_end":9998,"line_start":427,"line_end":427,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\tlet mut currentIndex = IPV6_FIXED_HEADER_SIZE;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":9986,"byte_end":9998,"line_start":427,"line_end":427,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\tlet mut currentIndex = IPV6_FIXED_HEADER_SIZE;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"current_index","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentIndex` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:427:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut currentIndex = IPV6_FIXED_HEADER_SIZE;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_index`\u001b[0m\n\n"}
{"message":"variable `ipv6ExtensionHeaderTypes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":10030,"byte_end":10054,"line_start":428,"line_end":428,"column_start":6,"column_end":30,"is_primary":true,"text":[{"text":"\tlet ipv6ExtensionHeaderTypes = [0, 43, 44, 51, 50, 60, 135, 139, 140, 253, 254];","highlight_start":6,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":10030,"byte_end":10054,"line_start":428,"line_end":428,"column_start":6,"column_end":30,"is_primary":true,"text":[{"text":"\tlet ipv6ExtensionHeaderTypes = [0, 43, 44, 51, 50, 60, 135, 139, 140, 253, 254];","highlight_start":6,"highlight_end":30}],"label":null,"suggested_replacement":"ipv6_extension_header_types","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `ipv6ExtensionHeaderTypes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:428:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ipv6ExtensionHeaderTypes = [0, 43, 44, 51, 50, 60, 135, 139, 140, 253, 254];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ipv6_extension_header_types`\u001b[0m\n\n"}
{"message":"variable `normalPayloadTypes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":10112,"byte_end":10130,"line_start":429,"line_end":429,"column_start":6,"column_end":24,"is_primary":true,"text":[{"text":"\tlet normalPayloadTypes = [6, 17];","highlight_start":6,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":10112,"byte_end":10130,"line_start":429,"line_end":429,"column_start":6,"column_end":24,"is_primary":true,"text":[{"text":"\tlet normalPayloadTypes = [6, 17];","highlight_start":6,"highlight_end":24}],"label":null,"suggested_replacement":"normal_payload_types","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `normalPayloadTypes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:429:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let normalPayloadTypes = [6, 17];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `normal_payload_types`\u001b[0m\n\n"}
{"message":"variable `headerType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":10472,"byte_end":10482,"line_start":445,"line_end":445,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"\t\t\theaderType =>","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":10472,"byte_end":10482,"line_start":445,"line_end":445,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"\t\t\theaderType =>","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":"header_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `headerType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:445:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            headerType =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `header_type`\u001b[0m\n\n"}
{"message":"variable `connectionType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":10615,"byte_end":10629,"line_start":453,"line_end":453,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tlet connectionType = match nextHeaderType","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":10615,"byte_end":10629,"line_start":453,"line_end":453,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tlet connectionType = match nextHeaderType","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"connection_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:453:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let connectionType = match nextHeaderType\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_type`\u001b[0m\n\n"}
{"message":"variable `srcPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":10844,"byte_end":10851,"line_start":461,"line_end":461,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcPort = u16::from_be_bytes (data.get (currentIndex..currentIndex + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":10844,"byte_end":10851,"line_start":461,"line_end":461,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet srcPort = u16::from_be_bytes (data.get (currentIndex..currentIndex + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"src_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `srcPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:461:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let srcPort = u16::from_be_bytes (data.get (currentIndex..currentIndex + 2).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwr\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `src_port`\u001b[0m\n\n"}
{"message":"variable `desPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":11004,"byte_end":11011,"line_start":464,"line_end":464,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desPort = u16::from_be_bytes (data.get (currentIndex + 2..currentIndex + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":11004,"byte_end":11011,"line_start":464,"line_end":464,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tlet desPort = u16::from_be_bytes (data.get (currentIndex + 2..currentIndex + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().unwrap ());","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"des_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `desPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:464:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m464\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let desPort = u16::from_be_bytes (data.get (currentIndex + 2..currentIndex + 4).ok_or (NetworkStatError::CONVERT_ERROR)?.try_into ().\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `des_port`\u001b[0m\n\n"}
{"message":"function `GetUniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":11462,"byte_end":11482,"line_start":480,"line_end":480,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn GetUniConnectionStat (packet: Packet) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":11462,"byte_end":11482,"line_start":480,"line_end":480,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn GetUniConnectionStat (packet: Packet) -> Result<UniConnectionStat, NetworkStatError>","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":"get_uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GetUniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:480:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m480\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn GetUniConnectionStat (packet: Packet) -> Result<UniConnectionStat, NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_uni_connection_stat`\u001b[0m\n\n"}
{"message":"variable `currentIndex` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":11611,"byte_end":11623,"line_start":485,"line_end":485,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\tlet mut currentIndex = 12;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":11611,"byte_end":11623,"line_start":485,"line_end":485,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"\tlet mut currentIndex = 12;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"current_index","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentIndex` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:485:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut currentIndex = 12;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_index`\u001b[0m\n\n"}
{"message":"variable `vlanTag` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":11868,"byte_end":11875,"line_start":494,"line_end":494,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t\t\tvlanTag => return Err(NetworkStatError::UNKNOWN_VLAN_TAG(vlanTag)),","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":11868,"byte_end":11875,"line_start":494,"line_end":494,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t\t\tvlanTag => return Err(NetworkStatError::UNKNOWN_VLAN_TAG(vlanTag)),","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":"vlan_tag","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `vlanTag` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:494:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m494\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            vlanTag => return Err(NetworkStatError::UNKNOWN_VLAN_TAG(vlanTag)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `vlan_tag`\u001b[0m\n\n"}
{"message":"function `ControlThread` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12384,"byte_end":12397,"line_start":512,"line_end":512,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12384,"byte_end":12397,"line_start":512,"line_end":512,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":"control_thread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `ControlThread` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:512:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_thread`\u001b[0m\n\n"}
{"message":"variable `controlDataInReadEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12399,"byte_end":12419,"line_start":512,"line_end":512,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":19,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12399,"byte_end":12419,"line_start":512,"line_end":512,"column_start":19,"column_end":39,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":19,"highlight_end":39}],"label":null,"suggested_replacement":"control_data_in_read_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `controlDataInReadEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:512:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_data_in_read_end`\u001b[0m\n\n"}
{"message":"variable `controlDataOutWriteEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12435,"byte_end":12457,"line_start":512,"line_end":512,"column_start":55,"column_end":77,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":55,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12435,"byte_end":12457,"line_start":512,"line_end":512,"column_start":55,"column_end":77,"is_primary":true,"text":[{"text":"fn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>","highlight_start":55,"highlight_end":77}],"label":null,"suggested_replacement":"control_data_out_write_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `controlDataOutWriteEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:512:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ControlThread (controlDataInReadEnd: Receiver<()>, controlDataOutWriteEnd: Sender<NetworkRawStat>) -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_data_out_write_end`\u001b[0m\n\n"}
{"message":"variable `threadDatas` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12583,"byte_end":12594,"line_start":517,"line_end":517,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"\tlet mut threadDatas: HashMap<String, Arc<Mutex<ThreadData>>> = HashMap::new ();","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12583,"byte_end":12594,"line_start":517,"line_end":517,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"\tlet mut threadDatas: HashMap<String, Arc<Mutex<ThreadData>>> = HashMap::new ();","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"thread_datas","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadDatas` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:517:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut threadDatas: HashMap<String, Arc<Mutex<ThreadData>>> = HashMap::new ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_datas`\u001b[0m\n\n"}
{"message":"variable `networkRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12841,"byte_end":12855,"line_start":526,"line_end":526,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut networkRawStat = NetworkRawStat::New ();","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12841,"byte_end":12855,"line_start":526,"line_end":526,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut networkRawStat = NetworkRawStat::New ();","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"network_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:526:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut networkRawStat = NetworkRawStat::New ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_raw_stat`\u001b[0m\n\n"}
{"message":"variable `tcpContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12923,"byte_end":12933,"line_start":529,"line_end":529,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcpContent = fs::read_to_string (\"/proc/net/tcp\")?;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12923,"byte_end":12933,"line_start":529,"line_end":529,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcpContent = fs::read_to_string (\"/proc/net/tcp\")?;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"tcp_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tcpContent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:529:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let tcpContent = fs::read_to_string (\"/proc/net/tcp\")?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tcp_content`\u001b[0m\n\n"}
{"message":"variable `tcp6Content` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":12983,"byte_end":12994,"line_start":530,"line_end":530,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcp6Content = fs::read_to_string (\"/proc/net/tcp6\")?;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":12983,"byte_end":12994,"line_start":530,"line_end":530,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcp6Content = fs::read_to_string (\"/proc/net/tcp6\")?;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"tcp6_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tcp6Content` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:530:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let tcp6Content = fs::read_to_string (\"/proc/net/tcp6\")?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tcp6_content`\u001b[0m\n\n"}
{"message":"variable `udpContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13045,"byte_end":13055,"line_start":531,"line_end":531,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet udpContent = fs::read_to_string (\"/proc/net/udp\")?;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13045,"byte_end":13055,"line_start":531,"line_end":531,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet udpContent = fs::read_to_string (\"/proc/net/udp\")?;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"udp_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `udpContent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:531:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m531\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let udpContent = fs::read_to_string (\"/proc/net/udp\")?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `udp_content`\u001b[0m\n\n"}
{"message":"variable `udp6Content` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13105,"byte_end":13116,"line_start":532,"line_end":532,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\tlet udp6Content = fs::read_to_string (\"/proc/net/udp6\")?;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13105,"byte_end":13116,"line_start":532,"line_end":532,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\tlet udp6Content = fs::read_to_string (\"/proc/net/udp6\")?;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"udp6_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `udp6Content` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:532:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m532\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let udp6Content = fs::read_to_string (\"/proc/net/udp6\")?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `udp6_content`\u001b[0m\n\n"}
{"message":"variable `tcpLines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13168,"byte_end":13176,"line_start":534,"line_end":534,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcpLines: Vec<&str> = tcpContent.lines ().collect ();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13168,"byte_end":13176,"line_start":534,"line_end":534,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcpLines: Vec<&str> = tcpContent.lines ().collect ();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"tcp_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tcpLines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:534:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let tcpLines: Vec<&str> = tcpContent.lines ().collect ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tcp_lines`\u001b[0m\n\n"}
{"message":"variable `tcp6Lines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13230,"byte_end":13239,"line_start":535,"line_end":535,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcp6Lines: Vec<&str> = tcp6Content.lines ().collect ();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13230,"byte_end":13239,"line_start":535,"line_end":535,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\t\t\t\tlet tcp6Lines: Vec<&str> = tcp6Content.lines ().collect ();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"tcp6_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tcp6Lines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:535:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let tcp6Lines: Vec<&str> = tcp6Content.lines ().collect ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tcp6_lines`\u001b[0m\n\n"}
{"message":"variable `udpLines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13294,"byte_end":13302,"line_start":536,"line_end":536,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\t\tlet udpLines: Vec<&str> = udpContent.lines ().collect ();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13294,"byte_end":13302,"line_start":536,"line_end":536,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\t\tlet udpLines: Vec<&str> = udpContent.lines ().collect ();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"udp_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `udpLines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:536:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let udpLines: Vec<&str> = udpContent.lines ().collect ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `udp_lines`\u001b[0m\n\n"}
{"message":"variable `udp6Lines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":13356,"byte_end":13365,"line_start":537,"line_end":537,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\t\t\t\tlet udp6Lines: Vec<&str> = udp6Content.lines ().collect ();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":13356,"byte_end":13365,"line_start":537,"line_end":537,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"\t\t\t\tlet udp6Lines: Vec<&str> = udp6Content.lines ().collect ();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"udp6_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `udp6Lines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:537:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let udp6Lines: Vec<&str> = udp6Content.lines ().collect ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `udp6_lines`\u001b[0m\n\n"}
{"message":"variable `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":14003,"byte_end":14012,"line_start":555,"line_end":555,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":14003,"byte_end":14012,"line_start":555,"line_end":555,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:555:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"variable `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":14076,"byte_end":14085,"line_start":556,"line_end":556,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":14076,"byte_end":14085,"line_start":556,"line_end":556,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:556:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"variable `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":14150,"byte_end":14160,"line_start":558,"line_end":558,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":14150,"byte_end":14160,"line_start":558,"line_end":558,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:558:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m558\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"variable `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":14224,"byte_end":14234,"line_start":559,"line_end":559,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":14224,"byte_end":14234,"line_start":559,"line_end":559,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remotePort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:559:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m559\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"variable `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":16062,"byte_end":16071,"line_start":607,"line_end":607,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":16062,"byte_end":16071,"line_start":607,"line_end":607,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:607:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"variable `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":16143,"byte_end":16152,"line_start":608,"line_end":608,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":16143,"byte_end":16152,"line_start":608,"line_end":608,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:608:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m608\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"variable `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":16752,"byte_end":16762,"line_start":618,"line_end":618,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":16752,"byte_end":16762,"line_start":618,"line_end":618,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:618:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m618\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"variable `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":16834,"byte_end":16844,"line_start":619,"line_end":619,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":16834,"byte_end":16844,"line_start":619,"line_end":619,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remotePort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:619:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m619\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"variable `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":18132,"byte_end":18141,"line_start":659,"line_end":659,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":18132,"byte_end":18141,"line_start":659,"line_end":659,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:659:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m659\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localAddr = IpAddr::V4(Ipv4Addr::new (d[0], d[1], d[2], d[3]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"variable `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":18205,"byte_end":18214,"line_start":660,"line_end":660,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":18205,"byte_end":18214,"line_start":660,"line_end":660,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:660:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"variable `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":18279,"byte_end":18289,"line_start":662,"line_end":662,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":18279,"byte_end":18289,"line_start":662,"line_end":662,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:662:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remoteAddr = IpAddr::V4(Ipv4Addr::new (f[0], f[1], f[2], f[3]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"variable `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":18353,"byte_end":18363,"line_start":663,"line_end":663,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":18353,"byte_end":18363,"line_start":663,"line_end":663,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remotePort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:663:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m663\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"variable `localAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":20191,"byte_end":20200,"line_start":711,"line_end":711,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":20191,"byte_end":20200,"line_start":711,"line_end":711,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:711:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m711\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_addr`\u001b[0m\n\n"}
{"message":"variable `localPort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":20272,"byte_end":20281,"line_start":712,"line_end":712,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":20272,"byte_end":20281,"line_start":712,"line_end":712,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"local_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `localPort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:712:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m712\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let localPort = u16::from_be_bytes (e[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `local_port`\u001b[0m\n\n"}
{"message":"variable `remoteAddr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":20881,"byte_end":20891,"line_start":722,"line_end":722,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":20881,"byte_end":20891,"line_start":722,"line_end":722,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_addr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remoteAddr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:722:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m722\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remoteAddr = IpAddr::V6(Ipv6Addr::new (x1, x2, x3, x4, x5, x6, x7, x8));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_addr`\u001b[0m\n\n"}
{"message":"variable `remotePort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":20963,"byte_end":20973,"line_start":723,"line_end":723,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":20963,"byte_end":20973,"line_start":723,"line_end":723,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"remote_port","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `remotePort` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:723:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m723\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let remotePort = u16::from_be_bytes (g[0..2].try_into ().unwrap ());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `remote_port`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":21714,"byte_end":21727,"line_start":749,"line_end":749,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"\t\t\t\tfor (interfaceName, threadData) in &threadDatas","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":21714,"byte_end":21727,"line_start":749,"line_end":749,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"\t\t\t\tfor (interfaceName, threadData) in &threadDatas","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:749:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m749\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                for (interfaceName, threadData) in &threadDatas\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `threadData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":21729,"byte_end":21739,"line_start":749,"line_end":749,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"\t\t\t\tfor (interfaceName, threadData) in &threadDatas","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":21729,"byte_end":21739,"line_start":749,"line_end":749,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"\t\t\t\tfor (interfaceName, threadData) in &threadDatas","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":"thread_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:749:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m749\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                for (interfaceName, threadData) in &threadDatas\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_data`\u001b[0m\n\n"}
{"message":"variable `mutexLock` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":21776,"byte_end":21785,"line_start":751,"line_end":751,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet mut mutexLock = threadData.lock ()?;","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":21776,"byte_end":21785,"line_start":751,"line_end":751,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet mut mutexLock = threadData.lock ()?;","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":"mutex_lock","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `mutexLock` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:751:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m751\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut mutexLock = threadData.lock ()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mutex_lock`\u001b[0m\n\n"}
{"message":"variable `interfaceRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":21823,"byte_end":21839,"line_start":753,"line_end":753,"column_start":14,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet mut interfaceRawStat = InterfaceRawStat::New (interfaceName.clone (), mutexLock.device.desc.clone ().unwrap_or (String::new ()));","highlight_start":14,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":21823,"byte_end":21839,"line_start":753,"line_end":753,"column_start":14,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet mut interfaceRawStat = InterfaceRawStat::New (interfaceName.clone (), mutexLock.device.desc.clone ().unwrap_or (String::new ()));","highlight_start":14,"highlight_end":30}],"label":null,"suggested_replacement":"interface_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:753:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m753\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut interfaceRawStat = InterfaceRawStat::New (interfaceName.clone (), mutexLock.device.desc.clone ().unwrap_or \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stat`\u001b[0m\n\n"}
{"message":"variable `threadData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":22475,"byte_end":22485,"line_start":769,"line_end":769,"column_start":55,"column_end":65,"is_primary":true,"text":[{"text":"\t\tthreadDatas = threadDatas.into_iter ().filter (|(_, threadData)| Arc::strong_count (&threadData) == 2).collect ();","highlight_start":55,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":22475,"byte_end":22485,"line_start":769,"line_end":769,"column_start":55,"column_end":65,"is_primary":true,"text":[{"text":"\t\tthreadDatas = threadDatas.into_iter ().filter (|(_, threadData)| Arc::strong_count (&threadData) == 2).collect ();","highlight_start":55,"highlight_end":65}],"label":null,"suggested_replacement":"thread_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:769:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m769\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        threadDatas = threadDatas.into_iter ().filter (|(_, threadData)| Arc::strong_count (&threadData) == 2).collect ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_data`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":22575,"byte_end":22588,"line_start":773,"line_end":773,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"\t\t\tlet interfaceName = device.name.clone ();","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":22575,"byte_end":22588,"line_start":773,"line_end":773,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"\t\t\tlet interfaceName = device.name.clone ();","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:773:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m773\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let interfaceName = device.name.clone ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `threadData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":22746,"byte_end":22756,"line_start":778,"line_end":778,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet threadData = Arc::new (Mutex::new (ThreadData","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":22746,"byte_end":22756,"line_start":778,"line_end":778,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"\t\t\t\tlet threadData = Arc::new (Mutex::new (ThreadData","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"thread_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:778:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m778\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let threadData = Arc::new (Mutex::new (ThreadData\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_data`\u001b[0m\n\n"}
{"message":"function `CaptureThread` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":23039,"byte_end":23052,"line_start":794,"line_end":794,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":23039,"byte_end":23052,"line_start":794,"line_end":794,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":"capture_thread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `CaptureThread` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:794:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `capture_thread`\u001b[0m\n\n"}
{"message":"variable `threadData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":23054,"byte_end":23064,"line_start":794,"line_end":794,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"fn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>","highlight_start":19,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":23054,"byte_end":23064,"line_start":794,"line_end":794,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"fn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>","highlight_start":19,"highlight_end":29}],"label":null,"suggested_replacement":"thread_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:794:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn CaptureThread (threadData: Arc<Mutex<ThreadData>>) -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_data`\u001b[0m\n\n"}
{"message":"variable `mutexLock` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":23702,"byte_end":23711,"line_start":820,"line_end":820,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut mutexLock = threadData.lock ()?;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":23702,"byte_end":23711,"line_start":820,"line_end":820,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"\t\t\t\tlet mut mutexLock = threadData.lock ()?;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"mutex_lock","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `mutexLock` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:820:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut mutexLock = threadData.lock ()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mutex_lock`\u001b[0m\n\n"}
{"message":"variable `uniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":23863,"byte_end":23880,"line_start":827,"line_end":827,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\t\tlet uniConnectionStat = match GetUniConnectionStat (packet)","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":23863,"byte_end":23880,"line_start":827,"line_end":827,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\t\tlet uniConnectionStat = match GetUniConnectionStat (packet)","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:827:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let uniConnectionStat = match GetUniConnectionStat (packet)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection_stat`\u001b[0m\n\n"}
{"message":"variable `pcapError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24202,"byte_end":24211,"line_start":839,"line_end":839,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\tErr(pcapError) =>","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24202,"byte_end":24211,"line_start":839,"line_end":839,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"\t\t\tErr(pcapError) =>","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"pcap_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `pcapError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:839:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m839\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(pcapError) =>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pcap_error`\u001b[0m\n\n"}
{"message":"static variable `controlDataInWriteEnd` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24320,"byte_end":24341,"line_start":849,"line_end":849,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"\tstatic ref controlDataInWriteEnd: Mutex<Option<Sender<()>>> = Mutex::new (None);","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24320,"byte_end":24341,"line_start":849,"line_end":849,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"\tstatic ref controlDataInWriteEnd: Mutex<Option<Sender<()>>> = Mutex::new (None);","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":"CONTROL_DATA_IN_WRITE_END","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `controlDataInWriteEnd` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:849:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m849\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static ref controlDataInWriteEnd: Mutex<Option<Sender<()>>> = Mutex::new (None);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONTROL_DATA_IN_WRITE_END`\u001b[0m\n\n"}
{"message":"static variable `controlDataOutReadEnd` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24402,"byte_end":24423,"line_start":850,"line_end":850,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"\tstatic ref controlDataOutReadEnd: Mutex<Option<Receiver<NetworkRawStat>>> = Mutex::new (None);","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24402,"byte_end":24423,"line_start":850,"line_end":850,"column_start":13,"column_end":34,"is_primary":true,"text":[{"text":"\tstatic ref controlDataOutReadEnd: Mutex<Option<Receiver<NetworkRawStat>>> = Mutex::new (None);","highlight_start":13,"highlight_end":34}],"label":null,"suggested_replacement":"CONTROL_DATA_OUT_READ_END","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `controlDataOutReadEnd` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:850:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m850\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    static ref controlDataOutReadEnd: Mutex<Option<Receiver<NetworkRawStat>>> = Mutex::new (None);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CONTROL_DATA_OUT_READ_END`\u001b[0m\n\n"}
{"message":"function `InitNetworkStatCapture` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24497,"byte_end":24519,"line_start":854,"line_end":854,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"pub fn InitNetworkStatCapture () -> Result<(), NetworkStatError>","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24497,"byte_end":24519,"line_start":854,"line_end":854,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"pub fn InitNetworkStatCapture () -> Result<(), NetworkStatError>","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":"init_network_stat_capture","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `InitNetworkStatCapture` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:854:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m854\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn InitNetworkStatCapture () -> Result<(), NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `init_network_stat_capture`\u001b[0m\n\n"}
{"message":"variable `_controlDataInWriteEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24563,"byte_end":24585,"line_start":856,"line_end":856,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"\tlet (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24563,"byte_end":24585,"line_start":856,"line_end":856,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"\tlet (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":"_control_data_in_write_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_controlDataInWriteEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:856:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_control_data_in_write_end`\u001b[0m\n\n"}
{"message":"variable `controlDataInReadEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24587,"byte_end":24607,"line_start":856,"line_end":856,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"\tlet (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24587,"byte_end":24607,"line_start":856,"line_end":856,"column_start":31,"column_end":51,"is_primary":true,"text":[{"text":"\tlet (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();","highlight_start":31,"highlight_end":51}],"label":null,"suggested_replacement":"control_data_in_read_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `controlDataInReadEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:856:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (_controlDataInWriteEnd, controlDataInReadEnd) = mpsc::channel ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_data_in_read_end`\u001b[0m\n\n"}
{"message":"variable `controlDataOutWriteEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24635,"byte_end":24657,"line_start":857,"line_end":857,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"\tlet (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24635,"byte_end":24657,"line_start":857,"line_end":857,"column_start":7,"column_end":29,"is_primary":true,"text":[{"text":"\tlet (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();","highlight_start":7,"highlight_end":29}],"label":null,"suggested_replacement":"control_data_out_write_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `controlDataOutWriteEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:857:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `control_data_out_write_end`\u001b[0m\n\n"}
{"message":"variable `_controlDataOutReadEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24659,"byte_end":24681,"line_start":857,"line_end":857,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"\tlet (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24659,"byte_end":24681,"line_start":857,"line_end":857,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"\tlet (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":"_control_data_out_read_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_controlDataOutReadEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:857:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (controlDataOutWriteEnd, _controlDataOutReadEnd) = mpsc::channel ();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_control_data_out_read_end`\u001b[0m\n\n"}
{"message":"function `GetNetworkRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":24942,"byte_end":24959,"line_start":868,"line_end":868,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"pub fn GetNetworkRawStat () -> Result<NetworkRawStat, NetworkStatError>","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":24942,"byte_end":24959,"line_start":868,"line_end":868,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"pub fn GetNetworkRawStat () -> Result<NetworkRawStat, NetworkStatError>","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":"get_network_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GetNetworkRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:868:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m868\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn GetNetworkRawStat () -> Result<NetworkRawStat, NetworkStatError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_network_raw_stat`\u001b[0m\n\n"}
{"message":"variable `vlanTag` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":26340,"byte_end":26347,"line_start":915,"line_end":915,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_VLAN_TAG(vlanTag) => String::from (format! (\"Unknown vlan tag: {}\", vlanTag)),","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":26340,"byte_end":26347,"line_start":915,"line_end":915,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_VLAN_TAG(vlanTag) => String::from (format! (\"Unknown vlan tag: {}\", vlanTag)),","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":"vlan_tag","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `vlanTag` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:915:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m915\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::UNKNOWN_VLAN_TAG(vlanTag) => String::from (format! (\"Unknown vlan tag: {}\", vlanTag)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `vlan_tag`\u001b[0m\n\n"}
{"message":"variable `headerType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":26987,"byte_end":26997,"line_start":921,"line_end":921,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"\t\t\tSelf::IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(headerType) => String::from (format! (\"Ipv6 unknown optional header error: {}\", headerType)),","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":26987,"byte_end":26997,"line_start":921,"line_end":921,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"\t\t\tSelf::IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(headerType) => String::from (format! (\"Ipv6 unknown optional header error: {}\", headerType)),","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"header_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `headerType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:921:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m921\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::IPV6_UNKNOWN_OPTIONAL_HEADER_TYPE(headerType) => String::from (format! (\"Ipv6 unknown optional header error: {}\", h\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `header_type`\u001b[0m\n\n"}
{"message":"variable `configError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"NetworkStat.rs","byte_start":27441,"byte_end":27452,"line_start":926,"line_end":926,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::CONFIG_ERROR(configError) => String::from (format! (\"Config error: {}\", configError)),","highlight_start":23,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"NetworkStat.rs","byte_start":27441,"byte_end":27452,"line_start":926,"line_end":926,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::CONFIG_ERROR(configError) => String::from (format! (\"Config error: {}\", configError)),","highlight_start":23,"highlight_end":34}],"label":null,"suggested_replacement":"config_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `configError` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mNetworkStat.rs:926:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m926\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::CONFIG_ERROR(configError) => String::from (format! (\"Config error: {}\", configError)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `config_error`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":582,"byte_end":585,"line_start":17,"line_end":17,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(pid: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":582,"byte_end":585,"line_start":17,"line_end":17,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(pid: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:17:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(pid: usize) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `Usize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":663,"byte_end":668,"line_start":20,"line_end":20,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn Usize(&self) -> usize {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":663,"byte_end":668,"line_start":20,"line_end":20,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn Usize(&self) -> usize {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"usize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Usize` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:20:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Usize(&self) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `usize`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":1423,"byte_end":1426,"line_start":55,"line_end":55,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(tid: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":1423,"byte_end":1426,"line_start":55,"line_end":55,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(tid: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:55:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(tid: usize) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"structure field `packetSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2016,"byte_end":2026,"line_start":85,"line_end":85,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2016,"byte_end":2026,"line_start":85,"line_end":85,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetSent` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:85:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetSent: Count,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_sent`\u001b[0m\n\n"}
{"message":"structure field `packetRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2039,"byte_end":2049,"line_start":86,"line_end":86,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2039,"byte_end":2049,"line_start":86,"line_end":86,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetRecv` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:86:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetRecv: Count,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_recv`\u001b[0m\n\n"}
{"message":"structure field `totalDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2095,"byte_end":2108,"line_start":89,"line_end":89,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2095,"byte_end":2108,"line_start":89,"line_end":89,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataSent` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:89:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataSent: DataCount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_sent`\u001b[0m\n\n"}
{"message":"structure field `totalDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2125,"byte_end":2138,"line_start":90,"line_end":90,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2125,"byte_end":2138,"line_start":90,"line_end":90,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataRecv` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:90:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataRecv: DataCount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_recv`\u001b[0m\n\n"}
{"message":"structure field `realDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2190,"byte_end":2202,"line_start":93,"line_end":93,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2190,"byte_end":2202,"line_start":93,"line_end":93,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataSent` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:93:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataSent: DataCount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_sent`\u001b[0m\n\n"}
{"message":"structure field `realDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2219,"byte_end":2231,"line_start":94,"line_end":94,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2219,"byte_end":2231,"line_start":94,"line_end":94,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataRecv` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:94:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataRecv: DataCount,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_recv`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2280,"byte_end":2283,"line_start":98,"line_end":98,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(connection: Connection) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2280,"byte_end":2283,"line_start":98,"line_end":98,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(connection: Connection) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:98:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(connection: Connection) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `Connection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2668,"byte_end":2678,"line_start":113,"line_end":113,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Connection(&self) -> Connection {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2668,"byte_end":2678,"line_start":113,"line_end":113,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Connection(&self) -> Connection {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Connection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:113:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Connection(&self) -> Connection {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `connection`\u001b[0m\n\n"}
{"message":"method `PacketSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2744,"byte_end":2754,"line_start":117,"line_end":117,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn PacketSent(&self) -> Count {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2744,"byte_end":2754,"line_start":117,"line_end":117,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn PacketSent(&self) -> Count {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"packet_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `PacketSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:117:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PacketSent(&self) -> Count {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_sent`\u001b[0m\n\n"}
{"message":"method `PacketRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2815,"byte_end":2825,"line_start":121,"line_end":121,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn PacketRecv(&self) -> Count {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2815,"byte_end":2825,"line_start":121,"line_end":121,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn PacketRecv(&self) -> Count {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"packet_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `PacketRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:121:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PacketRecv(&self) -> Count {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_recv`\u001b[0m\n\n"}
{"message":"method `TotalDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2886,"byte_end":2899,"line_start":125,"line_end":125,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn TotalDataSent(&self) -> DataCount {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2886,"byte_end":2899,"line_start":125,"line_end":125,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn TotalDataSent(&self) -> DataCount {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"total_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:125:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalDataSent(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_sent`\u001b[0m\n\n"}
{"message":"method `TotalDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":2967,"byte_end":2980,"line_start":129,"line_end":129,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn TotalDataRecv(&self) -> DataCount {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":2967,"byte_end":2980,"line_start":129,"line_end":129,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn TotalDataRecv(&self) -> DataCount {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"total_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:129:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalDataRecv(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_recv`\u001b[0m\n\n"}
{"message":"method `RealDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":3048,"byte_end":3060,"line_start":133,"line_end":133,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealDataSent(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":3048,"byte_end":3060,"line_start":133,"line_end":133,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealDataSent(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"real_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:133:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealDataSent(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_sent`\u001b[0m\n\n"}
{"message":"method `RealDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":3127,"byte_end":3139,"line_start":137,"line_end":137,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealDataRecv(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":3127,"byte_end":3139,"line_start":137,"line_end":137,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealDataRecv(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"real_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:137:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealDataRecv(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_recv`\u001b[0m\n\n"}
{"message":"structure field `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4469,"byte_end":4482,"line_start":186,"line_end":186,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    interfaceName: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4469,"byte_end":4482,"line_start":186,"line_end":186,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    interfaceName: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:186:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    interfaceName: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"structure field `packetSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4517,"byte_end":4527,"line_start":189,"line_end":189,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4517,"byte_end":4527,"line_start":189,"line_end":189,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:189:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetSent: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_sent`\u001b[0m\n\n"}
{"message":"structure field `packetRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4540,"byte_end":4550,"line_start":190,"line_end":190,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4540,"byte_end":4550,"line_start":190,"line_end":190,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:190:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetRecv: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_recv`\u001b[0m\n\n"}
{"message":"structure field `totalDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4596,"byte_end":4609,"line_start":193,"line_end":193,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4596,"byte_end":4609,"line_start":193,"line_end":193,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:193:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataSent: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_sent`\u001b[0m\n\n"}
{"message":"structure field `totalDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4626,"byte_end":4639,"line_start":194,"line_end":194,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4626,"byte_end":4639,"line_start":194,"line_end":194,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:194:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataRecv: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_recv`\u001b[0m\n\n"}
{"message":"structure field `realDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4691,"byte_end":4703,"line_start":197,"line_end":197,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4691,"byte_end":4703,"line_start":197,"line_end":197,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:197:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataSent: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_sent`\u001b[0m\n\n"}
{"message":"structure field `realDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4720,"byte_end":4732,"line_start":198,"line_end":198,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4720,"byte_end":4732,"line_start":198,"line_end":198,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:198:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataRecv: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_recv`\u001b[0m\n\n"}
{"message":"structure field `connectionStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4866,"byte_end":4881,"line_start":202,"line_end":202,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    connectionStats: HashMap<Connection, ConnectionStat>,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4866,"byte_end":4881,"line_start":202,"line_end":202,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    connectionStats: HashMap<Connection, ConnectionStat>,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"connection_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `connectionStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:202:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    connectionStats: HashMap<Connection, ConnectionStat>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stats`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4955,"byte_end":4958,"line_start":206,"line_end":206,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(interfaceName: &str) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4955,"byte_end":4958,"line_start":206,"line_end":206,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(interfaceName: &str) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:206:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(interfaceName: &str) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":4959,"byte_end":4972,"line_start":206,"line_end":206,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(interfaceName: &str) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":4959,"byte_end":4972,"line_start":206,"line_end":206,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn New(interfaceName: &str) -> Self {","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:206:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(interfaceName: &str) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"method `Name` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":5418,"byte_end":5422,"line_start":223,"line_end":223,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Name(&self) -> String {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":5418,"byte_end":5422,"line_start":223,"line_end":223,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn Name(&self) -> String {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Name` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:223:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Name(&self) -> String {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `name`\u001b[0m\n\n"}
{"message":"method `AddConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":5495,"byte_end":5512,"line_start":227,"line_end":227,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":5495,"byte_end":5512,"line_start":227,"line_end":227,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"add_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AddConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:227:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_connection_stat`\u001b[0m\n\n"}
{"message":"variable `connectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":5524,"byte_end":5538,"line_start":227,"line_end":227,"column_start":41,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {","highlight_start":41,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":5524,"byte_end":5538,"line_start":227,"line_end":227,"column_start":41,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {","highlight_start":41,"highlight_end":55}],"label":null,"suggested_replacement":"connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:227:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddConnectionStat(&mut self, connectionStat: ConnectionStat) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stat`\u001b[0m\n\n"}
{"message":"variable `otherConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":6833,"byte_end":6848,"line_start":265,"line_end":265,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":6833,"byte_end":6848,"line_start":265,"line_end":265,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":"other_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:265:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherConnection, otherConnectionStat) in other.connectionStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_connection`\u001b[0m\n\n"}
{"message":"variable `otherConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":6850,"byte_end":6869,"line_start":265,"line_end":265,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":6850,"byte_end":6869,"line_start":265,"line_end":265,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":"other_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:265:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherConnection, otherConnectionStat) in other.connectionStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_connection_stat`\u001b[0m\n\n"}
{"message":"variable `connectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":6922,"byte_end":6936,"line_start":266,"line_end":266,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"            if let Some(connectionStat) = result.connectionStats.get_mut(&otherConnection) {","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":6922,"byte_end":6936,"line_start":266,"line_end":266,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"            if let Some(connectionStat) = result.connectionStats.get_mut(&otherConnection) {","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":"connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:266:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(connectionStat) = result.connectionStats.get_mut(&otherConnection) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stat`\u001b[0m\n\n"}
{"message":"variable `otherConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":7803,"byte_end":7818,"line_start":296,"line_end":296,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":7803,"byte_end":7818,"line_start":296,"line_end":296,"column_start":14,"column_end":29,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":14,"highlight_end":29}],"label":null,"suggested_replacement":"other_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:296:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherConnection, otherConnectionStat) in other.connectionStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_connection`\u001b[0m\n\n"}
{"message":"variable `otherConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":7820,"byte_end":7839,"line_start":296,"line_end":296,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":7820,"byte_end":7839,"line_start":296,"line_end":296,"column_start":31,"column_end":50,"is_primary":true,"text":[{"text":"        for (otherConnection, otherConnectionStat) in other.connectionStats {","highlight_start":31,"highlight_end":50}],"label":null,"suggested_replacement":"other_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:296:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherConnection, otherConnectionStat) in other.connectionStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_connection_stat`\u001b[0m\n\n"}
{"message":"variable `connectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":7892,"byte_end":7906,"line_start":297,"line_end":297,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"            if let Some(connectionStat) = self.connectionStats.get_mut(&otherConnection) {","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":7892,"byte_end":7906,"line_start":297,"line_end":297,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"            if let Some(connectionStat) = self.connectionStats.get_mut(&otherConnection) {","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":"connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:297:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(connectionStat) = self.connectionStats.get_mut(&otherConnection) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stat`\u001b[0m\n\n"}
{"message":"function `InterfaceStatConnectionStatsSerialize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8176,"byte_end":8213,"line_start":307,"line_end":307,"column_start":4,"column_end":41,"is_primary":true,"text":[{"text":"fn InterfaceStatConnectionStatsSerialize<S: Serializer>(","highlight_start":4,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8176,"byte_end":8213,"line_start":307,"line_end":307,"column_start":4,"column_end":41,"is_primary":true,"text":[{"text":"fn InterfaceStatConnectionStatsSerialize<S: Serializer>(","highlight_start":4,"highlight_end":41}],"label":null,"suggested_replacement":"interface_stat_connection_stats_serialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `InterfaceStatConnectionStatsSerialize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:307:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn InterfaceStatConnectionStatsSerialize<S: Serializer>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_stat_connection_stats_serialize`\u001b[0m\n\n"}
{"message":"structure field `packetSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8459,"byte_end":8469,"line_start":317,"line_end":317,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8459,"byte_end":8469,"line_start":317,"line_end":317,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetSent: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:317:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetSent: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_sent`\u001b[0m\n\n"}
{"message":"structure field `packetRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8482,"byte_end":8492,"line_start":318,"line_end":318,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8482,"byte_end":8492,"line_start":318,"line_end":318,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    packetRecv: Count,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"packet_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `packetRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:318:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    packetRecv: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `packet_recv`\u001b[0m\n\n"}
{"message":"structure field `totalDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8538,"byte_end":8551,"line_start":321,"line_end":321,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8538,"byte_end":8551,"line_start":321,"line_end":321,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataSent: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:321:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataSent: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_sent`\u001b[0m\n\n"}
{"message":"structure field `totalDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8568,"byte_end":8581,"line_start":322,"line_end":322,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8568,"byte_end":8581,"line_start":322,"line_end":322,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    totalDataRecv: DataCount,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"total_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:322:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalDataRecv: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_data_recv`\u001b[0m\n\n"}
{"message":"structure field `realDataSent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8633,"byte_end":8645,"line_start":325,"line_end":325,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8633,"byte_end":8645,"line_start":325,"line_end":325,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataSent: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_sent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataSent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:325:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataSent: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_sent`\u001b[0m\n\n"}
{"message":"structure field `realDataRecv` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8662,"byte_end":8674,"line_start":326,"line_end":326,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8662,"byte_end":8674,"line_start":326,"line_end":326,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realDataRecv: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_data_recv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realDataRecv` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:326:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realDataRecv: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_data_recv`\u001b[0m\n\n"}
{"message":"structure field `interfaceStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8807,"byte_end":8821,"line_start":330,"line_end":330,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    interfaceStats: HashMap<String, InterfaceStat>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8807,"byte_end":8821,"line_start":330,"line_end":330,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    interfaceStats: HashMap<String, InterfaceStat>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"interface_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `interfaceStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:330:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    interfaceStats: HashMap<String, InterfaceStat>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_stats`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":8888,"byte_end":8891,"line_start":334,"line_end":334,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":8888,"byte_end":8891,"line_start":334,"line_end":334,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:334:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `AddConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":9274,"byte_end":9291,"line_start":349,"line_end":349,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":9274,"byte_end":9291,"line_start":349,"line_end":349,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"add_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AddConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:349:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_connection_stat`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":9303,"byte_end":9316,"line_start":349,"line_end":349,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":41,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":9303,"byte_end":9316,"line_start":349,"line_end":349,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":41,"highlight_end":54}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:349:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `connectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":9324,"byte_end":9338,"line_start":349,"line_end":349,"column_start":62,"column_end":76,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":62,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":9324,"byte_end":9338,"line_start":349,"line_end":349,"column_start":62,"column_end":76,"is_primary":true,"text":[{"text":"    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {","highlight_start":62,"highlight_end":76}],"label":null,"suggested_replacement":"connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:349:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddConnectionStat(&mut self, interfaceName: &str, connectionStat: ConnectionStat) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stat`\u001b[0m\n\n"}
{"message":"variable `otherInterfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":10802,"byte_end":10820,"line_start":391,"line_end":391,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":10802,"byte_end":10820,"line_start":391,"line_end":391,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":"other_interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherInterfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:391:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_interface_name`\u001b[0m\n\n"}
{"message":"variable `otherInterfaceStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":10822,"byte_end":10840,"line_start":391,"line_end":391,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":34,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":10822,"byte_end":10840,"line_start":391,"line_end":391,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":34,"highlight_end":52}],"label":null,"suggested_replacement":"other_interface_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherInterfaceStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:391:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_interface_stat`\u001b[0m\n\n"}
{"message":"variable `interfaceStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":10892,"byte_end":10905,"line_start":392,"line_end":392,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"            if let Some(interfaceStat) = result.interfaceStats.get_mut(&otherInterfaceName) {","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":10892,"byte_end":10905,"line_start":392,"line_end":392,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"            if let Some(interfaceStat) = result.interfaceStats.get_mut(&otherInterfaceName) {","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":"interface_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:392:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(interfaceStat) = result.interfaceStats.get_mut(&otherInterfaceName) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_stat`\u001b[0m\n\n"}
{"message":"variable `otherInterfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":11635,"byte_end":11653,"line_start":417,"line_end":417,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":11635,"byte_end":11653,"line_start":417,"line_end":417,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":"other_interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherInterfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:417:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_interface_name`\u001b[0m\n\n"}
{"message":"variable `otherInterfaceStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":11655,"byte_end":11673,"line_start":417,"line_end":417,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":34,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":11655,"byte_end":11673,"line_start":417,"line_end":417,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {","highlight_start":34,"highlight_end":52}],"label":null,"suggested_replacement":"other_interface_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `otherInterfaceStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:417:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (otherInterfaceName, otherInterfaceStat) in other.interfaceStats {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `other_interface_stat`\u001b[0m\n\n"}
{"message":"variable `interfaceStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":11725,"byte_end":11738,"line_start":418,"line_end":418,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"            if let Some(interfaceStat) = self.interfaceStats.get_mut(&otherInterfaceName) {","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":11725,"byte_end":11738,"line_start":418,"line_end":418,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"            if let Some(interfaceStat) = self.interfaceStats.get_mut(&otherInterfaceName) {","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":"interface_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:418:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(interfaceStat) = self.interfaceStats.get_mut(&otherInterfaceName) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_stat`\u001b[0m\n\n"}
{"message":"function `NetworkStatInterfaceStatsSerialize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12009,"byte_end":12043,"line_start":428,"line_end":428,"column_start":4,"column_end":38,"is_primary":true,"text":[{"text":"fn NetworkStatInterfaceStatsSerialize<S: Serializer>(","highlight_start":4,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12009,"byte_end":12043,"line_start":428,"line_end":428,"column_start":4,"column_end":38,"is_primary":true,"text":[{"text":"fn NetworkStatInterfaceStatsSerialize<S: Serializer>(","highlight_start":4,"highlight_end":38}],"label":null,"suggested_replacement":"network_stat_interface_stats_serialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `NetworkStatInterfaceStatsSerialize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:428:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn NetworkStatInterfaceStatsSerialize<S: Serializer>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_stat_interface_stats_serialize`\u001b[0m\n\n"}
{"message":"structure field `totalSystemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12296,"byte_end":12314,"line_start":439,"line_end":439,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    totalSystemCpuTime: TimeCount,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12296,"byte_end":12314,"line_start":439,"line_end":439,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    totalSystemCpuTime: TimeCount,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"total_system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalSystemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:439:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalSystemCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalUserCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12331,"byte_end":12347,"line_start":440,"line_end":440,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalUserCpuTime: TimeCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12331,"byte_end":12347,"line_start":440,"line_end":440,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalUserCpuTime: TimeCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"total_user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalUserCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:440:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalUserCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12364,"byte_end":12376,"line_start":441,"line_end":441,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalCpuTime: TimeCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12364,"byte_end":12376,"line_start":441,"line_end":441,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalCpuTime: TimeCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"total_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:441:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12394,"byte_end":12405,"line_start":443,"line_end":443,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    totalIORead: DataCount,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12394,"byte_end":12405,"line_start":443,"line_end":443,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    totalIORead: DataCount,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"total_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:443:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalIORead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_ioread`\u001b[0m\n\n"}
{"message":"structure field `totalIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12422,"byte_end":12434,"line_start":444,"line_end":444,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalIOWrite: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12422,"byte_end":12434,"line_start":444,"line_end":444,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalIOWrite: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"total_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:444:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_iowrite`\u001b[0m\n\n"}
{"message":"structure field `totalBlockIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12452,"byte_end":12468,"line_start":446,"line_end":446,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalBlockIORead: DataCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12452,"byte_end":12468,"line_start":446,"line_end":446,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalBlockIORead: DataCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"total_block_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalBlockIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:446:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalBlockIORead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_ioread`\u001b[0m\n\n"}
{"message":"structure field `totalBlockIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12485,"byte_end":12502,"line_start":447,"line_end":447,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    totalBlockIOWrite: DataCount,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12485,"byte_end":12502,"line_start":447,"line_end":447,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    totalBlockIOWrite: DataCount,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"total_block_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalBlockIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:447:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalBlockIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_iowrite`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":12547,"byte_end":12550,"line_start":451,"line_end":451,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":12547,"byte_end":12550,"line_start":451,"line_end":451,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:451:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `TotalSystemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13043,"byte_end":13061,"line_start":467,"line_end":467,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn TotalSystemCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13043,"byte_end":13061,"line_start":467,"line_end":467,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn TotalSystemCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":"total_system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalSystemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:467:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m467\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalSystemCpuTime(&self) -> TimeCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_system_cpu_time`\u001b[0m\n\n"}
{"message":"method `TotalUserCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13133,"byte_end":13149,"line_start":470,"line_end":470,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn TotalUserCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13133,"byte_end":13149,"line_start":470,"line_end":470,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn TotalUserCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"total_user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalUserCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:470:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalUserCpuTime(&self) -> TimeCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_user_cpu_time`\u001b[0m\n\n"}
{"message":"method `TotalCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13219,"byte_end":13231,"line_start":473,"line_end":473,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn TotalCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13219,"byte_end":13231,"line_start":473,"line_end":473,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn TotalCpuTime(&self) -> TimeCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"total_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:473:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m473\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalCpuTime(&self) -> TimeCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_cpu_time`\u001b[0m\n\n"}
{"message":"method `TotalIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13298,"byte_end":13309,"line_start":477,"line_end":477,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn TotalIORead(&self) -> DataCount {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13298,"byte_end":13309,"line_start":477,"line_end":477,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn TotalIORead(&self) -> DataCount {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":"total_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:477:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m477\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalIORead(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_ioread`\u001b[0m\n\n"}
{"message":"method `TotalIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13374,"byte_end":13386,"line_start":480,"line_end":480,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn TotalIOWrite(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13374,"byte_end":13386,"line_start":480,"line_end":480,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn TotalIOWrite(&self) -> DataCount {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"total_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:480:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m480\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalIOWrite(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_iowrite`\u001b[0m\n\n"}
{"message":"method `TotalBlockIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13453,"byte_end":13469,"line_start":484,"line_end":484,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn TotalBlockIORead(&self) -> DataCount {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13453,"byte_end":13469,"line_start":484,"line_end":484,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn TotalBlockIORead(&self) -> DataCount {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"total_block_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalBlockIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:484:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m484\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalBlockIORead(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_ioread`\u001b[0m\n\n"}
{"message":"method `TotalBlockIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13539,"byte_end":13556,"line_start":487,"line_end":487,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn TotalBlockIOWrite(&self) -> DataCount {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13539,"byte_end":13556,"line_start":487,"line_end":487,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn TotalBlockIOWrite(&self) -> DataCount {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"total_block_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `TotalBlockIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:487:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn TotalBlockIOWrite(&self) -> DataCount {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_iowrite`\u001b[0m\n\n"}
{"message":"structure field `totalSystemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13710,"byte_end":13728,"line_start":496,"line_end":496,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    totalSystemCpuTime: TimeCount,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13710,"byte_end":13728,"line_start":496,"line_end":496,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    totalSystemCpuTime: TimeCount,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"total_system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalSystemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:496:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalSystemCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalUserCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13745,"byte_end":13761,"line_start":497,"line_end":497,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalUserCpuTime: TimeCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13745,"byte_end":13761,"line_start":497,"line_end":497,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalUserCpuTime: TimeCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"total_user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalUserCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:497:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m497\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalUserCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13778,"byte_end":13790,"line_start":498,"line_end":498,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalCpuTime: TimeCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13778,"byte_end":13790,"line_start":498,"line_end":498,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalCpuTime: TimeCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"total_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:498:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `totalRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13808,"byte_end":13816,"line_start":500,"line_end":500,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    totalRss: DataCount,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13808,"byte_end":13816,"line_start":500,"line_end":500,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    totalRss: DataCount,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"total_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:500:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalRss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_rss`\u001b[0m\n\n"}
{"message":"structure field `totalVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13833,"byte_end":13841,"line_start":501,"line_end":501,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    totalVss: DataCount,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13833,"byte_end":13841,"line_start":501,"line_end":501,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    totalVss: DataCount,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"total_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:501:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalVss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_vss`\u001b[0m\n\n"}
{"message":"structure field `totalSwap` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13858,"byte_end":13867,"line_start":502,"line_end":502,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    totalSwap: DataCount,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13858,"byte_end":13867,"line_start":502,"line_end":502,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    totalSwap: DataCount,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"total_swap","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalSwap` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:502:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalSwap: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_swap`\u001b[0m\n\n"}
{"message":"structure field `totalIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13885,"byte_end":13896,"line_start":504,"line_end":504,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    totalIORead: DataCount,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13885,"byte_end":13896,"line_start":504,"line_end":504,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    totalIORead: DataCount,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"total_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:504:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalIORead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_ioread`\u001b[0m\n\n"}
{"message":"structure field `totalIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13913,"byte_end":13925,"line_start":505,"line_end":505,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalIOWrite: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13913,"byte_end":13925,"line_start":505,"line_end":505,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    totalIOWrite: DataCount,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"total_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:505:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m505\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_iowrite`\u001b[0m\n\n"}
{"message":"structure field `totalBlockIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13943,"byte_end":13959,"line_start":507,"line_end":507,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalBlockIORead: DataCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13943,"byte_end":13959,"line_start":507,"line_end":507,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    totalBlockIORead: DataCount,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"total_block_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalBlockIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:507:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalBlockIORead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_ioread`\u001b[0m\n\n"}
{"message":"structure field `totalBlockIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":13976,"byte_end":13993,"line_start":508,"line_end":508,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    totalBlockIOWrite: DataCount,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":13976,"byte_end":13993,"line_start":508,"line_end":508,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    totalBlockIOWrite: DataCount,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"total_block_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `totalBlockIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:508:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m508\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    totalBlockIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `total_block_iowrite`\u001b[0m\n\n"}
{"message":"structure field `networkStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":14011,"byte_end":14022,"line_start":510,"line_end":510,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    networkStat: NetworkStat,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":14011,"byte_end":14022,"line_start":510,"line_end":510,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    networkStat: NetworkStat,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"network_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `networkStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:510:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    networkStat: NetworkStat,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_stat`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":14070,"byte_end":14073,"line_start":514,"line_end":514,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":14070,"byte_end":14073,"line_start":514,"line_end":514,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:514:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m514\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"structure field `realTid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":17828,"byte_end":17835,"line_start":630,"line_end":630,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realTid: Tid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":17828,"byte_end":17835,"line_start":630,"line_end":630,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realTid: Tid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"real_tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realTid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:630:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realTid: Tid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_tid`\u001b[0m\n\n"}
{"message":"structure field `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":17846,"byte_end":17853,"line_start":631,"line_end":631,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realPid: Pid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":17846,"byte_end":17853,"line_start":631,"line_end":631,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realPid: Pid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:631:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m631\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":17935,"byte_end":17938,"line_start":638,"line_end":638,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":17935,"byte_end":17938,"line_start":638,"line_end":638,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:638:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `realTid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":17959,"byte_end":17966,"line_start":638,"line_end":638,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":17959,"byte_end":17966,"line_start":638,"line_end":638,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":"real_tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realTid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:638:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_tid`\u001b[0m\n\n"}
{"message":"variable `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":17973,"byte_end":17980,"line_start":638,"line_end":638,"column_start":50,"column_end":57,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":50,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":17973,"byte_end":17980,"line_start":638,"line_end":638,"column_start":50,"column_end":57,"is_primary":true,"text":[{"text":"    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {","highlight_start":50,"highlight_end":57}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:638:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(tid: Tid, pid: Pid, realTid: Tid, realPid: Pid) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"method `Tid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18155,"byte_end":18158,"line_start":650,"line_end":650,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Tid(&self) -> Tid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18155,"byte_end":18158,"line_start":650,"line_end":650,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Tid(&self) -> Tid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Tid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:650:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Tid(&self) -> Tid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tid`\u001b[0m\n\n"}
{"message":"method `Pid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18209,"byte_end":18212,"line_start":653,"line_end":653,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18209,"byte_end":18212,"line_start":653,"line_end":653,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Pid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:653:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m653\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Pid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pid`\u001b[0m\n\n"}
{"message":"method `RealTid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18264,"byte_end":18271,"line_start":657,"line_end":657,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealTid(&self) -> Tid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18264,"byte_end":18271,"line_start":657,"line_end":657,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealTid(&self) -> Tid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"real_tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealTid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:657:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m657\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealTid(&self) -> Tid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_tid`\u001b[0m\n\n"}
{"message":"method `RealPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18326,"byte_end":18333,"line_start":660,"line_end":660,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18326,"byte_end":18333,"line_start":660,"line_end":660,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:660:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"method `GetStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18445,"byte_end":18452,"line_start":665,"line_end":665,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn GetStat(","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18445,"byte_end":18452,"line_start":665,"line_end":665,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn GetStat(","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"get_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:665:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m665\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetStat(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_stat`\u001b[0m\n\n"}
{"message":"variable `taskStatsConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18481,"byte_end":18500,"line_start":667,"line_end":667,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        taskStatsConnection: &mut TaskStatsConnection,","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18481,"byte_end":18500,"line_start":667,"line_end":667,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        taskStatsConnection: &mut TaskStatsConnection,","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"task_stats_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:667:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m667\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        taskStatsConnection: &mut TaskStatsConnection,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_connection`\u001b[0m\n\n"}
{"message":"variable `threadTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":18584,"byte_end":18599,"line_start":669,"line_end":669,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"        let threadTaskStats = taskStatsConnection.GetThreadTaskStats(self.realTid)?;","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":18584,"byte_end":18599,"line_start":669,"line_end":669,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"        let threadTaskStats = taskStatsConnection.GetThreadTaskStats(self.realTid)?;","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"thread_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:669:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m669\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let threadTaskStats = taskStatsConnection.GetThreadTaskStats(self.realTid)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_task_stats`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19272,"byte_end":19281,"line_start":689,"line_end":689,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    parentPid: Pid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19272,"byte_end":19281,"line_start":689,"line_end":689,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    parentPid: Pid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:689:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parentPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `effectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19307,"byte_end":19319,"line_start":692,"line_end":692,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    effectiveUid: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19307,"byte_end":19319,"line_start":692,"line_end":692,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    effectiveUid: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `effectiveUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:692:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    effectiveUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_uid`\u001b[0m\n\n"}
{"message":"structure field `savedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19330,"byte_end":19338,"line_start":693,"line_end":693,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    savedUid: Uid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19330,"byte_end":19338,"line_start":693,"line_end":693,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    savedUid: Uid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `savedUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:693:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    savedUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_uid`\u001b[0m\n\n"}
{"message":"structure field `fsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19349,"byte_end":19354,"line_start":694,"line_end":694,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    fsUid: Uid,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19349,"byte_end":19354,"line_start":694,"line_end":694,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    fsUid: Uid,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `fsUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:694:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m694\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fsUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_uid`\u001b[0m\n\n"}
{"message":"structure field `effectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19380,"byte_end":19392,"line_start":697,"line_end":697,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    effectiveGid: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19380,"byte_end":19392,"line_start":697,"line_end":697,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    effectiveGid: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `effectiveGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:697:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    effectiveGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_gid`\u001b[0m\n\n"}
{"message":"structure field `savedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19403,"byte_end":19411,"line_start":698,"line_end":698,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    savedGid: Gid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19403,"byte_end":19411,"line_start":698,"line_end":698,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    savedGid: Gid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `savedGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:698:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    savedGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_gid`\u001b[0m\n\n"}
{"message":"structure field `fsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19422,"byte_end":19427,"line_start":699,"line_end":699,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    fsGid: Gid,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19422,"byte_end":19427,"line_start":699,"line_end":699,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    fsGid: Gid,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `fsGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:699:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m699\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fsGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_gid`\u001b[0m\n\n"}
{"message":"structure field `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19468,"byte_end":19475,"line_start":702,"line_end":702,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realPid: Pid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19468,"byte_end":19475,"line_start":702,"line_end":702,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realPid: Pid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:702:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"structure field `realParentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19486,"byte_end":19499,"line_start":703,"line_end":703,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    realParentPid: Pid,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19486,"byte_end":19499,"line_start":703,"line_end":703,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    realParentPid: Pid,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"real_parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realParentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:703:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m703\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realParentPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_parent_pid`\u001b[0m\n\n"}
{"message":"structure field `realUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19511,"byte_end":19518,"line_start":705,"line_end":705,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realUid: Uid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19511,"byte_end":19518,"line_start":705,"line_end":705,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realUid: Uid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:705:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m705\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"structure field `realEffectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19529,"byte_end":19545,"line_start":706,"line_end":706,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    realEffectiveUid: Uid,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19529,"byte_end":19545,"line_start":706,"line_end":706,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    realEffectiveUid: Uid,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"real_effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realEffectiveUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:706:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realEffectiveUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_uid`\u001b[0m\n\n"}
{"message":"structure field `realSavedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19556,"byte_end":19568,"line_start":707,"line_end":707,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realSavedUid: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19556,"byte_end":19568,"line_start":707,"line_end":707,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realSavedUid: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realSavedUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:707:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m707\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realSavedUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_uid`\u001b[0m\n\n"}
{"message":"structure field `realFsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19579,"byte_end":19588,"line_start":708,"line_end":708,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    realFsUid: Uid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19579,"byte_end":19588,"line_start":708,"line_end":708,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    realFsUid: Uid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"real_fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realFsUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:708:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realFsUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_uid`\u001b[0m\n\n"}
{"message":"structure field `realGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19600,"byte_end":19607,"line_start":710,"line_end":710,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realGid: Gid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19600,"byte_end":19607,"line_start":710,"line_end":710,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    realGid: Gid,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:710:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m710\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"structure field `realEffectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19618,"byte_end":19634,"line_start":711,"line_end":711,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    realEffectiveGid: Gid,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19618,"byte_end":19634,"line_start":711,"line_end":711,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    realEffectiveGid: Gid,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"real_effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realEffectiveGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:711:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m711\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realEffectiveGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_gid`\u001b[0m\n\n"}
{"message":"structure field `realSavedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19645,"byte_end":19657,"line_start":712,"line_end":712,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realSavedGid: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19645,"byte_end":19657,"line_start":712,"line_end":712,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realSavedGid: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realSavedGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:712:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m712\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realSavedGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_gid`\u001b[0m\n\n"}
{"message":"structure field `realFsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19668,"byte_end":19677,"line_start":713,"line_end":713,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    realFsGid: Gid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19668,"byte_end":19677,"line_start":713,"line_end":713,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    realFsGid: Gid,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"real_fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realFsGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:713:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m713\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realFsGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_gid`\u001b[0m\n\n"}
{"message":"structure field `executionPath` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19689,"byte_end":19702,"line_start":715,"line_end":715,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    executionPath: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19689,"byte_end":19702,"line_start":715,"line_end":715,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    executionPath: String,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"execution_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `executionPath` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:715:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m715\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    executionPath: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `execution_path`\u001b[0m\n\n"}
{"message":"structure field `accumulatedChildsStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19876,"byte_end":19897,"line_start":722,"line_end":722,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    accumulatedChildsStat: ProcessStat,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19876,"byte_end":19897,"line_start":722,"line_end":722,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    accumulatedChildsStat: ProcessStat,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"accumulated_childs_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedChildsStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:722:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m722\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedChildsStat: ProcessStat,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_childs_stat`\u001b[0m\n\n"}
{"message":"structure field `accumulatedStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":19955,"byte_end":19970,"line_start":725,"line_end":725,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    accumulatedStat: ProcessStat,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":19955,"byte_end":19970,"line_start":725,"line_end":725,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    accumulatedStat: ProcessStat,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"accumulated_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:725:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m725\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedStat: ProcessStat,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_stat`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20128,"byte_end":20131,"line_start":735,"line_end":735,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20128,"byte_end":20131,"line_start":735,"line_end":735,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:735:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m735\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20159,"byte_end":20168,"line_start":737,"line_end":737,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        parentPid: Pid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20159,"byte_end":20168,"line_start":737,"line_end":737,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        parentPid: Pid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:737:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m737\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parentPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"variable `effectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20201,"byte_end":20213,"line_start":739,"line_end":739,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        effectiveUid: Uid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20201,"byte_end":20213,"line_start":739,"line_end":739,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        effectiveUid: Uid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `effectiveUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:739:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m739\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        effectiveUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_uid`\u001b[0m\n\n"}
{"message":"variable `savedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20228,"byte_end":20236,"line_start":740,"line_end":740,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        savedUid: Uid,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20228,"byte_end":20236,"line_start":740,"line_end":740,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        savedUid: Uid,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `savedUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:740:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m740\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        savedUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_uid`\u001b[0m\n\n"}
{"message":"variable `fsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20251,"byte_end":20256,"line_start":741,"line_end":741,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        fsUid: Uid,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20251,"byte_end":20256,"line_start":741,"line_end":741,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        fsUid: Uid,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fsUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:741:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m741\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fsUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_uid`\u001b[0m\n\n"}
{"message":"variable `effectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20289,"byte_end":20301,"line_start":743,"line_end":743,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        effectiveGid: Gid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20289,"byte_end":20301,"line_start":743,"line_end":743,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        effectiveGid: Gid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `effectiveGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:743:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m743\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        effectiveGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_gid`\u001b[0m\n\n"}
{"message":"variable `savedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20316,"byte_end":20324,"line_start":744,"line_end":744,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        savedGid: Gid,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20316,"byte_end":20324,"line_start":744,"line_end":744,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        savedGid: Gid,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `savedGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:744:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m744\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        savedGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_gid`\u001b[0m\n\n"}
{"message":"variable `fsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20339,"byte_end":20344,"line_start":745,"line_end":745,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        fsGid: Gid,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20339,"byte_end":20344,"line_start":745,"line_end":745,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        fsGid: Gid,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fsGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:745:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m745\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        fsGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_gid`\u001b[0m\n\n"}
{"message":"variable `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20359,"byte_end":20366,"line_start":746,"line_end":746,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realPid: Pid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20359,"byte_end":20366,"line_start":746,"line_end":746,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realPid: Pid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:746:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m746\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"variable `realParentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20381,"byte_end":20394,"line_start":747,"line_end":747,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        realParentPid: Pid,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20381,"byte_end":20394,"line_start":747,"line_end":747,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        realParentPid: Pid,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"real_parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realParentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:747:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m747\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realParentPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_parent_pid`\u001b[0m\n\n"}
{"message":"variable `realUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20409,"byte_end":20416,"line_start":748,"line_end":748,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realUid: Uid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20409,"byte_end":20416,"line_start":748,"line_end":748,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realUid: Uid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:748:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m748\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"variable `realEffectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20431,"byte_end":20447,"line_start":749,"line_end":749,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        realEffectiveUid: Uid,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20431,"byte_end":20447,"line_start":749,"line_end":749,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        realEffectiveUid: Uid,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"real_effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realEffectiveUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:749:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m749\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realEffectiveUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_uid`\u001b[0m\n\n"}
{"message":"variable `realSavedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20462,"byte_end":20474,"line_start":750,"line_end":750,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        realSavedUid: Uid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20462,"byte_end":20474,"line_start":750,"line_end":750,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        realSavedUid: Uid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"real_saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realSavedUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:750:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m750\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realSavedUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_uid`\u001b[0m\n\n"}
{"message":"variable `realFsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20489,"byte_end":20498,"line_start":751,"line_end":751,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        realFsUid: Uid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20489,"byte_end":20498,"line_start":751,"line_end":751,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        realFsUid: Uid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"real_fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realFsUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:751:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m751\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realFsUid: Uid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_uid`\u001b[0m\n\n"}
{"message":"variable `realGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20513,"byte_end":20520,"line_start":752,"line_end":752,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realGid: Gid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20513,"byte_end":20520,"line_start":752,"line_end":752,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        realGid: Gid,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:752:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m752\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"variable `realEffectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20535,"byte_end":20551,"line_start":753,"line_end":753,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        realEffectiveGid: Gid,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20535,"byte_end":20551,"line_start":753,"line_end":753,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        realEffectiveGid: Gid,","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"real_effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realEffectiveGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:753:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m753\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realEffectiveGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_gid`\u001b[0m\n\n"}
{"message":"variable `realSavedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20566,"byte_end":20578,"line_start":754,"line_end":754,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        realSavedGid: Gid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20566,"byte_end":20578,"line_start":754,"line_end":754,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        realSavedGid: Gid,","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"real_saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realSavedGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:754:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m754\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realSavedGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_gid`\u001b[0m\n\n"}
{"message":"variable `realFsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20593,"byte_end":20602,"line_start":755,"line_end":755,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        realFsGid: Gid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20593,"byte_end":20602,"line_start":755,"line_end":755,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        realFsGid: Gid,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"real_fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realFsGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:755:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m755\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        realFsGid: Gid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_gid`\u001b[0m\n\n"}
{"message":"variable `executionPath` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":20617,"byte_end":20630,"line_start":756,"line_end":756,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        executionPath: String,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":20617,"byte_end":20630,"line_start":756,"line_end":756,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        executionPath: String,","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"execution_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `executionPath` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:756:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        executionPath: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `execution_path`\u001b[0m\n\n"}
{"message":"method `Pid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21442,"byte_end":21445,"line_start":797,"line_end":797,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21442,"byte_end":21445,"line_start":797,"line_end":797,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn Pid(&self) -> Pid {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Pid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:797:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Pid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pid`\u001b[0m\n\n"}
{"message":"method `ParentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21496,"byte_end":21505,"line_start":800,"line_end":800,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn ParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21496,"byte_end":21505,"line_start":800,"line_end":800,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn ParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ParentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:800:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m800\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ParentPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"method `RealPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21563,"byte_end":21570,"line_start":804,"line_end":804,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21563,"byte_end":21570,"line_start":804,"line_end":804,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealPid(&self) -> Pid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:804:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m804\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"method `RealParentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21625,"byte_end":21638,"line_start":807,"line_end":807,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn RealParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21625,"byte_end":21638,"line_start":807,"line_end":807,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn RealParentPid(&self) -> Pid {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"real_parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealParentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:807:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealParentPid(&self) -> Pid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_parent_pid`\u001b[0m\n\n"}
{"message":"method `RealUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21700,"byte_end":21707,"line_start":811,"line_end":811,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealUid(&self) -> Uid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21700,"byte_end":21707,"line_start":811,"line_end":811,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealUid(&self) -> Uid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:811:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"method `RealEffectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21762,"byte_end":21778,"line_start":814,"line_end":814,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveUid(&self) -> Uid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21762,"byte_end":21778,"line_start":814,"line_end":814,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveUid(&self) -> Uid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"real_effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealEffectiveUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:814:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealEffectiveUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_uid`\u001b[0m\n\n"}
{"message":"method `RealSavedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21842,"byte_end":21854,"line_start":817,"line_end":817,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedUid(&self) -> Uid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21842,"byte_end":21854,"line_start":817,"line_end":817,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedUid(&self) -> Uid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"real_saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealSavedUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:817:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m817\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealSavedUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_uid`\u001b[0m\n\n"}
{"message":"method `RealFsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21914,"byte_end":21923,"line_start":820,"line_end":820,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsUid(&self) -> Uid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21914,"byte_end":21923,"line_start":820,"line_end":820,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsUid(&self) -> Uid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"real_fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealFsUid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:820:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealFsUid(&self) -> Uid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_uid`\u001b[0m\n\n"}
{"message":"method `RealGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":21981,"byte_end":21988,"line_start":824,"line_end":824,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealGid(&self) -> Gid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":21981,"byte_end":21988,"line_start":824,"line_end":824,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn RealGid(&self) -> Gid {","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:824:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m824\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"method `RealEffectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22043,"byte_end":22059,"line_start":827,"line_end":827,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveGid(&self) -> Gid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22043,"byte_end":22059,"line_start":827,"line_end":827,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn RealEffectiveGid(&self) -> Gid {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"real_effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealEffectiveGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:827:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealEffectiveGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_gid`\u001b[0m\n\n"}
{"message":"method `RealSavedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22123,"byte_end":22135,"line_start":830,"line_end":830,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedGid(&self) -> Gid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22123,"byte_end":22135,"line_start":830,"line_end":830,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn RealSavedGid(&self) -> Gid {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"real_saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealSavedGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:830:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m830\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealSavedGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_gid`\u001b[0m\n\n"}
{"message":"method `RealFsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22195,"byte_end":22204,"line_start":833,"line_end":833,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsGid(&self) -> Gid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22195,"byte_end":22204,"line_start":833,"line_end":833,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn RealFsGid(&self) -> Gid {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"real_fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `RealFsGid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:833:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m833\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn RealFsGid(&self) -> Gid {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_gid`\u001b[0m\n\n"}
{"message":"method `BuildProcessTree` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22321,"byte_end":22337,"line_start":838,"line_end":838,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn BuildProcessTree(","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22321,"byte_end":22337,"line_start":838,"line_end":838,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn BuildProcessTree(","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"build_process_tree","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `BuildProcessTree` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:838:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m838\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn BuildProcessTree(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `build_process_tree`\u001b[0m\n\n"}
{"message":"variable `taskStatsConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22366,"byte_end":22385,"line_start":840,"line_end":840,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        taskStatsConnection: &mut TaskStatsConnection,","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22366,"byte_end":22385,"line_start":840,"line_end":840,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        taskStatsConnection: &mut TaskStatsConnection,","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"task_stats_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:840:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        taskStatsConnection: &mut TaskStatsConnection,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_connection`\u001b[0m\n\n"}
{"message":"variable `networkRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22421,"byte_end":22435,"line_start":841,"line_end":841,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        networkRawStat: &mut NetworkRawStat,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22421,"byte_end":22435,"line_start":841,"line_end":841,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        networkRawStat: &mut NetworkRawStat,","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"network_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `networkRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:841:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m841\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        networkRawStat: &mut NetworkRawStat,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `network_raw_stat`\u001b[0m\n\n"}
{"message":"variable `globalConfig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22544,"byte_end":22556,"line_start":844,"line_end":844,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22544,"byte_end":22556,"line_start":844,"line_end":844,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"global_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `globalConfig` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:844:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m844\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let globalConfig = config::GetGlobalConfig().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `global_config`\u001b[0m\n\n"}
{"message":"variable `memData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22636,"byte_end":22643,"line_start":847,"line_end":847,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let memData = fs::read_to_string(format!(\"/proc/{}/status\", self.realPid))?;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22636,"byte_end":22643,"line_start":847,"line_end":847,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let memData = fs::read_to_string(format!(\"/proc/{}/status\", self.realPid))?;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"mem_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `memData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:847:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let memData = fs::read_to_string(format!(\"/proc/{}/status\", self.realPid))?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mem_data`\u001b[0m\n\n"}
{"message":"variable `memData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":22721,"byte_end":22728,"line_start":848,"line_end":848,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let memData: Vec<&str> = memData.lines().collect();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":22721,"byte_end":22728,"line_start":848,"line_end":848,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let memData: Vec<&str> = memData.lines().collect();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"mem_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `memData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:848:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m848\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let memData: Vec<&str> = memData.lines().collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mem_data`\u001b[0m\n\n"}
{"message":"variable `fdDir` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":23749,"byte_end":23754,"line_start":873,"line_end":873,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fdDir = match fs::read_dir(format!(\"/proc/{}/fd\", self.realPid)) {","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":23749,"byte_end":23754,"line_start":873,"line_end":873,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let fdDir = match fs::read_dir(format!(\"/proc/{}/fd\", self.realPid)) {","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"fd_dir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fdDir` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:873:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let fdDir = match fs::read_dir(format!(\"/proc/{}/fd\", self.realPid)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fd_dir`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":24525,"byte_end":24538,"line_start":894,"line_end":894,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"                if let Some(interfaceName) = networkRawStat.LookupInterfaceName(&connection) {","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":24525,"byte_end":24538,"line_start":894,"line_end":894,"column_start":29,"column_end":42,"is_primary":true,"text":[{"text":"                if let Some(interfaceName) = networkRawStat.LookupInterfaceName(&connection) {","highlight_start":29,"highlight_end":42}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:894:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m894\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Some(interfaceName) = networkRawStat.LookupInterfaceName(&connection) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `interfaceName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":24616,"byte_end":24629,"line_start":895,"line_end":895,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"                    let interfaceName = interfaceName.to_string();","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":24616,"byte_end":24629,"line_start":895,"line_end":895,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"                    let interfaceName = interfaceName.to_string();","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":"interface_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:895:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m895\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let interfaceName = interfaceName.to_string();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_name`\u001b[0m\n\n"}
{"message":"variable `uniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":24684,"byte_end":24697,"line_start":897,"line_end":897,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"                    let uniConnection = UniConnection::New(","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":24684,"byte_end":24697,"line_start":897,"line_end":897,"column_start":25,"column_end":38,"is_primary":true,"text":[{"text":"                    let uniConnection = UniConnection::New(","highlight_start":25,"highlight_end":38}],"label":null,"suggested_replacement":"uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:897:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let uniConnection = UniConnection::New(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection`\u001b[0m\n\n"}
{"message":"variable `reverseUniConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":25015,"byte_end":25035,"line_start":905,"line_end":905,"column_start":25,"column_end":45,"is_primary":true,"text":[{"text":"                    let reverseUniConnection = UniConnection::New(","highlight_start":25,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":25015,"byte_end":25035,"line_start":905,"line_end":905,"column_start":25,"column_end":45,"is_primary":true,"text":[{"text":"                    let reverseUniConnection = UniConnection::New(","highlight_start":25,"highlight_end":45}],"label":null,"suggested_replacement":"reverse_uni_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `reverseUniConnection` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:905:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m905\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let reverseUniConnection = UniConnection::New(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reverse_uni_connection`\u001b[0m\n\n"}
{"message":"variable `interfaceRawStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":25408,"byte_end":25424,"line_start":914,"line_end":914,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"                    if let Some(interfaceRawStat) =","highlight_start":33,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":25408,"byte_end":25424,"line_start":914,"line_end":914,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"                    if let Some(interfaceRawStat) =","highlight_start":33,"highlight_end":49}],"label":null,"suggested_replacement":"interface_raw_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `interfaceRawStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:914:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m914\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(interfaceRawStat) =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `interface_raw_stat`\u001b[0m\n\n"}
{"message":"variable `uniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":25630,"byte_end":25647,"line_start":918,"line_end":918,"column_start":29,"column_end":46,"is_primary":true,"text":[{"text":"                        let uniConnectionStat = interfaceRawStat","highlight_start":29,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":25630,"byte_end":25647,"line_start":918,"line_end":918,"column_start":29,"column_end":46,"is_primary":true,"text":[{"text":"                        let uniConnectionStat = interfaceRawStat","highlight_start":29,"highlight_end":46}],"label":null,"suggested_replacement":"uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:918:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m918\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let uniConnectionStat = interfaceRawStat\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uni_connection_stat`\u001b[0m\n\n"}
{"message":"variable `reverseUniConnectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":25879,"byte_end":25903,"line_start":923,"line_end":923,"column_start":29,"column_end":53,"is_primary":true,"text":[{"text":"                        let reverseUniConnectionStat = interfaceRawStat","highlight_start":29,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":25879,"byte_end":25903,"line_start":923,"line_end":923,"column_start":29,"column_end":53,"is_primary":true,"text":[{"text":"                        let reverseUniConnectionStat = interfaceRawStat","highlight_start":29,"highlight_end":53}],"label":null,"suggested_replacement":"reverse_uni_connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `reverseUniConnectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:923:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m923\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let reverseUniConnectionStat = interfaceRawStat\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `reverse_uni_connection_stat`\u001b[0m\n\n"}
{"message":"variable `connectionStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":26205,"byte_end":26219,"line_start":929,"line_end":929,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"                        let mut connectionStat = ConnectionStat::New(connection.clone());","highlight_start":33,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":26205,"byte_end":26219,"line_start":929,"line_end":929,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"                        let mut connectionStat = ConnectionStat::New(connection.clone());","highlight_start":33,"highlight_end":47}],"label":null,"suggested_replacement":"connection_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `connectionStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:929:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m929\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let mut connectionStat = ConnectionStat::New(connection.clone());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `connection_stat`\u001b[0m\n\n"}
{"message":"variable `taskDir` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27150,"byte_end":27157,"line_start":950,"line_end":950,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let taskDir = match fs::read_dir(format!(\"/proc/{}/task\", self.realPid)) {","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27150,"byte_end":27157,"line_start":950,"line_end":950,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        let taskDir = match fs::read_dir(format!(\"/proc/{}/task\", self.realPid)) {","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"task_dir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskDir` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:950:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m950\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let taskDir = match fs::read_dir(format!(\"/proc/{}/task\", self.realPid)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_dir`\u001b[0m\n\n"}
{"message":"variable `threadDir` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27338,"byte_end":27347,"line_start":955,"line_end":955,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        for threadDir in taskDir {","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27338,"byte_end":27347,"line_start":955,"line_end":955,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        for threadDir in taskDir {","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"thread_dir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadDir` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:955:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m955\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for threadDir in taskDir {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_dir`\u001b[0m\n\n"}
{"message":"variable `threadDir` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27377,"byte_end":27386,"line_start":956,"line_end":956,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let threadDir = threadDir.unwrap();","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27377,"byte_end":27386,"line_start":956,"line_end":956,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let threadDir = threadDir.unwrap();","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"thread_dir","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadDir` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:956:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let threadDir = threadDir.unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_dir`\u001b[0m\n\n"}
{"message":"variable `realTid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27493,"byte_end":27500,"line_start":959,"line_end":959,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"                if let Ok(realTid) = Tid::try_from(threadDir.file_name().to_str().unwrap()) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27493,"byte_end":27500,"line_start":959,"line_end":959,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"                if let Ok(realTid) = Tid::try_from(threadDir.file_name().to_str().unwrap()) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":"real_tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realTid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:959:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m959\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if let Ok(realTid) = Tid::try_from(threadDir.file_name().to_str().unwrap()) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_tid`\u001b[0m\n\n"}
{"message":"variable `threadStatusFileContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27616,"byte_end":27639,"line_start":961,"line_end":961,"column_start":25,"column_end":48,"is_primary":true,"text":[{"text":"                    let threadStatusFileContent = match fs::read_to_string(format!(","highlight_start":25,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27616,"byte_end":27639,"line_start":961,"line_end":961,"column_start":25,"column_end":48,"is_primary":true,"text":[{"text":"                    let threadStatusFileContent = match fs::read_to_string(format!(","highlight_start":25,"highlight_end":48}],"label":null,"suggested_replacement":"thread_status_file_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadStatusFileContent` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:961:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m961\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let threadStatusFileContent = match fs::read_to_string(format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_status_file_content`\u001b[0m\n\n"}
{"message":"variable `threadLines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":27937,"byte_end":27948,"line_start":969,"line_end":969,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                    let threadLines: Vec<&str> = threadStatusFileContent.lines().collect();","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":27937,"byte_end":27948,"line_start":969,"line_end":969,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"                    let threadLines: Vec<&str> = threadStatusFileContent.lines().collect();","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"thread_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadLines` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:969:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let threadLines: Vec<&str> = threadStatusFileContent.lines().collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_lines`\u001b[0m\n\n"}
{"message":"variable `newThread` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":28379,"byte_end":28388,"line_start":979,"line_end":979,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"                    let mut newThread = Thread::New(tid, self.pid, realTid, self.realPid);","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":28379,"byte_end":28388,"line_start":979,"line_end":979,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"                    let mut newThread = Thread::New(tid, self.pid, realTid, self.realPid);","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":"new_thread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newThread` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:979:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m979\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut newThread = Thread::New(tid, self.pid, realTid, self.realPid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_thread`\u001b[0m\n\n"}
{"message":"variable `threadStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":28473,"byte_end":28483,"line_start":981,"line_end":981,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"                    if let Ok(threadStat) = newThread.GetStat(taskStatsConnection) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":28473,"byte_end":28483,"line_start":981,"line_end":981,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"                    if let Ok(threadStat) = newThread.GetStat(taskStatsConnection) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":"thread_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `threadStat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:981:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m981\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Ok(threadStat) = newThread.GetStat(taskStatsConnection) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thread_stat`\u001b[0m\n\n"}
{"message":"variable `childrenList` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":28888,"byte_end":28900,"line_start":995,"line_end":995,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let childrenList = match fs::read_to_string(format!(","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":28888,"byte_end":28900,"line_start":995,"line_end":995,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let childrenList = match fs::read_to_string(format!(","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"children_list","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `childrenList` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:995:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m995\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let childrenList = match fs::read_to_string(format!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `children_list`\u001b[0m\n\n"}
{"message":"variable `childRealPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":29147,"byte_end":29159,"line_start":1003,"line_end":1003,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        for childRealPid in childrenList.split_terminator(\" \") {","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":29147,"byte_end":29159,"line_start":1003,"line_end":1003,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        for childRealPid in childrenList.split_terminator(\" \") {","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"child_real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `childRealPid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1003:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1003\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for childRealPid in childrenList.split_terminator(\" \") {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `child_real_pid`\u001b[0m\n\n"}
{"message":"variable `childProcess` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":29220,"byte_end":29232,"line_start":1004,"line_end":1004,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"            let mut childProcess = match GetRealProcess(&Pid::try_from(childRealPid).unwrap()) {","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":29220,"byte_end":29232,"line_start":1004,"line_end":1004,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"            let mut childProcess = match GetRealProcess(&Pid::try_from(childRealPid).unwrap()) {","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":"child_process","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `childProcess` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1004:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1004\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut childProcess = match GetRealProcess(&Pid::try_from(childRealPid).unwrap()) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `child_process`\u001b[0m\n\n"}
{"message":"variable `childStat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":29487,"byte_end":29496,"line_start":1010,"line_end":1010,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let childStat = match childProcess.BuildProcessTree(taskStatsConnection, networkRawStat)","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":29487,"byte_end":29496,"line_start":1010,"line_end":1010,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let childStat = match childProcess.BuildProcessTree(taskStatsConnection, networkRawStat)","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"child_stat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `childStat` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1010:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1010\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let childStat = match childProcess.BuildProcessTree(taskStatsConnection, networkRawStat)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `child_stat`\u001b[0m\n\n"}
{"message":"structure field `uidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30061,"byte_end":30069,"line_start":1030,"line_end":1030,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    uidStart: Uid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30061,"byte_end":30069,"line_start":1030,"line_end":1030,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    uidStart: Uid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"uid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1030:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uidStart: Uid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_start`\u001b[0m\n\n"}
{"message":"structure field `uidEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30080,"byte_end":30086,"line_start":1031,"line_end":1031,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    uidEnd: Uid,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30080,"byte_end":30086,"line_start":1031,"line_end":1031,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    uidEnd: Uid,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"uid_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uidEnd` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1031:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1031\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uidEnd: Uid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_end`\u001b[0m\n\n"}
{"message":"structure field `realUidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30097,"byte_end":30109,"line_start":1032,"line_end":1032,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realUidStart: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30097,"byte_end":30109,"line_start":1032,"line_end":1032,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realUidStart: Uid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_uid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realUidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1032:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realUidStart: Uid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid_start`\u001b[0m\n\n"}
{"message":"structure field `realUidEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30120,"byte_end":30130,"line_start":1033,"line_end":1033,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    realUidEnd: Uid,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30120,"byte_end":30130,"line_start":1033,"line_end":1033,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    realUidEnd: Uid,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"real_uid_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realUidEnd` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1033:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realUidEnd: Uid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid_end`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30189,"byte_end":30192,"line_start":1038,"line_end":1038,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30189,"byte_end":30192,"line_start":1038,"line_end":1038,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1038:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `uidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30193,"byte_end":30201,"line_start":1038,"line_end":1038,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":16,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30193,"byte_end":30201,"line_start":1038,"line_end":1038,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":16,"highlight_end":24}],"label":null,"suggested_replacement":"uid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1038:16\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_start`\u001b[0m\n\n"}
{"message":"variable `realUidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30208,"byte_end":30220,"line_start":1038,"line_end":1038,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30208,"byte_end":30220,"line_start":1038,"line_end":1038,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":"real_uid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1038:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(uidStart: Uid, realUidStart: Uid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid_start`\u001b[0m\n\n"}
{"message":"method `MapToUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30489,"byte_end":30497,"line_start":1048,"line_end":1048,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30489,"byte_end":30497,"line_start":1048,"line_end":1048,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"map_to_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MapToUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1048:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1048\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `map_to_uid`\u001b[0m\n\n"}
{"message":"variable `realUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":30505,"byte_end":30512,"line_start":1048,"line_end":1048,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":30505,"byte_end":30512,"line_start":1048,"line_end":1048,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1048:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1048\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"variable `realStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31228,"byte_end":31237,"line_start":1074,"line_end":1074,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let realStart = Uid::New(values[1]);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31228,"byte_end":31237,"line_start":1074,"line_end":1074,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let realStart = Uid::New(values[1]);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"real_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1074:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1074\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let realStart = Uid::New(values[1]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_start`\u001b[0m\n\n"}
{"message":"structure field `uidMapEntries` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31508,"byte_end":31521,"line_start":1088,"line_end":1088,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    uidMapEntries: Vec<UidMapEntry>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31508,"byte_end":31521,"line_start":1088,"line_end":1088,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    uidMapEntries: Vec<UidMapEntry>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"uid_map_entries","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `uidMapEntries` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1088:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1088\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    uidMapEntries: Vec<UidMapEntry>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_map_entries`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31569,"byte_end":31572,"line_start":1092,"line_end":1092,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31569,"byte_end":31572,"line_start":1092,"line_end":1092,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1092:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1092\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `MapToUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31667,"byte_end":31675,"line_start":1098,"line_end":1098,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31667,"byte_end":31675,"line_start":1098,"line_end":1098,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"map_to_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MapToUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1098:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `map_to_uid`\u001b[0m\n\n"}
{"message":"variable `realUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31683,"byte_end":31690,"line_start":1098,"line_end":1098,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31683,"byte_end":31690,"line_start":1098,"line_end":1098,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1098:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToUid(&self, realUid: Uid) -> Option<Uid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"variable `uidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":31726,"byte_end":31737,"line_start":1099,"line_end":1099,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        for uidMapEntry in &self.uidMapEntries {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":31726,"byte_end":31737,"line_start":1099,"line_end":1099,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        for uidMapEntry in &self.uidMapEntries {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"uid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1099:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1099\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for uidMapEntry in &self.uidMapEntries {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_map_entry`\u001b[0m\n\n"}
{"message":"variable `newUidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32122,"byte_end":32136,"line_start":1116,"line_end":1116,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"            let newUidMapEntry = UidMapEntry::try_from(line)?;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":32122,"byte_end":32136,"line_start":1116,"line_end":1116,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"            let newUidMapEntry = UidMapEntry::try_from(line)?;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":"new_uid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newUidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1116:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let newUidMapEntry = UidMapEntry::try_from(line)?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_uid_map_entry`\u001b[0m\n\n"}
{"message":"variable `uidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32223,"byte_end":32234,"line_start":1119,"line_end":1119,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            for uidMapEntry in &result.uidMapEntries {","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":32223,"byte_end":32234,"line_start":1119,"line_end":1119,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            for uidMapEntry in &result.uidMapEntries {","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"uid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1119:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for uidMapEntry in &result.uidMapEntries {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_map_entry`\u001b[0m\n\n"}
{"message":"structure field `gidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32952,"byte_end":32960,"line_start":1144,"line_end":1144,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    gidStart: Gid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":32952,"byte_end":32960,"line_start":1144,"line_end":1144,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    gidStart: Gid,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"gid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `gidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1144:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gidStart: Gid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_start`\u001b[0m\n\n"}
{"message":"structure field `gidEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32971,"byte_end":32977,"line_start":1145,"line_end":1145,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    gidEnd: Gid,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":32971,"byte_end":32977,"line_start":1145,"line_end":1145,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    gidEnd: Gid,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"gid_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `gidEnd` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1145:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gidEnd: Gid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_end`\u001b[0m\n\n"}
{"message":"structure field `realGidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":32988,"byte_end":33000,"line_start":1146,"line_end":1146,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realGidStart: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":32988,"byte_end":33000,"line_start":1146,"line_end":1146,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    realGidStart: Gid,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"real_gid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realGidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1146:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realGidStart: Gid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid_start`\u001b[0m\n\n"}
{"message":"structure field `realGidEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33011,"byte_end":33021,"line_start":1147,"line_end":1147,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    realGidEnd: Gid,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33011,"byte_end":33021,"line_start":1147,"line_end":1147,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    realGidEnd: Gid,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"real_gid_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `realGidEnd` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1147:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    realGidEnd: Gid,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid_end`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33080,"byte_end":33083,"line_start":1152,"line_end":1152,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33080,"byte_end":33083,"line_start":1152,"line_end":1152,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1152:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `gidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33084,"byte_end":33092,"line_start":1152,"line_end":1152,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":16,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33084,"byte_end":33092,"line_start":1152,"line_end":1152,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":16,"highlight_end":24}],"label":null,"suggested_replacement":"gid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1152:16\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_start`\u001b[0m\n\n"}
{"message":"variable `realGidStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33099,"byte_end":33111,"line_start":1152,"line_end":1152,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33099,"byte_end":33111,"line_start":1152,"line_end":1152,"column_start":31,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {","highlight_start":31,"highlight_end":43}],"label":null,"suggested_replacement":"real_gid_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGidStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1152:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New(gidStart: Gid, realGidStart: Gid, length: usize) -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid_start`\u001b[0m\n\n"}
{"message":"method `MapToGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33380,"byte_end":33388,"line_start":1162,"line_end":1162,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33380,"byte_end":33388,"line_start":1162,"line_end":1162,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"map_to_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MapToGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1162:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `map_to_gid`\u001b[0m\n\n"}
{"message":"variable `realGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":33396,"byte_end":33403,"line_start":1162,"line_end":1162,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":33396,"byte_end":33403,"line_start":1162,"line_end":1162,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1162:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"variable `realStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34119,"byte_end":34128,"line_start":1188,"line_end":1188,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let realStart = Gid::New(values[1]);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34119,"byte_end":34128,"line_start":1188,"line_end":1188,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let realStart = Gid::New(values[1]);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"real_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realStart` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1188:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let realStart = Gid::New(values[1]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_start`\u001b[0m\n\n"}
{"message":"structure field `gidMapEntries` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34399,"byte_end":34412,"line_start":1202,"line_end":1202,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    gidMapEntries: Vec<GidMapEntry>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34399,"byte_end":34412,"line_start":1202,"line_end":1202,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    gidMapEntries: Vec<GidMapEntry>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"gid_map_entries","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `gidMapEntries` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1202:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gidMapEntries: Vec<GidMapEntry>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_map_entries`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34460,"byte_end":34463,"line_start":1206,"line_end":1206,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34460,"byte_end":34463,"line_start":1206,"line_end":1206,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn New() -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1206:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New() -> Self {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `MapToGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34558,"byte_end":34566,"line_start":1212,"line_end":1212,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34558,"byte_end":34566,"line_start":1212,"line_end":1212,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"map_to_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `MapToGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1212:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `map_to_gid`\u001b[0m\n\n"}
{"message":"variable `realGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34574,"byte_end":34581,"line_start":1212,"line_end":1212,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34574,"byte_end":34581,"line_start":1212,"line_end":1212,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1212:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn MapToGid(&self, realGid: Gid) -> Option<Gid> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"variable `gidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":34617,"byte_end":34628,"line_start":1213,"line_end":1213,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        for gidMapEntry in &self.gidMapEntries {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":34617,"byte_end":34628,"line_start":1213,"line_end":1213,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        for gidMapEntry in &self.gidMapEntries {","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"gid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1213:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for gidMapEntry in &self.gidMapEntries {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_map_entry`\u001b[0m\n\n"}
{"message":"variable `newGidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":35013,"byte_end":35027,"line_start":1230,"line_end":1230,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"            let newGidMapEntry = GidMapEntry::try_from(line)?;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":35013,"byte_end":35027,"line_start":1230,"line_end":1230,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"            let newGidMapEntry = GidMapEntry::try_from(line)?;","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":"new_gid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `newGidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1230:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let newGidMapEntry = GidMapEntry::try_from(line)?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_gid_map_entry`\u001b[0m\n\n"}
{"message":"variable `gidMapEntry` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":35114,"byte_end":35125,"line_start":1233,"line_end":1233,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            for gidMapEntry in &result.gidMapEntries {","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":35114,"byte_end":35125,"line_start":1233,"line_end":1233,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            for gidMapEntry in &result.gidMapEntries {","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":"gid_map_entry","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gidMapEntry` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1233:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            for gidMapEntry in &result.gidMapEntries {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_map_entry`\u001b[0m\n\n"}
{"message":"function `GetRealProcess` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":35869,"byte_end":35883,"line_start":1257,"line_end":1257,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"pub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":35869,"byte_end":35883,"line_start":1257,"line_end":1257,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"pub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"get_real_process","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GetRealProcess` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1257:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_real_process`\u001b[0m\n\n"}
{"message":"variable `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":35884,"byte_end":35891,"line_start":1257,"line_end":1257,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"pub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":35884,"byte_end":35891,"line_start":1257,"line_end":1257,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"pub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1257:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn GetRealProcess(realPid: &Pid) -> Result<Process, ProcessError> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"variable `statusFileContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":35942,"byte_end":35959,"line_start":1258,"line_end":1258,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let statusFileContent = fs::read_to_string(format!(\"/proc/{}/status\", realPid))?;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":35942,"byte_end":35959,"line_start":1258,"line_end":1258,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let statusFileContent = fs::read_to_string(format!(\"/proc/{}/status\", realPid))?;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"status_file_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `statusFileContent` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1258:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let statusFileContent = fs::read_to_string(format!(\"/proc/{}/status\", realPid))?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `status_file_content`\u001b[0m\n\n"}
{"message":"variable `globalConfig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36118,"byte_end":36130,"line_start":1262,"line_end":1262,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36118,"byte_end":36130,"line_start":1262,"line_end":1262,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let globalConfig = config::GetGlobalConfig().unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"global_config","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `globalConfig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1262:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let globalConfig = config::GetGlobalConfig().unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `global_config`\u001b[0m\n\n"}
{"message":"variable `realParentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36430,"byte_end":36443,"line_start":1273,"line_end":1273,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let realParentPid = if *realPid == Pid::New(1) {","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36430,"byte_end":36443,"line_start":1273,"line_end":1273,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let realParentPid = if *realPid == Pid::New(1) {","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"real_parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realParentPid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1273:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realParentPid = if *realPid == Pid::New(1) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_parent_pid`\u001b[0m\n\n"}
{"message":"variable `parentStatusFileContent` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36772,"byte_end":36795,"line_start":1285,"line_end":1285,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"        let parentStatusFileContent =","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36772,"byte_end":36795,"line_start":1285,"line_end":1285,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"        let parentStatusFileContent =","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"parent_status_file_content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `parentStatusFileContent` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1285:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parentStatusFileContent =\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_status_file_content`\u001b[0m\n\n"}
{"message":"variable `parentLines` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36887,"byte_end":36898,"line_start":1288,"line_end":1288,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let parentLines: Vec<&str> = parentStatusFileContent.lines().collect();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36887,"byte_end":36898,"line_start":1288,"line_end":1288,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let parentLines: Vec<&str> = parentStatusFileContent.lines().collect();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"parent_lines","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `parentLines` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1288:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parentLines: Vec<&str> = parentStatusFileContent.lines().collect();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_lines`\u001b[0m\n\n"}
{"message":"variable `parentPids` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36967,"byte_end":36977,"line_start":1289,"line_end":1289,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let parentPids = parentLines[12].split_whitespace().collect::<Vec<&str>>();","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36967,"byte_end":36977,"line_start":1289,"line_end":1289,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let parentPids = parentLines[12].split_whitespace().collect::<Vec<&str>>();","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"parent_pids","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `parentPids` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1289:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parentPids = parentLines[12].split_whitespace().collect::<Vec<&str>>();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pids`\u001b[0m\n\n"}
{"message":"variable `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":36623,"byte_end":36632,"line_start":1280,"line_end":1280,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let parentPid = if globalConfig.IsOldKernel() {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":36623,"byte_end":36632,"line_start":1280,"line_end":1280,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let parentPid = if globalConfig.IsOldKernel() {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `parentPid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1280:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let parentPid = if globalConfig.IsOldKernel() {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"variable `realUids` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37230,"byte_end":37238,"line_start":1299,"line_end":1299,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let realUids = lines[8].split_whitespace().collect::<Vec<&str>>();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37230,"byte_end":37238,"line_start":1299,"line_end":1299,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let realUids = lines[8].split_whitespace().collect::<Vec<&str>>();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"real_uids","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUids` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1299:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realUids = lines[8].split_whitespace().collect::<Vec<&str>>();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uids`\u001b[0m\n\n"}
{"message":"variable `realGids` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37301,"byte_end":37309,"line_start":1300,"line_end":1300,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let realGids = lines[9].split_whitespace().collect::<Vec<&str>>();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37301,"byte_end":37309,"line_start":1300,"line_end":1300,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let realGids = lines[9].split_whitespace().collect::<Vec<&str>>();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"real_gids","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGids` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1300:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realGids = lines[9].split_whitespace().collect::<Vec<&str>>();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gids`\u001b[0m\n\n"}
{"message":"variable `realUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37373,"byte_end":37380,"line_start":1302,"line_end":1302,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let realUid = Uid::try_from(realUids[1]).unwrap();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37373,"byte_end":37380,"line_start":1302,"line_end":1302,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let realUid = Uid::try_from(realUids[1]).unwrap();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"real_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1302:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realUid = Uid::try_from(realUids[1]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_uid`\u001b[0m\n\n"}
{"message":"variable `realEffectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37428,"byte_end":37444,"line_start":1303,"line_end":1303,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let realEffectiveUid = Uid::try_from(realUids[2]).unwrap();","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37428,"byte_end":37444,"line_start":1303,"line_end":1303,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let realEffectiveUid = Uid::try_from(realUids[2]).unwrap();","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"real_effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realEffectiveUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1303:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realEffectiveUid = Uid::try_from(realUids[2]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_uid`\u001b[0m\n\n"}
{"message":"variable `realSavedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37492,"byte_end":37504,"line_start":1304,"line_end":1304,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let realSavedUid = Uid::try_from(realUids[3]).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37492,"byte_end":37504,"line_start":1304,"line_end":1304,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let realSavedUid = Uid::try_from(realUids[3]).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"real_saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realSavedUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1304:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realSavedUid = Uid::try_from(realUids[3]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_uid`\u001b[0m\n\n"}
{"message":"variable `realFsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37552,"byte_end":37561,"line_start":1305,"line_end":1305,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let realFsUid = Uid::try_from(realUids[4]).unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37552,"byte_end":37561,"line_start":1305,"line_end":1305,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let realFsUid = Uid::try_from(realUids[4]).unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"real_fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realFsUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1305:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realFsUid = Uid::try_from(realUids[4]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_uid`\u001b[0m\n\n"}
{"message":"variable `realGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37610,"byte_end":37617,"line_start":1307,"line_end":1307,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let realGid = Gid::try_from(realGids[1]).unwrap();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37610,"byte_end":37617,"line_start":1307,"line_end":1307,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let realGid = Gid::try_from(realGids[1]).unwrap();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"real_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1307:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realGid = Gid::try_from(realGids[1]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_gid`\u001b[0m\n\n"}
{"message":"variable `realEffectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37665,"byte_end":37681,"line_start":1308,"line_end":1308,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let realEffectiveGid = Gid::try_from(realGids[2]).unwrap();","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37665,"byte_end":37681,"line_start":1308,"line_end":1308,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let realEffectiveGid = Gid::try_from(realGids[2]).unwrap();","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"real_effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realEffectiveGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1308:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realEffectiveGid = Gid::try_from(realGids[2]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_effective_gid`\u001b[0m\n\n"}
{"message":"variable `realSavedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37729,"byte_end":37741,"line_start":1309,"line_end":1309,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let realSavedGid = Gid::try_from(realGids[3]).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37729,"byte_end":37741,"line_start":1309,"line_end":1309,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let realSavedGid = Gid::try_from(realGids[3]).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"real_saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realSavedGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1309:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realSavedGid = Gid::try_from(realGids[3]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_saved_gid`\u001b[0m\n\n"}
{"message":"variable `realFsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37789,"byte_end":37798,"line_start":1310,"line_end":1310,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let realFsGid = Gid::try_from(realGids[4]).unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37789,"byte_end":37798,"line_start":1310,"line_end":1310,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let realFsGid = Gid::try_from(realGids[4]).unwrap();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"real_fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realFsGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1310:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let realFsGid = Gid::try_from(realGids[4]).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_fs_gid`\u001b[0m\n\n"}
{"message":"variable `uidMap` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":37899,"byte_end":37905,"line_start":1313,"line_end":1313,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let uidMap =","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":37899,"byte_end":37905,"line_start":1313,"line_end":1313,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let uidMap =","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"uid_map","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `uidMap` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1313:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let uidMap =\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `uid_map`\u001b[0m\n\n"}
{"message":"variable `gidMap` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38011,"byte_end":38017,"line_start":1315,"line_end":1315,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let gidMap =","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38011,"byte_end":38017,"line_start":1315,"line_end":1315,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let gidMap =","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"gid_map","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gidMap` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1315:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let gidMap =\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gid_map`\u001b[0m\n\n"}
{"message":"variable `effectiveUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38204,"byte_end":38216,"line_start":1320,"line_end":1320,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let effectiveUid = uidMap.MapToUid(realEffectiveUid).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38204,"byte_end":38216,"line_start":1320,"line_end":1320,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let effectiveUid = uidMap.MapToUid(realEffectiveUid).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"effective_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `effectiveUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1320:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let effectiveUid = uidMap.MapToUid(realEffectiveUid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_uid`\u001b[0m\n\n"}
{"message":"variable `savedUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38271,"byte_end":38279,"line_start":1321,"line_end":1321,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let savedUid = uidMap.MapToUid(realSavedUid).unwrap();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38271,"byte_end":38279,"line_start":1321,"line_end":1321,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let savedUid = uidMap.MapToUid(realSavedUid).unwrap();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"saved_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `savedUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1321:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let savedUid = uidMap.MapToUid(realSavedUid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_uid`\u001b[0m\n\n"}
{"message":"variable `fsUid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38330,"byte_end":38335,"line_start":1322,"line_end":1322,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let fsUid = uidMap.MapToUid(realFsUid).unwrap();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38330,"byte_end":38335,"line_start":1322,"line_end":1322,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let fsUid = uidMap.MapToUid(realFsUid).unwrap();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"fs_uid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fsUid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1322:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let fsUid = uidMap.MapToUid(realFsUid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_uid`\u001b[0m\n\n"}
{"message":"variable `effectiveGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38433,"byte_end":38445,"line_start":1325,"line_end":1325,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let effectiveGid = gidMap.MapToGid(realEffectiveGid).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38433,"byte_end":38445,"line_start":1325,"line_end":1325,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let effectiveGid = gidMap.MapToGid(realEffectiveGid).unwrap();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"effective_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `effectiveGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1325:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let effectiveGid = gidMap.MapToGid(realEffectiveGid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `effective_gid`\u001b[0m\n\n"}
{"message":"variable `savedGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38500,"byte_end":38508,"line_start":1326,"line_end":1326,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let savedGid = gidMap.MapToGid(realSavedGid).unwrap();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38500,"byte_end":38508,"line_start":1326,"line_end":1326,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let savedGid = gidMap.MapToGid(realSavedGid).unwrap();","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"saved_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `savedGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1326:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let savedGid = gidMap.MapToGid(realSavedGid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `saved_gid`\u001b[0m\n\n"}
{"message":"variable `fsGid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38559,"byte_end":38564,"line_start":1327,"line_end":1327,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let fsGid = gidMap.MapToGid(realFsGid).unwrap();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38559,"byte_end":38564,"line_start":1327,"line_end":1327,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let fsGid = gidMap.MapToGid(realFsGid).unwrap();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"fs_gid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `fsGid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1327:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let fsGid = gidMap.MapToGid(realFsGid).unwrap();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `fs_gid`\u001b[0m\n\n"}
{"message":"variable `executionPath` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38639,"byte_end":38652,"line_start":1330,"line_end":1330,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let executionPath = fs::read_link(format!(\"/proc/{}/exe\", realPid))?;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38639,"byte_end":38652,"line_start":1330,"line_end":1330,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let executionPath = fs::read_link(format!(\"/proc/{}/exe\", realPid))?;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"execution_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `executionPath` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1330:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let executionPath = fs::read_link(format!(\"/proc/{}/exe\", realPid))?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `execution_path`\u001b[0m\n\n"}
{"message":"variable `executionPath` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"Process.rs","byte_start":38713,"byte_end":38726,"line_start":1331,"line_end":1331,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let executionPath = executionPath.as_path().to_str().unwrap().to_string();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"Process.rs","byte_start":38713,"byte_end":38726,"line_start":1331,"line_end":1331,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let executionPath = executionPath.as_path().to_str().unwrap().to_string();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"execution_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `executionPath` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mProcess.rs:1331:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let executionPath = executionPath.as_path().to_str().unwrap().to_string();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `execution_path`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":941,"byte_end":954,"line_start":29,"line_end":29,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":941,"byte_end":954,"line_start":29,"line_end":29,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:29:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_count`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":962,"byte_end":975,"line_start":30,"line_end":30,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":962,"byte_end":975,"line_start":30,"line_end":30,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:30:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_total`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1002,"byte_end":1019,"line_start":32,"line_end":32,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1002,"byte_end":1019,"line_start":32,"line_end":32,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:32:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_count`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1027,"byte_end":1044,"line_start":33,"line_end":33,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1027,"byte_end":1044,"line_start":33,"line_end":33,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:33:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_total`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1071,"byte_end":1087,"line_start":35,"line_end":35,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1071,"byte_end":1087,"line_start":35,"line_end":35,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:35:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_count`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1095,"byte_end":1111,"line_start":36,"line_end":36,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1095,"byte_end":1111,"line_start":36,"line_end":36,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:36:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeRealTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1138,"byte_end":1157,"line_start":38,"line_end":38,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1138,"byte_end":1157,"line_start":38,"line_end":38,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"cpu_runtime_real_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeRealTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:38:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeRealTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_real_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeVirtualTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1183,"byte_end":1205,"line_start":39,"line_end":39,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1183,"byte_end":1205,"line_start":39,"line_end":39,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"cpu_runtime_virtual_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeVirtualTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:39:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeVirtualTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_virtual_total`\u001b[0m\n\n"}
{"message":"structure field `commandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1250,"byte_end":1263,"line_start":43,"line_end":43,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1250,"byte_end":1263,"line_start":43,"line_end":43,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `commandString` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:43:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    commandString: [u8; Self::COMMAND_LENGTH],\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"structure field `schedulingDiscipline` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1294,"byte_end":1314,"line_start":44,"line_end":44,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1294,"byte_end":1314,"line_start":44,"line_end":44,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"scheduling_discipline","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `schedulingDiscipline` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:44:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schedulingDiscipline: u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scheduling_discipline`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1396,"byte_end":1405,"line_start":52,"line_end":52,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1396,"byte_end":1405,"line_start":52,"line_end":52,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:52:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parentPid: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `beginTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1414,"byte_end":1423,"line_start":54,"line_end":54,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1414,"byte_end":1423,"line_start":54,"line_end":54,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"begin_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:54:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime: u32,    // in seconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time`\u001b[0m\n\n"}
{"message":"structure field `elapsedTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1465,"byte_end":1476,"line_start":56,"line_end":56,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1465,"byte_end":1476,"line_start":56,"line_end":56,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"elapsed_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `elapsedTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:56:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    elapsedTime: u64,    // in microseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `elapsed_time`\u001b[0m\n\n"}
{"message":"structure field `userCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1504,"byte_end":1515,"line_start":58,"line_end":58,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1504,"byte_end":1515,"line_start":58,"line_end":58,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userCpuTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:58:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `systemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1542,"byte_end":1555,"line_start":59,"line_end":59,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1542,"byte_end":1555,"line_start":59,"line_end":59,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:59:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `minorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1583,"byte_end":1598,"line_start":61,"line_end":61,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1583,"byte_end":1598,"line_start":61,"line_end":61,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"minor_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:61:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    minorFaultCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minor_fault_count`\u001b[0m\n\n"}
{"message":"structure field `majorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1606,"byte_end":1621,"line_start":62,"line_end":62,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1606,"byte_end":1621,"line_start":62,"line_end":62,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"major_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `majorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:62:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    majorFaultCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `major_fault_count`\u001b[0m\n\n"}
{"message":"structure field `accumulatedRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1662,"byte_end":1676,"line_start":66,"line_end":66,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1662,"byte_end":1676,"line_start":66,"line_end":66,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedRss` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:66:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedRss: u64,    // in MB\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_rss`\u001b[0m\n\n"}
{"message":"structure field `accumulatedVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1693,"byte_end":1707,"line_start":67,"line_end":67,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1693,"byte_end":1707,"line_start":67,"line_end":67,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedVss` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:67:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedVss: u64,    // in MB\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_vss`\u001b[0m\n\n"}
{"message":"structure field `highWaterRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1725,"byte_end":1737,"line_start":69,"line_end":69,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1725,"byte_end":1737,"line_start":69,"line_end":69,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterRss` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:69:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterRss: u64,    // in KB\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_rss`\u001b[0m\n\n"}
{"message":"structure field `highWaterVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1754,"byte_end":1766,"line_start":70,"line_end":70,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1754,"byte_end":1766,"line_start":70,"line_end":70,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterVss` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:70:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterVss: u64,    // in KB\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_vss`\u001b[0m\n\n"}
{"message":"structure field `ioReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1784,"byte_end":1795,"line_start":72,"line_end":72,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1784,"byte_end":1795,"line_start":72,"line_end":72,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"io_read_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioReadBytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:72:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioReadBytes: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_read_bytes`\u001b[0m\n\n"}
{"message":"structure field `ioWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1803,"byte_end":1815,"line_start":73,"line_end":73,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1803,"byte_end":1815,"line_start":73,"line_end":73,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"io_write_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:73:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioWriteBytes: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_write_bytes`\u001b[0m\n\n"}
{"message":"structure field `readSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1824,"byte_end":1840,"line_start":75,"line_end":75,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1824,"byte_end":1840,"line_start":75,"line_end":75,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"read_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `readSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:75:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    readSyscallCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `writeSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1848,"byte_end":1865,"line_start":76,"line_end":76,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1848,"byte_end":1865,"line_start":76,"line_end":76,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"write_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `writeSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:76:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeSyscallCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `blockIOReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1908,"byte_end":1924,"line_start":80,"line_end":80,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1908,"byte_end":1924,"line_start":80,"line_end":80,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"block_ioread_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOReadBytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:80:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOReadBytes: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_ioread_bytes`\u001b[0m\n\n"}
{"message":"structure field `blockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1932,"byte_end":1949,"line_start":81,"line_end":81,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1932,"byte_end":1949,"line_start":81,"line_end":81,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:81:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOWriteBytes: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `cancelledBlockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1957,"byte_end":1983,"line_start":82,"line_end":82,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1957,"byte_end":1983,"line_start":82,"line_end":82,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"cancelled_block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cancelledBlockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:82:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cancelledBlockIOWriteBytes: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cancelled_block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `voluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":1992,"byte_end":2016,"line_start":84,"line_end":84,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":1992,"byte_end":2016,"line_start":84,"line_end":84,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"voluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `voluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:84:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    voluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `voluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `nonvoluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2024,"byte_end":2051,"line_start":85,"line_end":85,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2024,"byte_end":2051,"line_start":85,"line_end":85,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":"nonvoluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nonvoluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:85:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    nonvoluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nonvoluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `userTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2060,"byte_end":2074,"line_start":87,"line_end":87,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2060,"byte_end":2074,"line_start":87,"line_end":87,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"user_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:87:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userTimeScaled: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `systemTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2082,"byte_end":2098,"line_start":88,"line_end":88,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2082,"byte_end":2098,"line_start":88,"line_end":88,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"system_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:88:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemTimeScaled: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `runRealTotalScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2106,"byte_end":2124,"line_start":89,"line_end":89,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2106,"byte_end":2124,"line_start":89,"line_end":89,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"run_real_total_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `runRealTotalScaled` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:89:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    runRealTotalScaled: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `run_real_total_scaled`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2133,"byte_end":2152,"line_start":91,"line_end":91,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2133,"byte_end":2152,"line_start":91,"line_end":91,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayCount` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:91:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayCount: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2160,"byte_end":2179,"line_start":92,"line_end":92,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2160,"byte_end":2179,"line_start":92,"line_end":92,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:92:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayTotal: u64,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_total`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2338,"byte_end":2349,"line_start":101,"line_end":101,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2338,"byte_end":2349,"line_start":101,"line_end":101,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:101:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2534,"byte_end":2547,"line_start":108,"line_end":108,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2534,"byte_end":2547,"line_start":108,"line_end":108,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:108:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `CommandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":2968,"byte_end":2981,"line_start":126,"line_end":126,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":2968,"byte_end":2981,"line_start":126,"line_end":126,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CommandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:126:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CommandString (&self) -> String\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"method `ToTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":3082,"byte_end":3093,"line_start":131,"line_end":131,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":3082,"byte_end":3093,"line_start":131,"line_end":131,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:131:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToTaskStats (&self) -> TaskStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_task_stats`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6743,"byte_end":6756,"line_start":216,"line_end":216,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6743,"byte_end":6756,"line_start":216,"line_end":216,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:216:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_count`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6764,"byte_end":6777,"line_start":217,"line_end":217,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6764,"byte_end":6777,"line_start":217,"line_end":217,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:217:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_total`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6804,"byte_end":6821,"line_start":219,"line_end":219,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6804,"byte_end":6821,"line_start":219,"line_end":219,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:219:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_count`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6829,"byte_end":6846,"line_start":220,"line_end":220,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6829,"byte_end":6846,"line_start":220,"line_end":220,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:220:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_total`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6873,"byte_end":6889,"line_start":222,"line_end":222,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6873,"byte_end":6889,"line_start":222,"line_end":222,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:222:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_count`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6897,"byte_end":6913,"line_start":223,"line_end":223,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6897,"byte_end":6913,"line_start":223,"line_end":223,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:223:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeRealTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6940,"byte_end":6959,"line_start":225,"line_end":225,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6940,"byte_end":6959,"line_start":225,"line_end":225,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"cpu_runtime_real_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeRealTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:225:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeRealTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_real_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeVirtualTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":6985,"byte_end":7007,"line_start":226,"line_end":226,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":6985,"byte_end":7007,"line_start":226,"line_end":226,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"cpu_runtime_virtual_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeVirtualTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:226:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeVirtualTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_virtual_total`\u001b[0m\n\n"}
{"message":"structure field `commandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7052,"byte_end":7065,"line_start":230,"line_end":230,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7052,"byte_end":7065,"line_start":230,"line_end":230,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `commandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:230:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    commandString: [u8; Self::COMMAND_LENGTH],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"structure field `schedulingDiscipline` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7096,"byte_end":7116,"line_start":231,"line_end":231,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7096,"byte_end":7116,"line_start":231,"line_end":231,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"scheduling_discipline","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `schedulingDiscipline` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:231:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schedulingDiscipline: u8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scheduling_discipline`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7198,"byte_end":7207,"line_start":239,"line_end":239,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7198,"byte_end":7207,"line_start":239,"line_end":239,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:239:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parentPid: u32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `beginTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7216,"byte_end":7225,"line_start":241,"line_end":241,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7216,"byte_end":7225,"line_start":241,"line_end":241,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"begin_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:241:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime: u32,    // in seconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time`\u001b[0m\n\n"}
{"message":"structure field `elapsedTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7267,"byte_end":7278,"line_start":243,"line_end":243,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7267,"byte_end":7278,"line_start":243,"line_end":243,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"elapsed_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `elapsedTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:243:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    elapsedTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `elapsed_time`\u001b[0m\n\n"}
{"message":"structure field `userCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7306,"byte_end":7317,"line_start":245,"line_end":245,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7306,"byte_end":7317,"line_start":245,"line_end":245,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:245:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `systemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7344,"byte_end":7357,"line_start":246,"line_end":246,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7344,"byte_end":7357,"line_start":246,"line_end":246,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:246:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `minorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7385,"byte_end":7400,"line_start":248,"line_end":248,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7385,"byte_end":7400,"line_start":248,"line_end":248,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"minor_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:248:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    minorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minor_fault_count`\u001b[0m\n\n"}
{"message":"structure field `majorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7408,"byte_end":7423,"line_start":249,"line_end":249,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7408,"byte_end":7423,"line_start":249,"line_end":249,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"major_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `majorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:249:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    majorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `major_fault_count`\u001b[0m\n\n"}
{"message":"structure field `accumulatedRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7464,"byte_end":7478,"line_start":253,"line_end":253,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7464,"byte_end":7478,"line_start":253,"line_end":253,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:253:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedRss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_rss`\u001b[0m\n\n"}
{"message":"structure field `accumulatedVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7495,"byte_end":7509,"line_start":254,"line_end":254,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7495,"byte_end":7509,"line_start":254,"line_end":254,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:254:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedVss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_vss`\u001b[0m\n\n"}
{"message":"structure field `highWaterRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7527,"byte_end":7539,"line_start":256,"line_end":256,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7527,"byte_end":7539,"line_start":256,"line_end":256,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:256:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterRss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_rss`\u001b[0m\n\n"}
{"message":"structure field `highWaterVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7556,"byte_end":7568,"line_start":257,"line_end":257,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7556,"byte_end":7568,"line_start":257,"line_end":257,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:257:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterVss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_vss`\u001b[0m\n\n"}
{"message":"structure field `ioReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7586,"byte_end":7597,"line_start":259,"line_end":259,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7586,"byte_end":7597,"line_start":259,"line_end":259,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"io_read_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:259:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_read_bytes`\u001b[0m\n\n"}
{"message":"structure field `ioWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7605,"byte_end":7617,"line_start":260,"line_end":260,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7605,"byte_end":7617,"line_start":260,"line_end":260,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"io_write_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:260:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_write_bytes`\u001b[0m\n\n"}
{"message":"structure field `readSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7626,"byte_end":7642,"line_start":262,"line_end":262,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7626,"byte_end":7642,"line_start":262,"line_end":262,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"read_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `readSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:262:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    readSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `writeSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7650,"byte_end":7667,"line_start":263,"line_end":263,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7650,"byte_end":7667,"line_start":263,"line_end":263,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"write_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `writeSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:263:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `blockIOReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7710,"byte_end":7726,"line_start":267,"line_end":267,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7710,"byte_end":7726,"line_start":267,"line_end":267,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"block_ioread_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:267:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_ioread_bytes`\u001b[0m\n\n"}
{"message":"structure field `blockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7734,"byte_end":7751,"line_start":268,"line_end":268,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7734,"byte_end":7751,"line_start":268,"line_end":268,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:268:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `cancelledBlockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7759,"byte_end":7785,"line_start":269,"line_end":269,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7759,"byte_end":7785,"line_start":269,"line_end":269,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"cancelled_block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cancelledBlockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:269:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cancelledBlockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cancelled_block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `voluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7794,"byte_end":7818,"line_start":271,"line_end":271,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7794,"byte_end":7818,"line_start":271,"line_end":271,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"voluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `voluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:271:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    voluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `voluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `nonvoluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7826,"byte_end":7853,"line_start":272,"line_end":272,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7826,"byte_end":7853,"line_start":272,"line_end":272,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":"nonvoluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nonvoluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:272:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    nonvoluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nonvoluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `userTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7862,"byte_end":7876,"line_start":274,"line_end":274,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7862,"byte_end":7876,"line_start":274,"line_end":274,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"user_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:274:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `systemTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7884,"byte_end":7900,"line_start":275,"line_end":275,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7884,"byte_end":7900,"line_start":275,"line_end":275,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"system_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:275:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `runRealTotalScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7908,"byte_end":7926,"line_start":276,"line_end":276,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7908,"byte_end":7926,"line_start":276,"line_end":276,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"run_real_total_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `runRealTotalScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:276:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    runRealTotalScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `run_real_total_scaled`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7935,"byte_end":7954,"line_start":278,"line_end":278,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7935,"byte_end":7954,"line_start":278,"line_end":278,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:278:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7962,"byte_end":7981,"line_start":279,"line_end":279,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7962,"byte_end":7981,"line_start":279,"line_end":279,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:279:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_total`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":7990,"byte_end":8009,"line_start":281,"line_end":281,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":7990,"byte_end":8009,"line_start":281,"line_end":281,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:281:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_count`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":8017,"byte_end":8036,"line_start":282,"line_end":282,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":8017,"byte_end":8036,"line_start":282,"line_end":282,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:282:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_total`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":8195,"byte_end":8206,"line_start":291,"line_end":291,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":8195,"byte_end":8206,"line_start":291,"line_end":291,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:291:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":8391,"byte_end":8404,"line_start":298,"line_end":298,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":8391,"byte_end":8404,"line_start":298,"line_end":298,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:298:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `CommandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":8825,"byte_end":8838,"line_start":316,"line_end":316,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":8825,"byte_end":8838,"line_start":316,"line_end":316,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CommandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:316:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CommandString (&self) -> String\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"method `ToTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":8939,"byte_end":8950,"line_start":321,"line_end":321,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":8939,"byte_end":8950,"line_start":321,"line_end":321,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:321:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToTaskStats (&self) -> TaskStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_task_stats`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12691,"byte_end":12704,"line_start":406,"line_end":406,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12691,"byte_end":12704,"line_start":406,"line_end":406,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:406:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_count`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12712,"byte_end":12725,"line_start":407,"line_end":407,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12712,"byte_end":12725,"line_start":407,"line_end":407,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:407:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_total`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12752,"byte_end":12769,"line_start":409,"line_end":409,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12752,"byte_end":12769,"line_start":409,"line_end":409,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:409:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_count`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12777,"byte_end":12794,"line_start":410,"line_end":410,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12777,"byte_end":12794,"line_start":410,"line_end":410,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:410:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_total`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12821,"byte_end":12837,"line_start":412,"line_end":412,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12821,"byte_end":12837,"line_start":412,"line_end":412,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:412:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_count`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12845,"byte_end":12861,"line_start":413,"line_end":413,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12845,"byte_end":12861,"line_start":413,"line_end":413,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:413:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeRealTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12888,"byte_end":12907,"line_start":415,"line_end":415,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12888,"byte_end":12907,"line_start":415,"line_end":415,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"cpu_runtime_real_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeRealTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:415:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeRealTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_real_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeVirtualTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":12933,"byte_end":12955,"line_start":416,"line_end":416,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":12933,"byte_end":12955,"line_start":416,"line_end":416,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"cpu_runtime_virtual_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeVirtualTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:416:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeVirtualTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_virtual_total`\u001b[0m\n\n"}
{"message":"structure field `commandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13000,"byte_end":13013,"line_start":420,"line_end":420,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13000,"byte_end":13013,"line_start":420,"line_end":420,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `commandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:420:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    commandString: [u8; Self::COMMAND_LENGTH],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"structure field `schedulingDiscipline` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13044,"byte_end":13064,"line_start":421,"line_end":421,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13044,"byte_end":13064,"line_start":421,"line_end":421,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"scheduling_discipline","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `schedulingDiscipline` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:421:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schedulingDiscipline: u8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scheduling_discipline`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13145,"byte_end":13154,"line_start":428,"line_end":428,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13145,"byte_end":13154,"line_start":428,"line_end":428,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:428:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parentPid: u32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `beginTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13163,"byte_end":13172,"line_start":430,"line_end":430,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13163,"byte_end":13172,"line_start":430,"line_end":430,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"begin_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:430:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime: u32,    // in seconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time`\u001b[0m\n\n"}
{"message":"structure field `elapsedTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13214,"byte_end":13225,"line_start":432,"line_end":432,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13214,"byte_end":13225,"line_start":432,"line_end":432,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"elapsed_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `elapsedTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:432:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    elapsedTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `elapsed_time`\u001b[0m\n\n"}
{"message":"structure field `userCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13253,"byte_end":13264,"line_start":434,"line_end":434,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13253,"byte_end":13264,"line_start":434,"line_end":434,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:434:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m434\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `systemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13291,"byte_end":13304,"line_start":435,"line_end":435,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13291,"byte_end":13304,"line_start":435,"line_end":435,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:435:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `minorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13332,"byte_end":13347,"line_start":437,"line_end":437,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13332,"byte_end":13347,"line_start":437,"line_end":437,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"minor_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:437:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    minorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minor_fault_count`\u001b[0m\n\n"}
{"message":"structure field `majorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13355,"byte_end":13370,"line_start":438,"line_end":438,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13355,"byte_end":13370,"line_start":438,"line_end":438,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"major_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `majorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:438:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    majorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `major_fault_count`\u001b[0m\n\n"}
{"message":"structure field `accumulatedRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13411,"byte_end":13425,"line_start":442,"line_end":442,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13411,"byte_end":13425,"line_start":442,"line_end":442,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:442:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedRss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_rss`\u001b[0m\n\n"}
{"message":"structure field `accumulatedVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13442,"byte_end":13456,"line_start":443,"line_end":443,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13442,"byte_end":13456,"line_start":443,"line_end":443,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:443:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedVss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_vss`\u001b[0m\n\n"}
{"message":"structure field `highWaterRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13474,"byte_end":13486,"line_start":445,"line_end":445,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13474,"byte_end":13486,"line_start":445,"line_end":445,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:445:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterRss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_rss`\u001b[0m\n\n"}
{"message":"structure field `highWaterVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13503,"byte_end":13515,"line_start":446,"line_end":446,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13503,"byte_end":13515,"line_start":446,"line_end":446,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:446:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterVss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_vss`\u001b[0m\n\n"}
{"message":"structure field `ioReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13533,"byte_end":13544,"line_start":448,"line_end":448,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13533,"byte_end":13544,"line_start":448,"line_end":448,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"io_read_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:448:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_read_bytes`\u001b[0m\n\n"}
{"message":"structure field `ioWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13552,"byte_end":13564,"line_start":449,"line_end":449,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13552,"byte_end":13564,"line_start":449,"line_end":449,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"io_write_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:449:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_write_bytes`\u001b[0m\n\n"}
{"message":"structure field `readSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13573,"byte_end":13589,"line_start":451,"line_end":451,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13573,"byte_end":13589,"line_start":451,"line_end":451,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"read_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `readSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:451:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    readSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `writeSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13597,"byte_end":13614,"line_start":452,"line_end":452,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13597,"byte_end":13614,"line_start":452,"line_end":452,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"write_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `writeSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:452:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m452\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `blockIOReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13657,"byte_end":13673,"line_start":456,"line_end":456,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13657,"byte_end":13673,"line_start":456,"line_end":456,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"block_ioread_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:456:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_ioread_bytes`\u001b[0m\n\n"}
{"message":"structure field `blockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13681,"byte_end":13698,"line_start":457,"line_end":457,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13681,"byte_end":13698,"line_start":457,"line_end":457,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:457:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m457\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `cancelledBlockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13706,"byte_end":13732,"line_start":458,"line_end":458,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13706,"byte_end":13732,"line_start":458,"line_end":458,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"cancelled_block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cancelledBlockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:458:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cancelledBlockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cancelled_block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `voluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13741,"byte_end":13765,"line_start":460,"line_end":460,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13741,"byte_end":13765,"line_start":460,"line_end":460,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"voluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `voluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:460:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    voluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `voluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `nonvoluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13773,"byte_end":13800,"line_start":461,"line_end":461,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13773,"byte_end":13800,"line_start":461,"line_end":461,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":"nonvoluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nonvoluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:461:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    nonvoluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nonvoluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `userTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13809,"byte_end":13823,"line_start":463,"line_end":463,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13809,"byte_end":13823,"line_start":463,"line_end":463,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"user_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:463:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m463\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `systemTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13831,"byte_end":13847,"line_start":464,"line_end":464,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13831,"byte_end":13847,"line_start":464,"line_end":464,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"system_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:464:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m464\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `runRealTotalScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13855,"byte_end":13873,"line_start":465,"line_end":465,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13855,"byte_end":13873,"line_start":465,"line_end":465,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"run_real_total_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `runRealTotalScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:465:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    runRealTotalScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `run_real_total_scaled`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13882,"byte_end":13901,"line_start":467,"line_end":467,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13882,"byte_end":13901,"line_start":467,"line_end":467,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:467:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m467\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13909,"byte_end":13928,"line_start":468,"line_end":468,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13909,"byte_end":13928,"line_start":468,"line_end":468,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:468:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_total`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13937,"byte_end":13956,"line_start":470,"line_end":470,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13937,"byte_end":13956,"line_start":470,"line_end":470,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:470:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_count`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13964,"byte_end":13983,"line_start":471,"line_end":471,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13964,"byte_end":13983,"line_start":471,"line_end":471,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:471:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_total`\u001b[0m\n\n"}
{"message":"structure field `beginTime64` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":13992,"byte_end":14003,"line_start":473,"line_end":473,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tbeginTime64: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":13992,"byte_end":14003,"line_start":473,"line_end":473,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tbeginTime64: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"begin_time64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime64` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:473:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m473\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime64: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time64`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":14166,"byte_end":14177,"line_start":483,"line_end":483,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":14166,"byte_end":14177,"line_start":483,"line_end":483,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:483:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m483\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":14362,"byte_end":14375,"line_start":490,"line_end":490,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":14362,"byte_end":14375,"line_start":490,"line_end":490,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:490:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `CommandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":14796,"byte_end":14809,"line_start":508,"line_end":508,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":14796,"byte_end":14809,"line_start":508,"line_end":508,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CommandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:508:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m508\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CommandString (&self) -> String\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"method `ToTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":14910,"byte_end":14921,"line_start":513,"line_end":513,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":14910,"byte_end":14921,"line_start":513,"line_end":513,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:513:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToTaskStats (&self) -> TaskStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_task_stats`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18662,"byte_end":18675,"line_start":598,"line_end":598,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18662,"byte_end":18675,"line_start":598,"line_end":598,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayCount: u64,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:598:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m598\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_count`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18683,"byte_end":18696,"line_start":599,"line_end":599,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18683,"byte_end":18696,"line_start":599,"line_end":599,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcpuDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"cpu_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:599:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m599\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_total`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18723,"byte_end":18740,"line_start":601,"line_end":601,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18723,"byte_end":18740,"line_start":601,"line_end":601,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:601:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_count`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18748,"byte_end":18765,"line_start":602,"line_end":602,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18748,"byte_end":18765,"line_start":602,"line_end":602,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIODelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iodelay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:602:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m602\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIODelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_total`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18792,"byte_end":18808,"line_start":604,"line_end":604,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18792,"byte_end":18808,"line_start":604,"line_end":604,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:604:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m604\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_count`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18816,"byte_end":18832,"line_start":605,"line_end":605,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18816,"byte_end":18832,"line_start":605,"line_end":605,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tswapinDelayTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"swapin_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:605:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m605\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    swapinDelayTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeRealTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18859,"byte_end":18878,"line_start":607,"line_end":607,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18859,"byte_end":18878,"line_start":607,"line_end":607,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tcpuRuntimeRealTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"cpu_runtime_real_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeRealTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:607:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeRealTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_real_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeVirtualTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18904,"byte_end":18926,"line_start":608,"line_end":608,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18904,"byte_end":18926,"line_start":608,"line_end":608,"column_start":2,"column_end":24,"is_primary":true,"text":[{"text":"\tcpuRuntimeVirtualTotal: u64,\t// in nanoseconds","highlight_start":2,"highlight_end":24}],"label":null,"suggested_replacement":"cpu_runtime_virtual_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeVirtualTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:608:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m608\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cpuRuntimeVirtualTotal: u64,    // in nanoseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_virtual_total`\u001b[0m\n\n"}
{"message":"structure field `commandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":18971,"byte_end":18984,"line_start":612,"line_end":612,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":18971,"byte_end":18984,"line_start":612,"line_end":612,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tcommandString: [u8; Self::COMMAND_LENGTH],","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `commandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:612:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m612\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    commandString: [u8; Self::COMMAND_LENGTH],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"structure field `schedulingDiscipline` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19015,"byte_end":19035,"line_start":613,"line_end":613,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19015,"byte_end":19035,"line_start":613,"line_end":613,"column_start":2,"column_end":22,"is_primary":true,"text":[{"text":"\tschedulingDiscipline: u8,","highlight_start":2,"highlight_end":22}],"label":null,"suggested_replacement":"scheduling_discipline","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `schedulingDiscipline` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:613:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m613\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    schedulingDiscipline: u8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scheduling_discipline`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19116,"byte_end":19125,"line_start":620,"line_end":620,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19116,"byte_end":19125,"line_start":620,"line_end":620,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tparentPid: u32,","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:620:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m620\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    parentPid: u32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `beginTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19134,"byte_end":19143,"line_start":622,"line_end":622,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19134,"byte_end":19143,"line_start":622,"line_end":622,"column_start":2,"column_end":11,"is_primary":true,"text":[{"text":"\tbeginTime: u32,\t// in seconds","highlight_start":2,"highlight_end":11}],"label":null,"suggested_replacement":"begin_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:622:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m622\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime: u32,    // in seconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time`\u001b[0m\n\n"}
{"message":"structure field `elapsedTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19185,"byte_end":19196,"line_start":624,"line_end":624,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19185,"byte_end":19196,"line_start":624,"line_end":624,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\telapsedTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"elapsed_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `elapsedTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:624:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m624\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    elapsedTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `elapsed_time`\u001b[0m\n\n"}
{"message":"structure field `userCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19224,"byte_end":19235,"line_start":626,"line_end":626,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19224,"byte_end":19235,"line_start":626,"line_end":626,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tuserCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:626:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m626\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `systemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19262,"byte_end":19275,"line_start":627,"line_end":627,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19262,"byte_end":19275,"line_start":627,"line_end":627,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tsystemCpuTime: u64,\t// in microseconds","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:627:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m627\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemCpuTime: u64,    // in microseconds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `minorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19303,"byte_end":19318,"line_start":629,"line_end":629,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19303,"byte_end":19318,"line_start":629,"line_end":629,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tminorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"minor_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:629:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m629\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    minorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minor_fault_count`\u001b[0m\n\n"}
{"message":"structure field `majorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19326,"byte_end":19341,"line_start":630,"line_end":630,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19326,"byte_end":19341,"line_start":630,"line_end":630,"column_start":2,"column_end":17,"is_primary":true,"text":[{"text":"\tmajorFaultCount: u64,","highlight_start":2,"highlight_end":17}],"label":null,"suggested_replacement":"major_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `majorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:630:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    majorFaultCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `major_fault_count`\u001b[0m\n\n"}
{"message":"structure field `accumulatedRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19382,"byte_end":19396,"line_start":634,"line_end":634,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19382,"byte_end":19396,"line_start":634,"line_end":634,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedRss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:634:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedRss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_rss`\u001b[0m\n\n"}
{"message":"structure field `accumulatedVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19413,"byte_end":19427,"line_start":635,"line_end":635,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19413,"byte_end":19427,"line_start":635,"line_end":635,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\taccumulatedVss: u64,\t// in MB","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"accumulated_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:635:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m635\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    accumulatedVss: u64,    // in MB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_vss`\u001b[0m\n\n"}
{"message":"structure field `highWaterRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19445,"byte_end":19457,"line_start":637,"line_end":637,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19445,"byte_end":19457,"line_start":637,"line_end":637,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterRss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:637:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m637\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterRss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_rss`\u001b[0m\n\n"}
{"message":"structure field `highWaterVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19474,"byte_end":19486,"line_start":638,"line_end":638,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19474,"byte_end":19486,"line_start":638,"line_end":638,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\thighWaterVss: u64,\t// in KB","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"high_water_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:638:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m638\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    highWaterVss: u64,    // in KB\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_vss`\u001b[0m\n\n"}
{"message":"structure field `ioReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19504,"byte_end":19515,"line_start":640,"line_end":640,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19504,"byte_end":19515,"line_start":640,"line_end":640,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tioReadBytes: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"io_read_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:640:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m640\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_read_bytes`\u001b[0m\n\n"}
{"message":"structure field `ioWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19523,"byte_end":19535,"line_start":641,"line_end":641,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19523,"byte_end":19535,"line_start":641,"line_end":641,"column_start":2,"column_end":14,"is_primary":true,"text":[{"text":"\tioWriteBytes: u64,","highlight_start":2,"highlight_end":14}],"label":null,"suggested_replacement":"io_write_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:641:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m641\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ioWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_write_bytes`\u001b[0m\n\n"}
{"message":"structure field `readSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19544,"byte_end":19560,"line_start":643,"line_end":643,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19544,"byte_end":19560,"line_start":643,"line_end":643,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\treadSyscallCount: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"read_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `readSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:643:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m643\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    readSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `writeSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19568,"byte_end":19585,"line_start":644,"line_end":644,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19568,"byte_end":19585,"line_start":644,"line_end":644,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\twriteSyscallCount: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"write_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `writeSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:644:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    writeSyscallCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `blockIOReadBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19628,"byte_end":19644,"line_start":648,"line_end":648,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19628,"byte_end":19644,"line_start":648,"line_end":648,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tblockIOReadBytes: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"block_ioread_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOReadBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:648:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m648\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOReadBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_ioread_bytes`\u001b[0m\n\n"}
{"message":"structure field `blockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19652,"byte_end":19669,"line_start":649,"line_end":649,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19652,"byte_end":19669,"line_start":649,"line_end":649,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\tblockIOWriteBytes: u64,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:649:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m649\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    blockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `cancelledBlockIOWriteBytes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19677,"byte_end":19703,"line_start":650,"line_end":650,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19677,"byte_end":19703,"line_start":650,"line_end":650,"column_start":2,"column_end":28,"is_primary":true,"text":[{"text":"\tcancelledBlockIOWriteBytes: u64,","highlight_start":2,"highlight_end":28}],"label":null,"suggested_replacement":"cancelled_block_iowrite_bytes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cancelledBlockIOWriteBytes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:650:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    cancelledBlockIOWriteBytes: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cancelled_block_iowrite_bytes`\u001b[0m\n\n"}
{"message":"structure field `voluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19712,"byte_end":19736,"line_start":652,"line_end":652,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19712,"byte_end":19736,"line_start":652,"line_end":652,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"voluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `voluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:652:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    voluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `voluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `nonvoluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19744,"byte_end":19771,"line_start":653,"line_end":653,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19744,"byte_end":19771,"line_start":653,"line_end":653,"column_start":2,"column_end":29,"is_primary":true,"text":[{"text":"\tnonvoluntaryContextSwitches: u64,","highlight_start":2,"highlight_end":29}],"label":null,"suggested_replacement":"nonvoluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nonvoluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:653:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m653\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    nonvoluntaryContextSwitches: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nonvoluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `userTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19780,"byte_end":19794,"line_start":655,"line_end":655,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19780,"byte_end":19794,"line_start":655,"line_end":655,"column_start":2,"column_end":16,"is_primary":true,"text":[{"text":"\tuserTimeScaled: u64,","highlight_start":2,"highlight_end":16}],"label":null,"suggested_replacement":"user_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:655:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    userTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `systemTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19802,"byte_end":19818,"line_start":656,"line_end":656,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19802,"byte_end":19818,"line_start":656,"line_end":656,"column_start":2,"column_end":18,"is_primary":true,"text":[{"text":"\tsystemTimeScaled: u64,","highlight_start":2,"highlight_end":18}],"label":null,"suggested_replacement":"system_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:656:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    systemTimeScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `runRealTotalScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19826,"byte_end":19844,"line_start":657,"line_end":657,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19826,"byte_end":19844,"line_start":657,"line_end":657,"column_start":2,"column_end":20,"is_primary":true,"text":[{"text":"\trunRealTotalScaled: u64,","highlight_start":2,"highlight_end":20}],"label":null,"suggested_replacement":"run_real_total_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `runRealTotalScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:657:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m657\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    runRealTotalScaled: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `run_real_total_scaled`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19853,"byte_end":19872,"line_start":659,"line_end":659,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19853,"byte_end":19872,"line_start":659,"line_end":659,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:659:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m659\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19880,"byte_end":19899,"line_start":660,"line_end":660,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19880,"byte_end":19899,"line_start":660,"line_end":660,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tfreePagesDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"free_pages_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:660:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m660\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    freePagesDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_total`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19908,"byte_end":19927,"line_start":662,"line_end":662,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19908,"byte_end":19927,"line_start":662,"line_end":662,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayCount: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:662:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m662\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_count`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19935,"byte_end":19954,"line_start":663,"line_end":663,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19935,"byte_end":19954,"line_start":663,"line_end":663,"column_start":2,"column_end":21,"is_primary":true,"text":[{"text":"\tthrashingDelayTotal: u64,","highlight_start":2,"highlight_end":21}],"label":null,"suggested_replacement":"thrashing_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:663:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m663\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thrashingDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_total`\u001b[0m\n\n"}
{"message":"structure field `beginTime64` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19963,"byte_end":19974,"line_start":665,"line_end":665,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tbeginTime64: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19963,"byte_end":19974,"line_start":665,"line_end":665,"column_start":2,"column_end":13,"is_primary":true,"text":[{"text":"\tbeginTime64: u64,","highlight_start":2,"highlight_end":13}],"label":null,"suggested_replacement":"begin_time64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime64` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:665:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m665\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    beginTime64: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time64`\u001b[0m\n\n"}
{"message":"structure field `memoryCompactDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":19983,"byte_end":20006,"line_start":667,"line_end":667,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tmemoryCompactDelayCount: u64,","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":19983,"byte_end":20006,"line_start":667,"line_end":667,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tmemoryCompactDelayCount: u64,","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":"memory_compact_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memoryCompactDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:667:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m667\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    memoryCompactDelayCount: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `memory_compact_delay_count`\u001b[0m\n\n"}
{"message":"structure field `memoryCompactDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":20014,"byte_end":20037,"line_start":668,"line_end":668,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tmemoryCompactDelayTotal: u64,","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":20014,"byte_end":20037,"line_start":668,"line_end":668,"column_start":2,"column_end":25,"is_primary":true,"text":[{"text":"\tmemoryCompactDelayTotal: u64,","highlight_start":2,"highlight_end":25}],"label":null,"suggested_replacement":"memory_compact_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memoryCompactDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:668:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    memoryCompactDelayTotal: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `memory_compact_delay_total`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":20200,"byte_end":20211,"line_start":678,"line_end":678,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":20200,"byte_end":20211,"line_start":678,"line_end":678,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:678:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m678\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":20396,"byte_end":20409,"line_start":685,"line_end":685,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":20396,"byte_end":20409,"line_start":685,"line_end":685,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:685:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m685\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `CommandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":20830,"byte_end":20843,"line_start":703,"line_end":703,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":20830,"byte_end":20843,"line_start":703,"line_end":703,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn CommandString (&self) -> String","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `CommandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:703:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m703\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CommandString (&self) -> String\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"method `ToTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":20944,"byte_end":20955,"line_start":708,"line_end":708,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":20944,"byte_end":20955,"line_start":708,"line_end":708,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:708:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToTaskStats (&self) -> TaskStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_task_stats`\u001b[0m\n\n"}
{"message":"method `ToByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":24764,"byte_end":24775,"line_start":791,"line_end":791,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":24764,"byte_end":24775,"line_start":791,"line_end":791,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToByteArray (&self) -> Vec<u8>","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:791:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m791\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToByteArray (&self) -> Vec<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_byte_array`\u001b[0m\n\n"}
{"message":"method `FromByteArray` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":25009,"byte_end":25022,"line_start":802,"line_end":802,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":25009,"byte_end":25022,"line_start":802,"line_end":802,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"from_byte_array","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `FromByteArray` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:802:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m802\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn FromByteArray (buf: &[u8]) -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `from_byte_array`\u001b[0m\n\n"}
{"message":"method `ToTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":25510,"byte_end":25521,"line_start":817,"line_end":817,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":25510,"byte_end":25521,"line_start":817,"line_end":817,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"\tpub fn ToTaskStats (&self) -> TaskStats","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"to_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `ToTaskStats` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:817:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m817\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn ToTaskStats (&self) -> TaskStats\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `to_task_stats`\u001b[0m\n\n"}
{"message":"structure field `commandString` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":25804,"byte_end":25817,"line_start":833,"line_end":833,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub commandString: String,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":25804,"byte_end":25817,"line_start":833,"line_end":833,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub commandString: String,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"command_string","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `commandString` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:833:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m833\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub commandString: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `command_string`\u001b[0m\n\n"}
{"message":"structure field `parentPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":25877,"byte_end":25886,"line_start":837,"line_end":837,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub parentPid: Pid,","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":25877,"byte_end":25886,"line_start":837,"line_end":837,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub parentPid: Pid,","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":"parent_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `parentPid` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:837:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub parentPid: Pid,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `parent_pid`\u001b[0m\n\n"}
{"message":"structure field `beginTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":25985,"byte_end":25994,"line_start":843,"line_end":843,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub beginTime: SystemTime,","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":25985,"byte_end":25994,"line_start":843,"line_end":843,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"\tpub beginTime: SystemTime,","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":"begin_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `beginTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:843:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m843\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub beginTime: SystemTime,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `begin_time`\u001b[0m\n\n"}
{"message":"structure field `elapsedTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26013,"byte_end":26024,"line_start":844,"line_end":844,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub elapsedTime: TimeCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26013,"byte_end":26024,"line_start":844,"line_end":844,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub elapsedTime: TimeCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":"elapsed_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `elapsedTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:844:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m844\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub elapsedTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `elapsed_time`\u001b[0m\n\n"}
{"message":"structure field `schedulingDiscipline` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26042,"byte_end":26062,"line_start":845,"line_end":845,"column_start":6,"column_end":26,"is_primary":true,"text":[{"text":"\tpub schedulingDiscipline: u8,","highlight_start":6,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26042,"byte_end":26062,"line_start":845,"line_end":845,"column_start":6,"column_end":26,"is_primary":true,"text":[{"text":"\tpub schedulingDiscipline: u8,","highlight_start":6,"highlight_end":26}],"label":null,"suggested_replacement":"scheduling_discipline","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `schedulingDiscipline` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:845:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m845\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub schedulingDiscipline: u8,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scheduling_discipline`\u001b[0m\n\n"}
{"message":"structure field `userCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26074,"byte_end":26085,"line_start":847,"line_end":847,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub userCpuTime: TimeCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26074,"byte_end":26085,"line_start":847,"line_end":847,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub userCpuTime: TimeCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":"user_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:847:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub userCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `systemCpuTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26103,"byte_end":26116,"line_start":848,"line_end":848,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub systemCpuTime: TimeCount,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26103,"byte_end":26116,"line_start":848,"line_end":848,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub systemCpuTime: TimeCount,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"system_cpu_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemCpuTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:848:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m848\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub systemCpuTime: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_cpu_time`\u001b[0m\n\n"}
{"message":"structure field `accumulatedRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26135,"byte_end":26149,"line_start":850,"line_end":850,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub accumulatedRss: DataCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26135,"byte_end":26149,"line_start":850,"line_end":850,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub accumulatedRss: DataCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"accumulated_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:850:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m850\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub accumulatedRss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_rss`\u001b[0m\n\n"}
{"message":"structure field `accumulatedVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26167,"byte_end":26181,"line_start":851,"line_end":851,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub accumulatedVss: DataCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26167,"byte_end":26181,"line_start":851,"line_end":851,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub accumulatedVss: DataCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"accumulated_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `accumulatedVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:851:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m851\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub accumulatedVss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `accumulated_vss`\u001b[0m\n\n"}
{"message":"structure field `highWaterRss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26200,"byte_end":26212,"line_start":853,"line_end":853,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub highWaterRss: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26200,"byte_end":26212,"line_start":853,"line_end":853,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub highWaterRss: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":"high_water_rss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterRss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:853:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub highWaterRss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_rss`\u001b[0m\n\n"}
{"message":"structure field `highWaterVss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26230,"byte_end":26242,"line_start":854,"line_end":854,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub highWaterVss: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26230,"byte_end":26242,"line_start":854,"line_end":854,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub highWaterVss: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":"high_water_vss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `highWaterVss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:854:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m854\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub highWaterVss: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `high_water_vss`\u001b[0m\n\n"}
{"message":"structure field `ioRead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26261,"byte_end":26267,"line_start":856,"line_end":856,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"\tpub ioRead: DataCount,","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26261,"byte_end":26267,"line_start":856,"line_end":856,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"\tpub ioRead: DataCount,","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":"io_read","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioRead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:856:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub ioRead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_read`\u001b[0m\n\n"}
{"message":"structure field `ioWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26285,"byte_end":26292,"line_start":857,"line_end":857,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tpub ioWrite: DataCount,","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26285,"byte_end":26292,"line_start":857,"line_end":857,"column_start":6,"column_end":13,"is_primary":true,"text":[{"text":"\tpub ioWrite: DataCount,","highlight_start":6,"highlight_end":13}],"label":null,"suggested_replacement":"io_write","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `ioWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:857:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub ioWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `io_write`\u001b[0m\n\n"}
{"message":"structure field `readSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26311,"byte_end":26327,"line_start":859,"line_end":859,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub readSyscallCount: Count,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26311,"byte_end":26327,"line_start":859,"line_end":859,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub readSyscallCount: Count,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"read_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `readSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:859:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m859\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub readSyscallCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `writeSyscallCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26341,"byte_end":26358,"line_start":860,"line_end":860,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub writeSyscallCount: Count,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26341,"byte_end":26358,"line_start":860,"line_end":860,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub writeSyscallCount: Count,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":"write_syscall_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `writeSyscallCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:860:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m860\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub writeSyscallCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_syscall_count`\u001b[0m\n\n"}
{"message":"structure field `blockIORead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26373,"byte_end":26384,"line_start":862,"line_end":862,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub blockIORead: DataCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26373,"byte_end":26384,"line_start":862,"line_end":862,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"\tpub blockIORead: DataCount,","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":"block_ioread","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIORead` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:862:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m862\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub blockIORead: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_ioread`\u001b[0m\n\n"}
{"message":"structure field `blockIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26402,"byte_end":26414,"line_start":863,"line_end":863,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub blockIOWrite: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26402,"byte_end":26414,"line_start":863,"line_end":863,"column_start":6,"column_end":18,"is_primary":true,"text":[{"text":"\tpub blockIOWrite: DataCount,","highlight_start":6,"highlight_end":18}],"label":null,"suggested_replacement":"block_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:863:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m863\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub blockIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iowrite`\u001b[0m\n\n"}
{"message":"structure field `cancelledBlockIOWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26432,"byte_end":26453,"line_start":864,"line_end":864,"column_start":6,"column_end":27,"is_primary":true,"text":[{"text":"\tpub cancelledBlockIOWrite: DataCount,","highlight_start":6,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26432,"byte_end":26453,"line_start":864,"line_end":864,"column_start":6,"column_end":27,"is_primary":true,"text":[{"text":"\tpub cancelledBlockIOWrite: DataCount,","highlight_start":6,"highlight_end":27}],"label":null,"suggested_replacement":"cancelled_block_iowrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cancelledBlockIOWrite` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:864:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m864\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub cancelledBlockIOWrite: DataCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cancelled_block_iowrite`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26472,"byte_end":26485,"line_start":866,"line_end":866,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub cpuDelayCount: Count,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26472,"byte_end":26485,"line_start":866,"line_end":866,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub cpuDelayCount: Count,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"cpu_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:866:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub cpuDelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_count`\u001b[0m\n\n"}
{"message":"structure field `cpuDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26499,"byte_end":26512,"line_start":867,"line_end":867,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub cpuDelayTotal: TimeCount,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26499,"byte_end":26512,"line_start":867,"line_end":867,"column_start":6,"column_end":19,"is_primary":true,"text":[{"text":"\tpub cpuDelayTotal: TimeCount,","highlight_start":6,"highlight_end":19}],"label":null,"suggested_replacement":"cpu_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:867:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m867\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub cpuDelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_delay_total`\u001b[0m\n\n"}
{"message":"structure field `minorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26531,"byte_end":26546,"line_start":869,"line_end":869,"column_start":6,"column_end":21,"is_primary":true,"text":[{"text":"\tpub minorFaultCount: Count,","highlight_start":6,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26531,"byte_end":26546,"line_start":869,"line_end":869,"column_start":6,"column_end":21,"is_primary":true,"text":[{"text":"\tpub minorFaultCount: Count,","highlight_start":6,"highlight_end":21}],"label":null,"suggested_replacement":"minor_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:869:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m869\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub minorFaultCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minor_fault_count`\u001b[0m\n\n"}
{"message":"structure field `majorFaultCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26560,"byte_end":26575,"line_start":870,"line_end":870,"column_start":6,"column_end":21,"is_primary":true,"text":[{"text":"\tpub majorFaultCount: Count,","highlight_start":6,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26560,"byte_end":26575,"line_start":870,"line_end":870,"column_start":6,"column_end":21,"is_primary":true,"text":[{"text":"\tpub majorFaultCount: Count,","highlight_start":6,"highlight_end":21}],"label":null,"suggested_replacement":"major_fault_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `majorFaultCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:870:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub majorFaultCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `major_fault_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26590,"byte_end":26609,"line_start":872,"line_end":872,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub freePagesDelayCount: Count,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26590,"byte_end":26609,"line_start":872,"line_end":872,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub freePagesDelayCount: Count,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":"free_pages_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:872:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m872\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub freePagesDelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_count`\u001b[0m\n\n"}
{"message":"structure field `freePagesDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26623,"byte_end":26642,"line_start":873,"line_end":873,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub freePagesDelayTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26623,"byte_end":26642,"line_start":873,"line_end":873,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub freePagesDelayTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":"free_pages_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `freePagesDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:873:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub freePagesDelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `free_pages_delay_total`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26661,"byte_end":26680,"line_start":875,"line_end":875,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub thrashingDelayCount: Count,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26661,"byte_end":26680,"line_start":875,"line_end":875,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub thrashingDelayCount: Count,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":"thrashing_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:875:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m875\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub thrashingDelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_count`\u001b[0m\n\n"}
{"message":"structure field `thrashingDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26694,"byte_end":26713,"line_start":876,"line_end":876,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub thrashingDelayTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26694,"byte_end":26713,"line_start":876,"line_end":876,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub thrashingDelayTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":"thrashing_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `thrashingDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:876:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m876\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub thrashingDelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `thrashing_delay_total`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26732,"byte_end":26749,"line_start":878,"line_end":878,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub blockIODelayCount: Count,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26732,"byte_end":26749,"line_start":878,"line_end":878,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub blockIODelayCount: Count,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":"block_iodelay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:878:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m878\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub blockIODelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_count`\u001b[0m\n\n"}
{"message":"structure field `blockIODelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26763,"byte_end":26780,"line_start":879,"line_end":879,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub blockIODelayTotal: TimeCount,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26763,"byte_end":26780,"line_start":879,"line_end":879,"column_start":6,"column_end":23,"is_primary":true,"text":[{"text":"\tpub blockIODelayTotal: TimeCount,","highlight_start":6,"highlight_end":23}],"label":null,"suggested_replacement":"block_iodelay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockIODelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:879:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m879\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub blockIODelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_iodelay_total`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26799,"byte_end":26815,"line_start":881,"line_end":881,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub swapinDelayCount: Count,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26799,"byte_end":26815,"line_start":881,"line_end":881,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub swapinDelayCount: Count,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"swapin_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:881:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m881\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub swapinDelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_count`\u001b[0m\n\n"}
{"message":"structure field `swapinDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26829,"byte_end":26845,"line_start":882,"line_end":882,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub swapinDelayTotal: TimeCount,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26829,"byte_end":26845,"line_start":882,"line_end":882,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub swapinDelayTotal: TimeCount,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"swapin_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `swapinDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:882:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m882\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub swapinDelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `swapin_delay_total`\u001b[0m\n\n"}
{"message":"structure field `memoryCompactDelayCount` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26864,"byte_end":26887,"line_start":884,"line_end":884,"column_start":6,"column_end":29,"is_primary":true,"text":[{"text":"\tpub memoryCompactDelayCount: Count,","highlight_start":6,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26864,"byte_end":26887,"line_start":884,"line_end":884,"column_start":6,"column_end":29,"is_primary":true,"text":[{"text":"\tpub memoryCompactDelayCount: Count,","highlight_start":6,"highlight_end":29}],"label":null,"suggested_replacement":"memory_compact_delay_count","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memoryCompactDelayCount` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:884:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m884\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub memoryCompactDelayCount: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `memory_compact_delay_count`\u001b[0m\n\n"}
{"message":"structure field `memoryCompactDelayTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26901,"byte_end":26924,"line_start":885,"line_end":885,"column_start":6,"column_end":29,"is_primary":true,"text":[{"text":"\tpub memoryCompactDelayTotal: TimeCount,","highlight_start":6,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26901,"byte_end":26924,"line_start":885,"line_end":885,"column_start":6,"column_end":29,"is_primary":true,"text":[{"text":"\tpub memoryCompactDelayTotal: TimeCount,","highlight_start":6,"highlight_end":29}],"label":null,"suggested_replacement":"memory_compact_delay_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memoryCompactDelayTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:885:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m885\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub memoryCompactDelayTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `memory_compact_delay_total`\u001b[0m\n\n"}
{"message":"structure field `voluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26943,"byte_end":26967,"line_start":887,"line_end":887,"column_start":6,"column_end":30,"is_primary":true,"text":[{"text":"\tpub voluntaryContextSwitches: Count,","highlight_start":6,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26943,"byte_end":26967,"line_start":887,"line_end":887,"column_start":6,"column_end":30,"is_primary":true,"text":[{"text":"\tpub voluntaryContextSwitches: Count,","highlight_start":6,"highlight_end":30}],"label":null,"suggested_replacement":"voluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `voluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:887:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m887\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub voluntaryContextSwitches: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `voluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `nonvoluntaryContextSwitches` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":26981,"byte_end":27008,"line_start":888,"line_end":888,"column_start":6,"column_end":33,"is_primary":true,"text":[{"text":"\tpub nonvoluntaryContextSwitches: Count,","highlight_start":6,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":26981,"byte_end":27008,"line_start":888,"line_end":888,"column_start":6,"column_end":33,"is_primary":true,"text":[{"text":"\tpub nonvoluntaryContextSwitches: Count,","highlight_start":6,"highlight_end":33}],"label":null,"suggested_replacement":"nonvoluntary_context_switches","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nonvoluntaryContextSwitches` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:888:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m888\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub nonvoluntaryContextSwitches: Count,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nonvoluntary_context_switches`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeRealTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27023,"byte_end":27042,"line_start":890,"line_end":890,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub cpuRuntimeRealTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27023,"byte_end":27042,"line_start":890,"line_end":890,"column_start":6,"column_end":25,"is_primary":true,"text":[{"text":"\tpub cpuRuntimeRealTotal: TimeCount,","highlight_start":6,"highlight_end":25}],"label":null,"suggested_replacement":"cpu_runtime_real_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeRealTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:890:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m890\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub cpuRuntimeRealTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_real_total`\u001b[0m\n\n"}
{"message":"structure field `cpuRuntimeVirtualTotal` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27060,"byte_end":27082,"line_start":891,"line_end":891,"column_start":6,"column_end":28,"is_primary":true,"text":[{"text":"\tpub cpuRuntimeVirtualTotal: TimeCount,","highlight_start":6,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27060,"byte_end":27082,"line_start":891,"line_end":891,"column_start":6,"column_end":28,"is_primary":true,"text":[{"text":"\tpub cpuRuntimeVirtualTotal: TimeCount,","highlight_start":6,"highlight_end":28}],"label":null,"suggested_replacement":"cpu_runtime_virtual_total","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cpuRuntimeVirtualTotal` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:891:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m891\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub cpuRuntimeVirtualTotal: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cpu_runtime_virtual_total`\u001b[0m\n\n"}
{"message":"structure field `userTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27101,"byte_end":27115,"line_start":893,"line_end":893,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub userTimeScaled: TimeCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27101,"byte_end":27115,"line_start":893,"line_end":893,"column_start":6,"column_end":20,"is_primary":true,"text":[{"text":"\tpub userTimeScaled: TimeCount,","highlight_start":6,"highlight_end":20}],"label":null,"suggested_replacement":"user_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `userTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:893:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m893\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub userTimeScaled: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `user_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `systemTimeScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27133,"byte_end":27149,"line_start":894,"line_end":894,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub systemTimeScaled: TimeCount,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27133,"byte_end":27149,"line_start":894,"line_end":894,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tpub systemTimeScaled: TimeCount,","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"system_time_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `systemTimeScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:894:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m894\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub systemTimeScaled: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `system_time_scaled`\u001b[0m\n\n"}
{"message":"structure field `runRealTotalScaled` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27167,"byte_end":27185,"line_start":895,"line_end":895,"column_start":6,"column_end":24,"is_primary":true,"text":[{"text":"\tpub runRealTotalScaled: TimeCount,","highlight_start":6,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27167,"byte_end":27185,"line_start":895,"line_end":895,"column_start":6,"column_end":24,"is_primary":true,"text":[{"text":"\tpub runRealTotalScaled: TimeCount,","highlight_start":6,"highlight_end":24}],"label":null,"suggested_replacement":"run_real_total_scaled","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `runRealTotalScaled` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:895:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m895\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub runRealTotalScaled: TimeCount,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `run_real_total_scaled`\u001b[0m\n\n"}
{"message":"variable `taskStatsRaw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27272,"byte_end":27284,"line_start":905,"line_end":905,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"\tfn from (taskStatsRaw: TaskStatsRaw) -> Self","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27272,"byte_end":27284,"line_start":905,"line_end":905,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"\tfn from (taskStatsRaw: TaskStatsRaw) -> Self","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"task_stats_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsRaw` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:905:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m905\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from (taskStatsRaw: TaskStatsRaw) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_raw`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageCommand` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":27824,"byte_end":27852,"line_start":932,"line_end":932,"column_start":15,"column_end":43,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":27824,"byte_end":27852,"line_start":932,"line_end":932,"column_start":15,"column_end":43,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":43}],"label":null,"suggested_replacement":"generic_netlink_message_command","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageCommand` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:932:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m932\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessageCommand: GenericNetlinkMessageCommand) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_command`\u001b[0m\n\n"}
{"message":"structure field `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":28267,"byte_end":28280,"line_start":950,"line_end":950,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tattributeType: TaskStatsAttributeType,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":28267,"byte_end":28280,"line_start":950,"line_end":950,"column_start":2,"column_end":15,"is_primary":true,"text":[{"text":"\tattributeType: TaskStatsAttributeType,","highlight_start":2,"highlight_end":15}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:950:2\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m950\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    attributeType: TaskStatsAttributeType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":28362,"byte_end":28365,"line_start":956,"line_end":956,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":28362,"byte_end":28365,"line_start":956,"line_end":956,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:956:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":28367,"byte_end":28380,"line_start":956,"line_end":956,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":28367,"byte_end":28380,"line_start":956,"line_end":956,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:956:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (attributeType: TaskStatsAttributeType, payload: Vec<u8>) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":28492,"byte_end":28496,"line_start":965,"line_end":965,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsAttributeType { self.attributeType }","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":28492,"byte_end":28496,"line_start":965,"line_end":965,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsAttributeType { self.attributeType }","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:965:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type (&self) -> TaskStatsAttributeType { self.attributeType }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m965\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m (&self) -> TaskStatsAttributeType { self.attributeType }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":28841,"byte_end":28871,"line_start":978,"line_end":978,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"\tfn from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Self","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":28841,"byte_end":28871,"line_start":978,"line_end":978,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"\tfn from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Self","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":"generic_netlink_message_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageAttribute` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:978:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m978\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from (genericNetlinkMessageAttribute: GenericNetlinkMessageAttribute) -> Self\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_attribute`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":29162,"byte_end":29165,"line_start":990,"line_end":990,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u16) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":29162,"byte_end":29165,"line_start":990,"line_end":990,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (value: u16) -> Self { Self(value) }","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:990:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m990\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (value: u16) -> Self { Self(value) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessageAttributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":29480,"byte_end":29514,"line_start":1003,"line_end":1003,"column_start":11,"column_end":45,"is_primary":true,"text":[{"text":"\tfn from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Self","highlight_start":11,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":29480,"byte_end":29514,"line_start":1003,"line_end":1003,"column_start":11,"column_end":45,"is_primary":true,"text":[{"text":"\tfn from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Self","highlight_start":11,"highlight_end":45}],"label":null,"suggested_replacement":"generic_netlink_message_attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessageAttributeType` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1003:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1003\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from (genericNetlinkMessageAttributeType: GenericNetlinkMessageAttributeType) -> Self\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message_attribute_type`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":29825,"byte_end":29829,"line_start":1022,"line_end":1022,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsCommandAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":29825,"byte_end":29829,"line_start":1022,"line_end":1022,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsCommandAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1022:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1022\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type (&self) -> TaskStatsCommandAttributeType\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1022\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m (&self) -> TaskStatsCommandAttributeType\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":31787,"byte_end":31790,"line_start":1106,"line_end":1106,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (tid: Tid, stats: TaskStatsRaw) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":31787,"byte_end":31790,"line_start":1106,"line_end":1106,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (tid: Tid, stats: TaskStatsRaw) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1106:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (tid: Tid, stats: TaskStatsRaw) -> Self\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":32044,"byte_end":32047,"line_start":1126,"line_end":1126,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (pid: Pid, stats: TaskStatsRaw) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":32044,"byte_end":32047,"line_start":1126,"line_end":1126,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (pid: Pid, stats: TaskStatsRaw) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1126:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (pid: Pid, stats: TaskStatsRaw) -> Self\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"method `Type` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":32406,"byte_end":32410,"line_start":1151,"line_end":1151,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsResultAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"rename the identifier or convert it to a snake case raw identifier","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":32406,"byte_end":32410,"line_start":1151,"line_end":1151,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"\tpub fn Type (&self) -> TaskStatsResultAttributeType","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"r#type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Type` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1151:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Type (&self) -> TaskStatsResultAttributeType\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: rename the identifier or convert it to a snake case raw identifier\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn \u001b[0m\u001b[0m\u001b[38;5;10mr#type\u001b[0m\u001b[0m (&self) -> TaskStatsResultAttributeType\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~\u001b[0m\n\n"}
{"message":"variable `_aggregatePid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":33588,"byte_end":33601,"line_start":1188,"line_end":1188,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tSelf::AGGR_PID(_aggregatePid) =>","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":33588,"byte_end":33601,"line_start":1188,"line_end":1188,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tSelf::AGGR_PID(_aggregatePid) =>","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"_aggregate_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_aggregatePid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1188:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::AGGR_PID(_aggregatePid) =>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_aggregate_pid`\u001b[0m\n\n"}
{"message":"variable `_aggregateTgid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":33658,"byte_end":33672,"line_start":1192,"line_end":1192,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::AGGR_TGID(_aggregateTgid) =>","highlight_start":20,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":33658,"byte_end":33672,"line_start":1192,"line_end":1192,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"\t\t\tSelf::AGGR_TGID(_aggregateTgid) =>","highlight_start":20,"highlight_end":34}],"label":null,"suggested_replacement":"_aggregate_tgid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_aggregateTgid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1192:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::AGGR_TGID(_aggregateTgid) =>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_aggregate_tgid`\u001b[0m\n\n"}
{"message":"variable `taskStatsAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":33934,"byte_end":33952,"line_start":1208,"line_end":1208,"column_start":15,"column_end":33,"is_primary":true,"text":[{"text":"\tfn try_from (taskStatsAttribute: TaskStatsAttribute) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":33934,"byte_end":33952,"line_start":1208,"line_end":1208,"column_start":15,"column_end":33,"is_primary":true,"text":[{"text":"\tfn try_from (taskStatsAttribute: TaskStatsAttribute) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":33}],"label":null,"suggested_replacement":"task_stats_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsAttribute` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1208:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (taskStatsAttribute: TaskStatsAttribute) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_attribute`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":34012,"byte_end":34025,"line_start":1210,"line_end":1210,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType = taskStatsAttribute.Type ().try_into ()?;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":34012,"byte_end":34025,"line_start":1210,"line_end":1210,"column_start":7,"column_end":20,"is_primary":true,"text":[{"text":"\t\tlet attributeType = taskStatsAttribute.Type ().try_into ()?;","highlight_start":7,"highlight_end":20}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1210:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let attributeType = taskStatsAttribute.Type ().try_into ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `taskStatsAttributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":36075,"byte_end":36097,"line_start":1279,"line_end":1279,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"\tfn try_from (taskStatsAttributeType: TaskStatsAttributeType) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":36075,"byte_end":36097,"line_start":1279,"line_end":1279,"column_start":15,"column_end":37,"is_primary":true,"text":[{"text":"\tfn try_from (taskStatsAttributeType: TaskStatsAttributeType) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":37}],"label":null,"suggested_replacement":"task_stats_attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsAttributeType` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1279:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (taskStatsAttributeType: TaskStatsAttributeType) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_attribute_type`\u001b[0m\n\n"}
{"message":"structure field `familyId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":36757,"byte_end":36765,"line_start":1300,"line_end":1300,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tfamilyId: u16,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":36757,"byte_end":36765,"line_start":1300,"line_end":1300,"column_start":2,"column_end":10,"is_primary":true,"text":[{"text":"\tfamilyId: u16,","highlight_start":2,"highlight_end":10}],"label":null,"suggested_replacement":"family_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `familyId` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1300:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    familyId: u16,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `family_id`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":36845,"byte_end":36848,"line_start":1306,"line_end":1306,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (familyId: u16, command: TaskStatsCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":36845,"byte_end":36848,"line_start":1306,"line_end":1306,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New (familyId: u16, command: TaskStatsCommand) -> Self","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1306:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (familyId: u16, command: TaskStatsCommand) -> Self\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `familyId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":36850,"byte_end":36858,"line_start":1306,"line_end":1306,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn New (familyId: u16, command: TaskStatsCommand) -> Self","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":36850,"byte_end":36858,"line_start":1306,"line_end":1306,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"\tpub fn New (familyId: u16, command: TaskStatsCommand) -> Self","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":"family_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `familyId` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1306:14\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New (familyId: u16, command: TaskStatsCommand) -> Self\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `family_id`\u001b[0m\n\n"}
{"message":"method `AddCommandAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":36983,"byte_end":37002,"line_start":1316,"line_end":1316,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn AddCommandAttribute (&mut self, attribute: TaskStatsCommandAttribute)","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":36983,"byte_end":37002,"line_start":1316,"line_end":1316,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn AddCommandAttribute (&mut self, attribute: TaskStatsCommandAttribute)","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"add_command_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `AddCommandAttribute` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1316:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn AddCommandAttribute (&mut self, attribute: TaskStatsCommandAttribute)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `add_command_attribute`\u001b[0m\n\n"}
{"message":"method `GetResultAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":37112,"byte_end":37130,"line_start":1321,"line_end":1321,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":37112,"byte_end":37130,"line_start":1321,"line_end":1321,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"get_result_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetResultAttribute` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1321:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_result_attribute`\u001b[0m\n\n"}
{"message":"variable `attributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":37139,"byte_end":37152,"line_start":1321,"line_end":1321,"column_start":36,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>","highlight_start":36,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":37139,"byte_end":37152,"line_start":1321,"line_end":1321,"column_start":36,"column_end":49,"is_primary":true,"text":[{"text":"\tpub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>","highlight_start":36,"highlight_end":49}],"label":null,"suggested_replacement":"attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `attributeType` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1321:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetResultAttribute (&self, attributeType: TaskStatsResultAttributeType) -> Option<TaskStatsResultAttribute>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attribute_type`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":37505,"byte_end":37526,"line_start":1339,"line_end":1339,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (GenericNetlinkMessageType::New (self.familyId), self.command.into ());","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":37505,"byte_end":37526,"line_start":1339,"line_end":1339,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"\t\tlet mut genericNetlinkMessage = GenericNetlinkMessage::New (GenericNetlinkMessageType::New (self.familyId), self.command.into ());","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1339:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut genericNetlinkMessage = GenericNetlinkMessage::New (GenericNetlinkMessageType::New (self.familyId), self.command.into ());\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":37866,"byte_end":37887,"line_start":1354,"line_end":1354,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":37866,"byte_end":37887,"line_start":1354,"line_end":1354,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"\tfn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":"generic_netlink_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1354:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from (genericNetlinkMessage: GenericNetlinkMessage) -> Result<Self, Self::Error>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_message`\u001b[0m\n\n"}
{"message":"variable `familyId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":37950,"byte_end":37958,"line_start":1356,"line_end":1356,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"\t\tlet familyId: u16 = genericNetlinkMessage.MessageType ().into ();","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":37950,"byte_end":37958,"line_start":1356,"line_end":1356,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"\t\tlet familyId: u16 = genericNetlinkMessage.MessageType ().into ();","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"family_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `familyId` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1356:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let familyId: u16 = genericNetlinkMessage.MessageType ().into ();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `family_id`\u001b[0m\n\n"}
{"message":"structure field `genericNetlinkConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38355,"byte_end":38379,"line_start":1381,"line_end":1381,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tgenericNetlinkConnection: GenericNetlinkConnection,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38355,"byte_end":38379,"line_start":1381,"line_end":1381,"column_start":2,"column_end":26,"is_primary":true,"text":[{"text":"\tgenericNetlinkConnection: GenericNetlinkConnection,","highlight_start":2,"highlight_end":26}],"label":null,"suggested_replacement":"generic_netlink_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `genericNetlinkConnection` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1381:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    genericNetlinkConnection: GenericNetlinkConnection,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_connection`\u001b[0m\n\n"}
{"message":"structure field `taskStatsFamilyId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38408,"byte_end":38425,"line_start":1382,"line_end":1382,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\ttaskStatsFamilyId: u16,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38408,"byte_end":38425,"line_start":1382,"line_end":1382,"column_start":2,"column_end":19,"is_primary":true,"text":[{"text":"\ttaskStatsFamilyId: u16,","highlight_start":2,"highlight_end":19}],"label":null,"suggested_replacement":"task_stats_family_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `taskStatsFamilyId` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1382:2\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1382\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    taskStatsFamilyId: u16,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_family_id`\u001b[0m\n\n"}
{"message":"method `New` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38529,"byte_end":38532,"line_start":1389,"line_end":1389,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38529,"byte_end":38532,"line_start":1389,"line_end":1389,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"\tpub fn New () -> Result<Self, TaskStatsError>","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"new","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `New` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1389:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn New () -> Result<Self, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new`\u001b[0m\n\n"}
{"message":"variable `genericNetlinkConnection` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38577,"byte_end":38601,"line_start":1391,"line_end":1391,"column_start":7,"column_end":31,"is_primary":true,"text":[{"text":"\t\tlet genericNetlinkConnection = GenericNetlinkConnection:: New ()?;","highlight_start":7,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38577,"byte_end":38601,"line_start":1391,"line_end":1391,"column_start":7,"column_end":31,"is_primary":true,"text":[{"text":"\t\tlet genericNetlinkConnection = GenericNetlinkConnection:: New ()?;","highlight_start":7,"highlight_end":31}],"label":null,"suggested_replacement":"generic_netlink_connection","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `genericNetlinkConnection` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1391:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let genericNetlinkConnection = GenericNetlinkConnection:: New ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_netlink_connection`\u001b[0m\n\n"}
{"message":"variable `getFamilyIdMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38651,"byte_end":38669,"line_start":1393,"line_end":1393,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"\t\tlet mut getFamilyIdMessage = GenericNetlinkControlMessage::New (GenericNetlinkControlMessageCommand::GET_FAMILY_ID);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38651,"byte_end":38669,"line_start":1393,"line_end":1393,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"\t\tlet mut getFamilyIdMessage = GenericNetlinkControlMessage::New (GenericNetlinkControlMessageCommand::GET_FAMILY_ID);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"get_family_id_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `getFamilyIdMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1393:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut getFamilyIdMessage = GenericNetlinkControlMessage::New (GenericNetlinkControlMessageCommand::GET_FAMILY_ID);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_family_id_message`\u001b[0m\n\n"}
{"message":"variable `respondMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":38971,"byte_end":38985,"line_start":1399,"line_end":1399,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage = genericNetlinkConnection.Recv ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":38971,"byte_end":38985,"line_start":1399,"line_end":1399,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage = genericNetlinkConnection.Recv ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"respond_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `respondMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1399:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let respondMessage = genericNetlinkConnection.Recv ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `respond_message`\u001b[0m\n\n"}
{"message":"variable `respondMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39029,"byte_end":39043,"line_start":1400,"line_end":1400,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: GenericNetlinkControlMessage = respondMessage.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39029,"byte_end":39043,"line_start":1400,"line_end":1400,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: GenericNetlinkControlMessage = respondMessage.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"respond_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `respondMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1400:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let respondMessage: GenericNetlinkControlMessage = respondMessage.try_into ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `respond_message`\u001b[0m\n\n"}
{"message":"variable `familyId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39164,"byte_end":39172,"line_start":1402,"line_end":1402,"column_start":59,"column_end":67,"is_primary":true,"text":[{"text":"\t\tif let GenericNetlinkControlMessageAttribute::FAMILY_ID(familyId) = respondMessage.GetControlAttribute (GenericNetlinkControlMessageAttributeType::FAMILY_ID).unwrap ()","highlight_start":59,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39164,"byte_end":39172,"line_start":1402,"line_end":1402,"column_start":59,"column_end":67,"is_primary":true,"text":[{"text":"\t\tif let GenericNetlinkControlMessageAttribute::FAMILY_ID(familyId) = respondMessage.GetControlAttribute (GenericNetlinkControlMessageAttributeType::FAMILY_ID).unwrap ()","highlight_start":59,"highlight_end":67}],"label":null,"suggested_replacement":"family_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `familyId` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1402:59\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   if let GenericNetlinkControlMessageAttribute::FAMILY_ID(familyId) = respondMessage.GetControlAttribute (GenericNetlinkControlMessag\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `family_id`\u001b[0m\n\n"}
{"message":"method `GetThreadTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39440,"byte_end":39458,"line_start":1416,"line_end":1416,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39440,"byte_end":39458,"line_start":1416,"line_end":1416,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"\tpub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"get_thread_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetThreadTaskStats` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1416:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_thread_task_stats`\u001b[0m\n\n"}
{"message":"variable `realTid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39467,"byte_end":39474,"line_start":1416,"line_end":1416,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"\tpub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39467,"byte_end":39474,"line_start":1416,"line_end":1416,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"\tpub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":"real_tid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realTid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1416:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetThreadTaskStats (&self, realTid: Tid) -> Result<TaskStats, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_tid`\u001b[0m\n\n"}
{"message":"variable `taskStatsMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39531,"byte_end":39547,"line_start":1418,"line_end":1418,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39531,"byte_end":39547,"line_start":1418,"line_end":1418,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"task_stats_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1418:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_message`\u001b[0m\n\n"}
{"message":"variable `respondMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":39778,"byte_end":39792,"line_start":1423,"line_end":1423,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":39778,"byte_end":39792,"line_start":1423,"line_end":1423,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"respond_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `respondMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1423:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `respond_message`\u001b[0m\n\n"}
{"message":"method `GetProcessTaskStats` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":40396,"byte_end":40415,"line_start":1449,"line_end":1449,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":40396,"byte_end":40415,"line_start":1449,"line_end":1449,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"\tpub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"get_process_task_stats","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `GetProcessTaskStats` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1449:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_process_task_stats`\u001b[0m\n\n"}
{"message":"variable `realPid` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":40424,"byte_end":40431,"line_start":1449,"line_end":1449,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"\tpub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":40424,"byte_end":40431,"line_start":1449,"line_end":1449,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"\tpub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":"real_pid","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `realPid` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1449:37\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn GetProcessTaskStats (&self, realPid: Pid) -> Result<TaskStats, TaskStatsError>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `real_pid`\u001b[0m\n\n"}
{"message":"variable `taskStatsMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":40488,"byte_end":40504,"line_start":1451,"line_end":1451,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":40488,"byte_end":40504,"line_start":1451,"line_end":1451,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"\t\tlet mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":"task_stats_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1451:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut taskStatsMessage = TaskStatsMessage::New (self.taskStatsFamilyId, TaskStatsCommand::GET);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_message`\u001b[0m\n\n"}
{"message":"variable `respondMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":40736,"byte_end":40750,"line_start":1456,"line_end":1456,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":40736,"byte_end":40750,"line_start":1456,"line_end":1456,"column_start":7,"column_end":21,"is_primary":true,"text":[{"text":"\t\tlet respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;","highlight_start":7,"highlight_end":21}],"label":null,"suggested_replacement":"respond_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `respondMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1456:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let respondMessage: TaskStatsMessage = self.genericNetlinkConnection.Recv ()?.try_into ()?;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `respond_message`\u001b[0m\n\n"}
{"message":"variable `taskStatsMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":42344,"byte_end":42360,"line_start":1511,"line_end":1511,"column_start":32,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tSelf::NO_AGGR_PID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_PID attribute: {:?}\", taskStatsMessage)),","highlight_start":32,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":42344,"byte_end":42360,"line_start":1511,"line_end":1511,"column_start":32,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tSelf::NO_AGGR_PID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_PID attribute: {:?}\", taskStatsMessage)),","highlight_start":32,"highlight_end":48}],"label":null,"suggested_replacement":"task_stats_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1511:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::NO_AGGR_PID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_PID attribute: {:?}\", taskStatsMessage)),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_message`\u001b[0m\n\n"}
{"message":"variable `taskStatsMessage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":42471,"byte_end":42487,"line_start":1512,"line_end":1512,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"\t\t\tSelf::NO_AGGR_TGID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_TGID attribute: {:?}\", taskStatsMessage)),","highlight_start":33,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":42471,"byte_end":42487,"line_start":1512,"line_end":1512,"column_start":33,"column_end":49,"is_primary":true,"text":[{"text":"\t\t\tSelf::NO_AGGR_TGID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_TGID attribute: {:?}\", taskStatsMessage)),","highlight_start":33,"highlight_end":49}],"label":null,"suggested_replacement":"task_stats_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsMessage` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1512:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Self::NO_AGGR_TGID_ATTRIBUTE(taskStatsMessage) => String::from (format! (\"No AGGR_TGID attribute: {:?}\", taskStatsMessage)),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_message`\u001b[0m\n\n"}
{"message":"variable `taskStatsAttributeType` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":42606,"byte_end":42628,"line_start":1513,"line_end":1513,"column_start":40,"column_end":62,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_RESULT_ATTRIBUTE_TYPE(taskStatsAttributeType) => String::from (format! (\"Unknown result attribute type: {:?}\", taskStatsAttributeType)),","highlight_start":40,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":42606,"byte_end":42628,"line_start":1513,"line_end":1513,"column_start":40,"column_end":62,"is_primary":true,"text":[{"text":"\t\t\tSelf::UNKNOWN_RESULT_ATTRIBUTE_TYPE(taskStatsAttributeType) => String::from (format! (\"Unknown result attribute type: {:?}\", taskStatsAttributeType)),","highlight_start":40,"highlight_end":62}],"label":null,"suggested_replacement":"task_stats_attribute_type","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsAttributeType` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1513:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mSULT_ATTRIBUTE_TYPE(taskStatsAttributeType) => String::from (format! (\"Unknown result attribute type: {:?}\", taskStatsAttributeType)),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_attribute_type`\u001b[0m\n\n"}
{"message":"variable `taskStatsResultAttribute` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"taskstat.rs","byte_start":43025,"byte_end":43049,"line_start":1517,"line_end":1517,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"\t\t\tSelf::WRONG_RESULT_TYPE(taskStatsResultAttribute) => String::from (format! (\"Wrong taskstats result attribute type: {:?}\", taskStatsResultAttribute)),","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"taskstat.rs","byte_start":43025,"byte_end":43049,"line_start":1517,"line_end":1517,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"\t\t\tSelf::WRONG_RESULT_TYPE(taskStatsResultAttribute) => String::from (format! (\"Wrong taskstats result attribute type: {:?}\", taskStatsResultAttribute)),","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":"task_stats_result_attribute","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `taskStatsResultAttribute` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtaskstat.rs:1517:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   Self::WRONG_RESULT_TYPE(taskStatsResultAttribute) => String::from (format! (\"Wrong taskstats result attribute type: {:?}\", taskStat\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `task_stats_result_attribute`\u001b[0m\n\n"}
{"message":"981 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 981 warnings emitted\u001b[0m\n\n"}
